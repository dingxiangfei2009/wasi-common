# Generated by cargo2nix 0.1.0
({
    pkgs
  , callPackage
  , mkRustCrate
  , config
  , ...
}:
  (self:
    {
      "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.4" = mkRustCrate {
        package-id = "aho-corasick 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "aho-corasick";
          version = "0.7.4";
          sha256 = "36b7aa1ccb7d7ea3f437cf025a2ab1c47cc6c1bc9fc84918ff449def12f5e282";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "memchr"
            ];
            extern-name = "memchr";
            package-id = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "aho-corasick";
            version = "0.7.4";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
            ];
            exclude = [
              "/aho-corasick-debug"
              "/bench"
              "/ci/*"
              "/.travis.yml"
            ];
            autotests = false;
            description = "Fast multiple substring searching.";
            homepage = "https://github.com/BurntSushi/aho-corasick";
            readme = "README.md";
            keywords = [
              "string"
              "search"
              "text"
              "aho"
              "multi"
            ];
            categories = [
              "text-processing"
            ];
            license = "Unlicense/MIT";
            repository = "https://github.com/BurntSushi/aho-corasick";
          };
          profile = {
            bench = {
              debug = true;
            };
            release = {
              debug = true;
            };
          };
          lib = {
            name = "aho_corasick";
          };
          dependencies = {
            memchr = {
              version = "2.2.0";
              default-features = false;
            };
          };
          dev-dependencies = {
            doc-comment = {
              version = "0.3.1";
            };
          };
          features = {
            default = [
              "std"
            ];
            std = [
              "memchr/use_std"
            ];
          };
          badges = {
            appveyor = {
              repository = "BurntSushi/regex-automata";
            };
            travis-ci = {
              repository = "BurntSushi/aho-corasick";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" = mkRustCrate {
        package-id = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "ansi_term";
          version = "0.11.0";
          sha256 = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "ansi_term";
            version = "0.11.0";
            authors = [
              "ogham@bsago.me"
              "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
              "Josh Triplett <josh@joshtriplett.org>"
            ];
            description = "Library for ANSI terminal colours and styles (bold, underline)";
            homepage = "https://github.com/ogham/rust-ansi-term";
            documentation = "https://docs.rs/ansi_term";
            readme = "README.md";
            license = "MIT";
          };
          lib = {
            name = "ansi_term";
          };
          target = {
            "cfg(target_os=\"windows\")" = {
              dependencies = {
                winapi = {
                  version = "0.3.4";
                  features = [
                    "errhandlingapi"
                    "consoleapi"
                    "processenv"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".argon2rs."0.2.5" = mkRustCrate {
        package-id = "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "argon2rs";
          version = "0.2.5";
          sha256 = "3f67b0b6a86dae6e67ff4ca2b6201396074996379fba2b92ff649126f37cb392";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "blake2-rfc"
            ];
            extern-name = "blake2_rfc";
            package-id = "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "scoped_threadpool"
            ];
            extern-name = "scoped_threadpool";
            package-id = "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "argon2rs";
            version = "0.2.5";
            authors = [
              "bryant <bryant@defrag.in>"
            ];
            description = "The pure Rust password hashing library that runs on Argon2.";
            documentation = "http://bryant.github.io/argon2rs/argon2rs/";
            readme = "README.md";
            keywords = [
              "crypto"
              "argon2"
              "argon2i"
              "argon2d"
              "hash"
            ];
            license = "MIT";
            repository = "https://github.com/bryant/argon2rs";
          };
          dependencies = {
            blake2-rfc = "0.2.16";
            scoped_threadpool = "0.1.7";
          };
          dev-dependencies = {
            cargon = {
              version = "0.0.1";
              path = "benches/cargon";
            };
          };
          features = {
            default = [
            ];
            simd = [
              "blake2-rfc/simd_asm"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.4.11" = mkRustCrate {
        package-id = "arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "arrayvec";
          version = "0.4.11";
          sha256 = "b8d73f9beda665eaa98ab9e4f7442bd4e7de6652587de55b2525e52e29c1b0ba";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "nodrop"
            ];
            extern-name = "nodrop";
            package-id = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "arrayvec";
            version = "0.4.11";
            authors = [
              "bluss"
            ];
            description = "A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements fixed capacity ArrayVec and ArrayString.";
            documentation = "https://docs.rs/arrayvec/";
            keywords = [
              "stack"
              "vector"
              "array"
              "data-structure"
              "no_std"
            ];
            categories = [
              "data-structures"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bluss/arrayvec";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "serde-1"
                  ];
                };
              };
              release = {
                no-dev-version = true;
              };
            };
          };
          bench = [
            {
              name = "extend";
              harness = false;
            }
            {
              name = "arraystring";
              harness = false;
            }
          ];
          dependencies = {
            nodrop = {
              version = "0.1.12";
              default-features = false;
            };
            serde = {
              version = "1.0";
              optional = true;
              default-features = false;
            };
          };
          dev-dependencies = {
            bencher = {
              version = "0.1.4";
            };
            matches = {
              version = "0.1";
            };
            serde_test = {
              version = "1.0";
            };
          };
          build-dependencies = {
          };
          features = {
            array-sizes-129-255 = [
            ];
            array-sizes-33-128 = [
            ];
            default = [
              "std"
            ];
            serde-1 = [
              "serde"
            ];
            std = [
            ];
            use_union = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.13" = mkRustCrate {
        package-id = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "atty";
          version = "0.2.13";
          sha256 = "1803c647a3ec87095e7ae7acfca019e98de5ec9a7d01343f611cf3152ed71a90";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "atty";
            version = "0.2.13";
            authors = [
              "softprops <d.tangren@gmail.com>"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "A simple interface for querying atty";
            homepage = "https://github.com/softprops/atty";
            documentation = "http://softprops.github.io/atty";
            readme = "README.md";
            keywords = [
              "terminal"
              "tty"
              "isatty"
            ];
            license = "MIT";
            repository = "https://github.com/softprops/atty";
          };
          target = {
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                  default-features = false;
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "consoleapi"
                    "processenv"
                    "minwinbase"
                    "minwindef"
                    "winbase"
                  ];
                };
              };
            };
          };
          badges = {
            travis-ci = {
              repository = "softprops/atty";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.5" = mkRustCrate {
        package-id = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "autocfg";
          version = "0.1.5";
          sha256 = "22130e92352b948e7e82a49cdb0aa94f2211761117f29e052dd397c1ac33542b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "autocfg";
            version = "0.1.5";
            authors = [
              "Josh Stone <cuviper@gmail.com>"
            ];
            description = "Automatic cfg for Rust compiler features";
            readme = "README.md";
            keywords = [
              "rustc"
              "build"
              "autoconf"
            ];
            categories = [
              "development-tools::build-utils"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/cuviper/autocfg";
          };
          dependencies = {
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.33" = mkRustCrate {
        package-id = "backtrace 0.3.33 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "backtrace";
          version = "0.3.33";
          sha256 = "88fb679bc9af8fa639198790a77f52d345fe13656c08b43afa9424c206b731c6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "backtrace-sys"
            ];
            extern-name = "backtrace_sys";
            package-id = "backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rustc-demangle"
            ];
            extern-name = "rustc_demangle";
            package-id = "rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "backtrace";
            version = "0.3.33";
            authors = [
              "The Rust Project Developers"
            ];
            autoexamples = true;
            autotests = true;
            description = "A library to acquire a stack trace (backtrace) at runtime in a Rust program.\n";
            homepage = "https://github.com/rust-lang/backtrace-rs";
            documentation = "https://docs.rs/backtrace";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang/backtrace-rs";
          };
          example = [
            {
              name = "backtrace";
              required-features = [
                "std"
              ];
            }
            {
              name = "raw";
              required-features = [
                "std"
              ];
            }
          ];
          test = [
            {
              name = "skip_inner_frames";
              required-features = [
                "std"
              ];
            }
            {
              name = "long_fn_name";
              required-features = [
                "std"
              ];
            }
            {
              name = "smoke";
              required-features = [
                "std"
              ];
              edition = "2018";
            }
            {
              name = "accuracy";
              required-features = [
                "std"
                "dbghelp"
                "libbacktrace"
                "libunwind"
              ];
              edition = "2018";
            }
          ];
          dependencies = {
            addr2line = {
              version = "0.9.0";
              features = [
                "std"
              ];
              optional = true;
              default-features = false;
            };
            backtrace-sys = {
              version = "0.1.17";
              optional = true;
            };
            cfg-if = {
              version = "0.1.6";
            };
            compiler_builtins = {
              version = "0.1.2";
              optional = true;
            };
            core = {
              version = "1.0.0";
              optional = true;
              package = "rustc-std-workspace-core";
            };
            cpp_demangle = {
              version = "0.2.3";
              optional = true;
              default-features = false;
            };
            findshlibs = {
              version = "0.5.0";
              optional = true;
            };
            goblin = {
              version = "0.0.23";
              features = [
                "std"
              ];
              optional = true;
              default-features = false;
            };
            libc = {
              version = "0.2.45";
              default-features = false;
            };
            memmap = {
              version = "0.7.0";
              optional = true;
            };
            rustc-demangle = {
              version = "0.1.4";
            };
            rustc-serialize = {
              version = "0.3";
              optional = true;
            };
            serde = {
              version = "1.0";
              features = [
                "derive"
              ];
              optional = true;
            };
          };
          features = {
            coresymbolication = [
            ];
            dbghelp = [
            ];
            default = [
              "std"
              "libunwind"
              "libbacktrace"
              "dladdr"
              "dbghelp"
            ];
            dladdr = [
            ];
            gimli-symbolize = [
              "addr2line"
              "findshlibs"
              "memmap"
              "goblin"
            ];
            kernel32 = [
            ];
            libbacktrace = [
              "backtrace-sys"
            ];
            libunwind = [
            ];
            rustc-dep-of-std = [
              "backtrace-sys/rustc-dep-of-std"
              "cfg-if/rustc-dep-of-std"
              "core"
              "compiler_builtins"
              "libc/rustc-dep-of-std"
              "rustc-demangle/rustc-dep-of-std"
            ];
            serialize-rustc = [
              "rustc-serialize"
            ];
            serialize-serde = [
              "serde"
            ];
            std = [
            ];
            unix-backtrace = [
            ];
            verify-winapi = [
              "winapi/dbghelp"
              "winapi/handleapi"
              "winapi/libloaderapi"
              "winapi/minwindef"
              "winapi/processthreadsapi"
              "winapi/winbase"
              "winapi/winnt"
            ];
          };
          target = {
            "cfg(not(any(target_os = \"macos\", windows)))" = {
              dependencies = {
                goblin = {
                  version = "0.0.23";
                  features = [
                    "elf32"
                    "elf64"
                  ];
                  optional = true;
                  default-features = false;
                };
              };
            };
            "cfg(target_os = \"macos\")" = {
              dependencies = {
                goblin = {
                  version = "0.0.23";
                  features = [
                    "mach32"
                    "mach64"
                  ];
                  optional = true;
                  default-features = false;
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                goblin = {
                  version = "0.0.23";
                  features = [
                    "pe32"
                    "pe64"
                  ];
                  optional = true;
                  default-features = false;
                };
                winapi = {
                  version = "0.3.3";
                  optional = true;
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".backtrace-sys."0.1.31" = mkRustCrate {
        package-id = "backtrace-sys 0.1.31 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "backtrace-sys";
          version = "0.1.31";
          sha256 = "82a830b4ef2d1124a711c71d263c5abdc710ef8e907bd508c88be475cebc422b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "backtrace-sys";
            version = "0.1.31";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            description = "Bindings to the libbacktrace gcc library\n";
            homepage = "https://github.com/alexcrichton/backtrace-rs";
            documentation = "http://alexcrichton.com/backtrace-rs";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/backtrace-rs";
          };
          dependencies = {
            compiler_builtins = {
              version = "0.1.2";
              optional = true;
            };
            core = {
              version = "1.0.0";
              optional = true;
              package = "rustc-std-workspace-core";
            };
            libc = {
              version = "0.2";
              default-features = false;
            };
          };
          build-dependencies = {
            cc = {
              version = "1.0.37";
            };
          };
          features = {
            rustc-dep-of-std = [
              "core"
              "compiler_builtins"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".base64."0.10.1" = mkRustCrate {
        package-id = "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "base64";
          version = "0.10.1";
          sha256 = "0b25d992356d2eb0ed82172f5248873db5560c4721f564b13cb5193bda5e668e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "byteorder"
            ];
            extern-name = "byteorder";
            package-id = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "base64";
            version = "0.10.1";
            authors = [
              "Alice Maz <alice@alicemaz.com>"
              "Marshall Pierce <marshall@mpierce.org>"
            ];
            description = "encodes and decodes base64 as bytes or utf8";
            documentation = "https://github.com/alicemaz/rust-base64/blob/master/README.md";
            readme = "README.md";
            keywords = [
              "base64"
              "utf8"
              "encode"
              "decode"
            ];
            categories = [
              "encoding"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alicemaz/rust-base64";
          };
          profile = {
            bench = {
              debug = true;
            };
          };
          bench = [
            {
              name = "benchmarks";
              harness = false;
            }
          ];
          dependencies = {
            byteorder = {
              version = "1.2.6";
            };
          };
          dev-dependencies = {
            criterion = {
              version = "0.2";
            };
            rand = {
              version = "0.6.1";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".bincode."1.1.4" = mkRustCrate {
        package-id = "bincode 1.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "bincode";
          version = "1.1.4";
          sha256 = "9f04a5e50dc80b3d5d35320889053637d15011aed5e66b66b37ae798c65da6f7";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "byteorder"
            ];
            extern-name = "byteorder";
            package-id = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "bincode";
            version = "1.1.4";
            authors = [
              "Ty Overby <ty@pre-alpha.com>"
              "Francesco Mazzoli <f@mazzo.li>"
              "David Tolnay <dtolnay@gmail.com>"
              "Daniel Griffen"
            ];
            build = "build.rs";
            exclude = [
              "logo.png"
              "tests/*"
              "examples/*"
              ".gitignore"
              ".travis.yml"
            ];
            publish = true;
            description = "A binary serialization / deserialization strategy that uses Serde for transforming structs into bytes and vice versa!";
            documentation = "https://docs.rs/bincode";
            readme = "./readme.md";
            keywords = [
              "binary"
              "encode"
              "decode"
              "serialize"
              "deserialize"
            ];
            categories = [
              "encoding"
              "network-programming"
            ];
            license = "MIT";
            repository = "https://github.com/TyOverby/bincode";
          };
          dependencies = {
            byteorder = {
              version = "1.3.0";
            };
            serde = {
              version = "1.0.63";
            };
          };
          dev-dependencies = {
            serde_bytes = {
              version = "0.11";
            };
            serde_derive = {
              version = "1.0.27";
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1.2";
            };
          };
          features = {
            i128 = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "TyOverby/bincode";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".bindgen."0.50.0" = mkRustCrate {
        package-id = "bindgen 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "bindgen";
          version = "0.50.0";
          sha256 = "65a913de3fa2fa95f2c593bb7e33b1be1ce1ce8a83f34b6bb02e6f01400b96cc";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cexpr"
            ];
            extern-name = "cexpr";
            package-id = "cexpr 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "clang-sys"
            ];
            extern-name = "clang_sys";
            package-id = "clang-sys 0.28.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "clap"
            ];
            extern-name = "clap";
            package-id = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "env_logger"
            ];
            extern-name = "env_logger";
            package-id = "env_logger 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "fxhash"
            ];
            extern-name = "fxhash";
            package-id = "fxhash 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "peeking_take_while"
            ];
            extern-name = "peeking_take_while";
            package-id = "peeking_take_while 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "regex"
            ];
            extern-name = "regex";
            package-id = "regex 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "shlex"
            ];
            extern-name = "shlex";
            package-id = "shlex 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "which"
            ];
            extern-name = "which";
            package-id = "which 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "bindgen";
            version = "0.50.0";
            authors = [
              "Jyun-Yan You <jyyou.tw@gmail.com>"
              "Emilio Cobos Álvarez <emilio@crisal.io>"
              "Nick Fitzgerald <fitzgen@gmail.com>"
              "The Servo project developers"
            ];
            build = "build.rs";
            include = [
              "LICENSE"
              "README.md"
              "Cargo.toml"
              "build.rs"
              "src/*.rs"
              "src/**/*.rs"
            ];
            description = "Automatically generates Rust FFI bindings to C and C++ libraries.";
            homepage = "https://rust-lang.github.io/rust-bindgen/";
            documentation = "https://docs.rs/bindgen";
            readme = "README.md";
            keywords = [
              "bindings"
              "ffi"
              "code-generation"
            ];
            categories = [
              "external-ffi-bindings"
              "development-tools::ffi"
            ];
            license = "BSD-3-Clause";
            repository = "https://github.com/rust-lang/rust-bindgen";
          };
          lib = {
            path = "src/lib.rs";
          };
          bin = [
            {
              name = "bindgen";
              path = "src/main.rs";
              doc = false;
              required-features = [
                "clap"
              ];
            }
          ];
          dependencies = {
            bitflags = {
              version = "1.0.3";
            };
            cexpr = {
              version = "0.3.3";
            };
            cfg-if = {
              version = "0.1.0";
            };
            clang-sys = {
              version = "0.28.0";
              features = [
                "runtime"
                "clang_6_0"
              ];
            };
            clap = {
              version = "2";
              optional = true;
            };
            env_logger = {
              version = "0.6";
              optional = true;
            };
            fxhash = {
              version = "0.2";
            };
            lazy_static = {
              version = "1";
            };
            log = {
              version = "0.4";
              optional = true;
            };
            peeking_take_while = {
              version = "0.1.2";
            };
            proc-macro2 = {
              version = "0.4";
              default-features = false;
            };
            quote = {
              version = "0.6";
              default-features = false;
            };
            regex = {
              version = "1.0";
            };
            shlex = {
              version = "0.1";
            };
            which = {
              version = ">=1.0, <3.0";
            };
          };
          dev-dependencies = {
            clap = {
              version = "2";
            };
            diff = {
              version = "0.1";
            };
            shlex = {
              version = "0.1";
            };
          };
          features = {
            default = [
              "logging"
              "clap"
            ];
            logging = [
              "env_logger"
              "log"
            ];
            static = [
            ];
            testing_only_docs = [
            ];
            testing_only_extra_assertions = [
            ];
            testing_only_libclang_3_8 = [
            ];
            testing_only_libclang_3_9 = [
            ];
            testing_only_libclang_4 = [
            ];
            testing_only_libclang_5 = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "rust-lang/rust-bindgen";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.1.0" = mkRustCrate {
        package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "bitflags";
          version = "1.1.0";
          sha256 = "3d155346769a6855b86399e9bc3814ab343cd3d62c7e985113d46a0ec3c281fd";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "bitflags";
            version = "1.1.0";
            authors = [
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              ".travis.yml"
              "appveyor.yml"
              "bors.toml"
            ];
            description = "A macro to generate structures which behave like bitflags.\n";
            homepage = "https://github.com/bitflags/bitflags";
            documentation = "https://docs.rs/bitflags";
            readme = "README.md";
            keywords = [
              "bit"
              "bitmask"
              "bitflags"
              "flags"
            ];
            categories = [
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bitflags/bitflags";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "example_generated"
                  ];
                };
              };
            };
          };
          features = {
            default = [
            ];
            example_generated = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "bitflags/bitflags";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".blake2-rfc."0.2.18" = mkRustCrate {
        package-id = "blake2-rfc 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "blake2-rfc";
          version = "0.2.18";
          sha256 = "5d6d530bdd2d52966a6d03b7a964add7ae1a288d25214066fd4b600f0f796400";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "arrayvec"
            ];
            extern-name = "arrayvec";
            package-id = "arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "constant_time_eq"
            ];
            extern-name = "constant_time_eq";
            package-id = "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "blake2-rfc";
            version = "0.2.18";
            authors = [
              "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
            ];
            description = "A pure Rust implementation of BLAKE2 based on RFC 7693.";
            documentation = "https://docs.rs/blake2-rfc";
            readme = "README.md";
            keywords = [
              "blake2"
              "blake2b"
              "blake2s"
              "hash"
              "crypto"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/cesarb/blake2-rfc";
          };
          dependencies = {
            arrayvec = {
              version = "0.4.6";
              default-features = false;
            };
            clippy = {
              version = "0.0.41";
              optional = true;
            };
            constant_time_eq = {
              version = "0.1.0";
            };
          };
          dev-dependencies = {
            data-encoding = {
              version = "2.0.0";
            };
          };
          features = {
            bench = [
            ];
            default = [
              "std"
            ];
            simd = [
            ];
            simd_asm = [
              "simd_opt"
            ];
            simd_opt = [
              "simd"
            ];
            std = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "cesarb/blake2-rfc";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.7.3" = mkRustCrate {
        package-id = "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "block-buffer";
          version = "0.7.3";
          sha256 = "c0940dc441f31689269e10ac70eb1002a3a1d3ad1390e030043662eb7fe4688b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "block-padding"
            ];
            extern-name = "block_padding";
            package-id = "block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "byte-tools"
            ];
            extern-name = "byte_tools";
            package-id = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "byteorder"
            ];
            extern-name = "byteorder";
            package-id = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "generic-array"
            ];
            extern-name = "generic_array";
            package-id = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "block-buffer";
            version = "0.7.3";
            authors = [
              "RustCrypto Developers"
            ];
            description = "Fixed size buffer for block processing of data";
            documentation = "https://docs.rs/block-buffer";
            keywords = [
              "block"
              "buffer"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/RustCrypto/utils";
          };
          dependencies = {
            block-padding = {
              version = "0.1";
            };
            byte-tools = {
              version = "0.3";
            };
            byteorder = {
              version = "1.1";
              default-features = false;
            };
            generic-array = {
              version = "0.12";
            };
          };
          badges = {
            travis-ci = {
              repository = "RustCrypto/utils";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".block-padding."0.1.4" = mkRustCrate {
        package-id = "block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "block-padding";
          version = "0.1.4";
          sha256 = "6d4dc3af3ee2e12f3e5d224e5e1e3d73668abbeb69e566d361f7d5563a4fdf09";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "byte-tools"
            ];
            extern-name = "byte_tools";
            package-id = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "block-padding";
            version = "0.1.4";
            authors = [
              "RustCrypto Developers"
            ];
            description = "Padding and unpadding of messages divided into blocks.";
            documentation = "https://docs.rs/block-padding";
            keywords = [
              "padding"
              "pkcs7"
              "ansix923"
              "iso7816"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/RustCrypto/utils";
          };
          dependencies = {
            byte-tools = {
              version = "0.3";
            };
          };
          badges = {
            travis-ci = {
              repository = "RustCrypto/utils";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.3.1" = mkRustCrate {
        package-id = "byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "byte-tools";
          version = "0.3.1";
          sha256 = "e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "byte-tools";
            version = "0.3.1";
            authors = [
              "RustCrypto Developers"
            ];
            description = "Bytes related utility functions";
            documentation = "https://docs.rs/byte-tools";
            keywords = [
              "bytes"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/RustCrypto/utils";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.2" = mkRustCrate {
        package-id = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "byteorder";
          version = "1.3.2";
          sha256 = "a7c3dd8985a7111efc5c80b44e23ecdd8c007de8ade3b96595387e812b957cf5";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "byteorder";
            version = "1.3.2";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
            ];
            build = "build.rs";
            exclude = [
              "/ci/*"
            ];
            description = "Library for reading/writing numbers in big-endian and little-endian.";
            homepage = "https://github.com/BurntSushi/byteorder";
            documentation = "https://docs.rs/byteorder";
            readme = "README.md";
            keywords = [
              "byte"
              "endian"
              "big-endian"
              "little-endian"
              "binary"
            ];
            categories = [
              "encoding"
              "parsing"
            ];
            license = "Unlicense OR MIT";
            repository = "https://github.com/BurntSushi/byteorder";
          };
          profile = {
            bench = {
              opt-level = 3;
            };
          };
          lib = {
            name = "byteorder";
            bench = false;
          };
          dev-dependencies = {
            doc-comment = {
              version = "0.3";
            };
            quickcheck = {
              version = "0.8";
              default-features = false;
            };
            rand = {
              version = "0.6";
            };
          };
          features = {
            default = [
              "std"
            ];
            i128 = [
            ];
            std = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "BurntSushi/byteorder";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.38" = mkRustCrate {
        package-id = "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cc";
          version = "1.0.38";
          sha256 = "ce400c638d48ee0e9ab75aef7997609ec57367ccfe1463f21bf53c3eca67bf46";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "cc";
            version = "1.0.38";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "A build-time dependency for Cargo build scripts to assist in invoking the native\nC compiler to compile native C code into a static archive to be linked into Rust\ncode.\n";
            homepage = "https://github.com/alexcrichton/cc-rs";
            documentation = "https://docs.rs/cc";
            readme = "README.md";
            keywords = [
              "build-dependencies"
            ];
            categories = [
              "development-tools::build-utils"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/cc-rs";
          };
          dependencies = {
            rayon = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            tempdir = {
              version = "0.3";
            };
          };
          features = {
            parallel = [
              "rayon"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cexpr."0.3.5" = mkRustCrate {
        package-id = "cexpr 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cexpr";
          version = "0.3.5";
          sha256 = "a7fa24eb00d5ffab90eaeaf1092ac85c04c64aaf358ea6f84505b8116d24c6af";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "nom"
            ];
            extern-name = "nom";
            package-id = "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "cexpr";
            version = "0.3.5";
            authors = [
              "Jethro Beekman <jethro@jbeekman.nl>"
            ];
            description = "A C expression parser and evaluator";
            documentation = "https://docs.rs/cexpr/";
            keywords = [
              "C"
              "expression"
              "parser"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/jethrogb/rust-cexpr";
          };
          dependencies = {
            nom = {
              version = "^4";
              features = [
                "verbose-errors"
              ];
            };
          };
          dev-dependencies = {
            clang-sys = {
              version = ">= 0.13.0, < 0.29.0";
            };
          };
          badges = {
            travis-ci = {
              repository = "jethrogb/rust-cexpr";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.9" = mkRustCrate {
        package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cfg-if";
          version = "0.1.9";
          sha256 = "b486ce3ccf7ffd79fdeb678eac06a9e6c09fc88d33836340becb8fffe87c5e33";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "cfg-if";
            version = "0.1.9";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n";
            homepage = "https://github.com/alexcrichton/cfg-if";
            documentation = "https://docs.rs/cfg-if";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/cfg-if";
          };
          badges = {
            travis-ci = {
              repository = "alexcrichton/cfg-if";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.7" = mkRustCrate {
        package-id = "chrono 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "chrono";
          version = "0.4.7";
          sha256 = "77d81f58b7301084de3b958691458a53c3f7e0b1d702f77e550b6a88e3a88abe";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "num-integer"
            ];
            extern-name = "num_integer";
            package-id = "num-integer 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "num-traits"
            ];
            extern-name = "num_traits";
            package-id = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "time"
            ];
            extern-name = "time";
            package-id = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "chrono";
            version = "0.4.7";
            authors = [
              "Kang Seonghoon <public+rust@mearie.org>"
              "Brandon W Maister <quodlibetor@gmail.com>"
            ];
            exclude = [
              "/ci/*"
              "/.travis.yml"
              "/appveyor.yml"
              "/Makefile"
            ];
            description = "Date and time library for Rust";
            homepage = "https://github.com/chronotope/chrono";
            documentation = "https://docs.rs/chrono/";
            readme = "README.md";
            keywords = [
              "date"
              "time"
              "calendar"
            ];
            categories = [
              "date-and-time"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/chronotope/chrono";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                };
              };
              playground = {
                all-features = true;
              };
            };
          };
          lib = {
            name = "chrono";
          };
          dependencies = {
            libc = {
              version = "0.2";
              default-features = false;
            };
            num-integer = {
              version = "0.1.36";
              default-features = false;
            };
            num-traits = {
              version = "0.2";
              default-features = false;
            };
            rustc-serialize = {
              version = "0.3.20";
              optional = true;
            };
            serde = {
              version = "1";
              optional = true;
            };
            time = {
              version = "0.1.39";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "0.8.0";
            };
            doc-comment = {
              version = "0.3";
            };
            num-iter = {
              version = "0.1.35";
              default-features = false;
            };
            serde_derive = {
              version = "1";
            };
            serde_json = {
              version = "1";
            };
          };
          features = {
            clock = [
              "time"
            ];
            default = [
              "clock"
            ];
          };
          badges = {
            appveyor = {
              repository = "chronotope/chrono";
            };
            travis-ci = {
              repository = "chronotope/chrono";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".clang-sys."0.28.0" = mkRustCrate {
        package-id = "clang-sys 0.28.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "clang-sys";
          version = "0.28.0";
          sha256 = "4227269cec09f5f83ff160be12a1e9b0262dd1aa305302d5ba296c2ebd291055";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "glob"
              "glob"
            ];
            extern-name = "glob";
            package-id = "glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libloading"
            ];
            extern-name = "libloading";
            package-id = "libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "clang-sys";
            version = "0.28.0";
            authors = [
              "Kyle Mayes <kyle@mayeses.com>"
            ];
            build = "build.rs";
            links = "clang";
            description = "Rust bindings for libclang.";
            documentation = "https://kylemayes.github.io/clang-sys/3_5/clang_sys";
            readme = "README.md";
            license = "Apache-2.0";
            repository = "https://github.com/KyleMayes/clang-sys";
          };
          dependencies = {
            glob = {
              version = "0.2.11";
            };
            libc = {
              version = "0.2.39";
              default-features = false;
            };
            libloading = {
              version = "0.5.0";
              optional = true;
            };
          };
          build-dependencies = {
            glob = {
              version = "0.2.11";
            };
          };
          features = {
            clang_3_5 = [
            ];
            clang_3_6 = [
              "gte_clang_3_6"
            ];
            clang_3_7 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
            ];
            clang_3_8 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
              "gte_clang_3_8"
            ];
            clang_3_9 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
              "gte_clang_3_8"
              "gte_clang_3_9"
            ];
            clang_4_0 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
              "gte_clang_3_8"
              "gte_clang_3_9"
              "gte_clang_4_0"
            ];
            clang_5_0 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
              "gte_clang_3_8"
              "gte_clang_3_9"
              "gte_clang_4_0"
              "gte_clang_5_0"
            ];
            clang_6_0 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
              "gte_clang_3_8"
              "gte_clang_3_9"
              "gte_clang_4_0"
              "gte_clang_5_0"
              "gte_clang_6_0"
            ];
            clang_7_0 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
              "gte_clang_3_8"
              "gte_clang_3_9"
              "gte_clang_4_0"
              "gte_clang_5_0"
              "gte_clang_6_0"
              "gte_clang_7_0"
            ];
            clang_8_0 = [
              "gte_clang_3_6"
              "gte_clang_3_7"
              "gte_clang_3_8"
              "gte_clang_3_9"
              "gte_clang_4_0"
              "gte_clang_5_0"
              "gte_clang_6_0"
              "gte_clang_7_0"
              "gte_clang_8_0"
            ];
            gte_clang_3_6 = [
            ];
            gte_clang_3_7 = [
            ];
            gte_clang_3_8 = [
            ];
            gte_clang_3_9 = [
            ];
            gte_clang_4_0 = [
            ];
            gte_clang_5_0 = [
            ];
            gte_clang_6_0 = [
            ];
            gte_clang_7_0 = [
            ];
            gte_clang_8_0 = [
            ];
            runtime = [
              "libloading"
            ];
            static = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".clap."2.33.0" = mkRustCrate {
        package-id = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "clap";
          version = "2.33.0";
          sha256 = "5067f5bb2d80ef5d68b4c87db81601f0b75bca627bc2ef76b141d7b846a3c6d9";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "ansi_term"
            ];
            extern-name = "ansi_term";
            package-id = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "atty"
            ];
            extern-name = "atty";
            package-id = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "strsim"
            ];
            extern-name = "strsim";
            package-id = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "textwrap"
            ];
            extern-name = "textwrap";
            package-id = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-width"
            ];
            extern-name = "unicode_width";
            package-id = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "vec_map"
            ];
            extern-name = "vec_map";
            package-id = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "clap";
            version = "2.33.0";
            authors = [
              "Kevin K. <kbknapp@gmail.com>"
            ];
            exclude = [
              "examples/*"
              "clap-test/*"
              "tests/*"
              "benches/*"
              "*.png"
              "clap-perf/*"
              "*.dot"
            ];
            description = "A simple to use, efficient, and full-featured Command Line Argument Parser\n";
            homepage = "https://clap.rs/";
            documentation = "https://docs.rs/clap/";
            readme = "README.md";
            keywords = [
              "argument"
              "cli"
              "arg"
              "parser"
              "parse"
            ];
            categories = [
              "command-line-interface"
            ];
            license = "MIT";
            repository = "https://github.com/clap-rs/clap";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "doc"
                  ];
                };
              };
            };
          };
          profile = {
            test = {
              opt-level = 1;
              lto = false;
              codegen-units = 4;
              debug = true;
              debug-assertions = true;
              rpath = false;
            };
            bench = {
              opt-level = 3;
              lto = true;
              codegen-units = 1;
              debug = false;
              debug-assertions = false;
              rpath = false;
            };
            dev = {
              opt-level = 0;
              lto = false;
              codegen-units = 4;
              debug = true;
              debug-assertions = true;
              rpath = false;
            };
            release = {
              opt-level = 3;
              lto = true;
              codegen-units = 1;
              debug = false;
              debug-assertions = false;
              rpath = false;
            };
          };
          dependencies = {
            atty = {
              version = "0.2.2";
              optional = true;
            };
            bitflags = {
              version = "1.0";
            };
            clippy = {
              version = "~0.0.166";
              optional = true;
            };
            strsim = {
              version = "0.8";
              optional = true;
            };
            term_size = {
              version = "0.3.0";
              optional = true;
            };
            textwrap = {
              version = "0.11.0";
            };
            unicode-width = {
              version = "0.1.4";
            };
            vec_map = {
              version = "0.8";
              optional = true;
            };
            yaml-rust = {
              version = "0.3.5";
              optional = true;
            };
          };
          dev-dependencies = {
            lazy_static = {
              version = "1.3";
            };
            regex = {
              version = "1";
            };
            version-sync = {
              version = "0.8";
            };
          };
          features = {
            color = [
              "ansi_term"
              "atty"
            ];
            debug = [
            ];
            default = [
              "suggestions"
              "color"
              "vec_map"
            ];
            doc = [
              "yaml"
            ];
            lints = [
              "clippy"
            ];
            nightly = [
            ];
            no_cargo = [
            ];
            suggestions = [
              "strsim"
            ];
            unstable = [
            ];
            wrap_help = [
              "term_size"
              "textwrap/term_size"
            ];
            yaml = [
              "yaml-rust"
            ];
          };
          target = {
            "cfg(not(windows))" = {
              dependencies = {
                ansi_term = {
                  version = "0.11";
                  optional = true;
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "clap-rs/clap";
            };
            coveralls = {
              branch = "master";
              repository = "clap-rs/clap";
            };
            is-it-maintained-issue-resolution = {
              repository = "clap-rs/clap";
            };
            is-it-maintained-open-issues = {
              repository = "clap-rs/clap";
            };
            maintenance = {
              status = "actively-developed";
            };
            travis-ci = {
              repository = "clap-rs/clap";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" = mkRustCrate {
        package-id = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cloudabi";
          version = "0.0.3";
          sha256 = "ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "cloudabi";
            version = "0.0.3";
            authors = [
              "Nuxi (https://nuxi.nl/) and contributors"
            ];
            description = "Low level interface to CloudABI. Contains all syscalls and related types.";
            homepage = "https://nuxi.nl/cloudabi/";
            documentation = "https://docs.rs/cloudabi/";
            keywords = [
              "cloudabi"
            ];
            license = "BSD-2-Clause";
            repository = "https://github.com/nuxinl/cloudabi";
          };
          lib = {
            path = "cloudabi.rs";
          };
          dependencies = {
            bitflags = {
              version = "1.0";
              optional = true;
            };
          };
          features = {
            default = [
              "bitflags"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cmake."0.1.40" = mkRustCrate {
        package-id = "cmake 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cmake";
          version = "0.1.40";
          sha256 = "2ca4386c8954b76a8415b63959337d940d724b336cabd3afe189c2b51a7e1ff0";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "cmake";
            version = "0.1.40";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "A build dependency for running `cmake` to build a native library\n";
            homepage = "https://github.com/alexcrichton/cmake-rs";
            documentation = "https://docs.rs/cmake";
            readme = "README.md";
            keywords = [
              "build-dependencies"
            ];
            categories = [
              "development-tools::build-utils"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/cmake-rs";
          };
          dependencies = {
            cc = {
              version = "1.0.32";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.3" = mkRustCrate {
        package-id = "constant_time_eq 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "constant_time_eq";
          version = "0.1.3";
          sha256 = "8ff012e225ce166d4422e0e78419d901719760f62ae2b7969ca6b564d1b54a9e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "constant_time_eq";
            version = "0.1.3";
            authors = [
              "Cesar Eduardo Barros <cesarb@cesarb.eti.br>"
            ];
            description = "Compares two equal-sized byte strings in constant time.";
            documentation = "https://docs.rs/constant_time_eq";
            readme = "README";
            keywords = [
              "constant_time"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "CC0-1.0";
            repository = "https://github.com/cesarb/constant_time_eq";
          };
          badges = {
            travis-ci = {
              repository = "cesarb/constant_time_eq";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cranelift-bforest."0.36.0" = mkRustCrate {
        package-id = "cranelift-bforest 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cranelift-bforest";
          version = "0.36.0";
          sha256 = "58efcd65bf617a5d56bd21292d5c5e1195718ba9850ab14e90578f7a0350299f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "cranelift-bforest";
            version = "0.36.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            description = "A forest of B+-trees";
            documentation = "https://cranelift.readthedocs.io/";
            readme = "README.md";
            keywords = [
              "btree"
              "forest"
              "set"
              "map"
            ];
            categories = [
              "no-std"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/cranelift";
          };
          dependencies = {
            cranelift-entity = {
              version = "0.36.0";
              default-features = false;
            };
          };
          features = {
            core = [
            ];
            default = [
              "std"
            ];
            std = [
              "cranelift-entity/std"
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/cranelift";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cranelift-codegen."0.36.0" = mkRustCrate {
        package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cranelift-codegen";
          version = "0.36.0";
          sha256 = "50224378461c8c308f72b90ec8ee68d6f9e34ff868fdbc0f7b33112d0c485aa3";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-bforest"
              "cranelift-bforest"
            ];
            extern-name = "cranelift_bforest";
            package-id = "cranelift-bforest 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-codegen-meta"
              "cranelift-codegen-meta"
            ];
            extern-name = "cranelift_codegen_meta";
            package-id = "cranelift-codegen-meta 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "cranelift-codegen";
            version = "0.36.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            build = "build.rs";
            description = "Low-level code generator library";
            documentation = "https://cranelift.readthedocs.io/";
            readme = "README.md";
            keywords = [
              "compile"
              "compiler"
              "jit"
            ];
            categories = [
              "no-std"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/cranelift";
          };
          dependencies = {
            cranelift-bforest = {
              version = "0.36.0";
              default-features = false;
            };
            cranelift-entity = {
              version = "0.36.0";
              default-features = false;
            };
            failure = {
              version = "0.1.1";
              features = [
                "derive"
              ];
              default-features = false;
            };
            failure_derive = {
              version = "0.1.1";
              default-features = false;
            };
            hashmap_core = {
              version = "0.1.9";
              optional = true;
            };
            log = {
              version = "0.4.6";
              default-features = false;
            };
            serde = {
              version = "1.0.94";
              features = [
                "derive"
              ];
              optional = true;
            };
            target-lexicon = {
              version = "0.4.0";
              default-features = false;
            };
          };
          build-dependencies = {
            cranelift-codegen-meta = {
              version = "0.36.0";
              default-features = false;
            };
          };
          features = {
            arm32 = [
            ];
            arm64 = [
            ];
            basic-blocks = [
            ];
            core = [
              "hashmap_core"
              "cranelift-codegen-meta/core"
            ];
            default = [
              "std"
              "x86"
              "arm32"
              "arm64"
              "riscv"
            ];
            enable-serde = [
              "serde"
            ];
            riscv = [
            ];
            std = [
              "cranelift-entity/std"
              "cranelift-bforest/std"
              "target-lexicon/std"
              "cranelift-codegen-meta/std"
            ];
            testing_hooks = [
            ];
            x86 = [
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/cranelift";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cranelift-codegen-meta."0.36.0" = mkRustCrate {
        package-id = "cranelift-codegen-meta 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cranelift-codegen-meta";
          version = "0.36.0";
          sha256 = "d7aeb0c6bcdd480a3c9a1af223d9082bd58c64aa77791432573fa368d702b957";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "cranelift-codegen-meta";
            version = "0.36.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            description = "Metaprogram for cranelift-codegen code generator library";
            readme = "README.md";
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/cranelift";
          };
          dependencies = {
            cranelift-entity = {
              version = "0.36.0";
              default-features = false;
            };
          };
          features = {
            core = [
              "cranelift-entity/core"
            ];
            default = [
              "std"
            ];
            std = [
              "cranelift-entity/std"
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/cranelift";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cranelift-entity."0.36.0" = mkRustCrate {
        package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cranelift-entity";
          version = "0.36.0";
          sha256 = "0b1e9fb513ace2d9742b3f5624dfeb5f211fd1a340f74e0546e68e43d3db739a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "cranelift-entity";
            version = "0.36.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            description = "Data structures using entity references as mapping keys";
            documentation = "https://cranelift.readthedocs.io/";
            readme = "README.md";
            keywords = [
              "entity"
              "set"
              "map"
            ];
            categories = [
              "no-std"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/cranelift";
          };
          dependencies = {
            serde = {
              version = "1.0.94";
              features = [
                "derive"
              ];
              optional = true;
            };
          };
          features = {
            core = [
            ];
            default = [
              "std"
            ];
            enable-serde = [
              "serde"
            ];
            std = [
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/cranelift";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cranelift-frontend."0.36.0" = mkRustCrate {
        package-id = "cranelift-frontend 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cranelift-frontend";
          version = "0.36.0";
          sha256 = "35ccabd4863338887585d271cec427f988b643791d247661b40c21ecd7ec3201";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-codegen"
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "cranelift-frontend";
            version = "0.36.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            description = "Cranelift IR builder helper";
            documentation = "https://cranelift.readthedocs.io/";
            readme = "README.md";
            categories = [
              "no-std"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/cranelift";
          };
          dependencies = {
            cranelift-codegen = {
              version = "0.36.0";
              default-features = false;
            };
            hashmap_core = {
              version = "0.1.9";
              optional = true;
            };
            log = {
              version = "0.4.6";
              default-features = false;
            };
            target-lexicon = {
              version = "0.4.0";
              default-features = false;
            };
          };
          features = {
            basic-blocks = [
              "cranelift-codegen/basic-blocks"
            ];
            core = [
              "hashmap_core"
              "cranelift-codegen/core"
            ];
            default = [
              "std"
            ];
            std = [
              "cranelift-codegen/std"
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/cranelift";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cranelift-native."0.36.0" = mkRustCrate {
        package-id = "cranelift-native 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cranelift-native";
          version = "0.36.0";
          sha256 = "cabb06664b5b3d4e4053a68ae2015f4ab22965168c978f353264d90dd98f1619";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "raw-cpuid"
            ];
            extern-name = "raw_cpuid";
            package-id = "raw-cpuid 6.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "cranelift-native";
            version = "0.36.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            description = "Support for targeting the host with Cranelift";
            readme = "README.md";
            categories = [
              "no-std"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/cranelift";
          };
          dependencies = {
            cranelift-codegen = {
              version = "0.36.0";
              default-features = false;
            };
            target-lexicon = {
              version = "0.4.0";
              default-features = false;
            };
          };
          features = {
            core = [
              "cranelift-codegen/core"
              "raw-cpuid/nightly"
            ];
            default = [
              "std"
            ];
            std = [
              "cranelift-codegen/std"
              "target-lexicon/std"
            ];
          };
          target = {
            "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))" = {
              dependencies = {
                raw-cpuid = {
                  version = "6.0.0";
                };
              };
            };
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/cranelift";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".cranelift-wasm."0.36.0" = mkRustCrate {
        package-id = "cranelift-wasm 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "cranelift-wasm";
          version = "0.36.0";
          sha256 = "51e8628ce5134538992e4996899b091b26231fb1ba9348b1cdf55dceb3940d81";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-codegen"
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-frontend"
              "cranelift-frontend"
            ];
            extern-name = "cranelift_frontend";
            package-id = "cranelift-frontend 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasmparser"
              "wasmparser"
            ];
            extern-name = "wasmparser";
            package-id = "wasmparser 0.32.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "cranelift-wasm";
            version = "0.36.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            description = "Translator from WebAssembly to Cranelift IR";
            readme = "README.md";
            keywords = [
              "webassembly"
              "wasm"
            ];
            categories = [
              "no-std"
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/cranelift";
          };
          dependencies = {
            cranelift-codegen = {
              version = "0.36.0";
              default-features = false;
            };
            cranelift-entity = {
              version = "0.36.0";
              default-features = false;
            };
            cranelift-frontend = {
              version = "0.36.0";
              default-features = false;
            };
            failure = {
              version = "0.1.1";
              features = [
                "derive"
              ];
              default-features = false;
            };
            failure_derive = {
              version = "0.1.1";
              default-features = false;
            };
            hashmap_core = {
              version = "0.1.9";
              optional = true;
            };
            log = {
              version = "0.4.6";
              default-features = false;
            };
            serde = {
              version = "1.0.94";
              features = [
                "derive"
              ];
              optional = true;
            };
            wasmparser = {
              version = "0.32.1";
              default-features = false;
            };
          };
          dev-dependencies = {
            target-lexicon = {
              version = "0.4.0";
            };
            wabt = {
              version = "0.7.0";
            };
          };
          features = {
            core = [
              "hashmap_core"
              "cranelift-codegen/core"
              "cranelift-frontend/core"
              "wasmparser/core"
            ];
            default = [
              "std"
            ];
            enable-serde = [
              "serde"
            ];
            std = [
              "cranelift-codegen/std"
              "cranelift-frontend/std"
              "wasmparser/std"
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/cranelift";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.6.3" = mkRustCrate {
        package-id = "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "crossbeam-deque";
          version = "0.6.3";
          sha256 = "05e44b8cf3e1a625844d1750e1f7820da46044ff6d28f4d43e455ba3e5bb2c13";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "crossbeam-epoch"
            ];
            extern-name = "crossbeam_epoch";
            package-id = "crossbeam-epoch 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "crossbeam-utils"
            ];
            extern-name = "crossbeam_utils";
            package-id = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "crossbeam-deque";
            version = "0.6.3";
            authors = [
              "The Crossbeam Project Developers"
            ];
            description = "Concurrent work-stealing deque";
            homepage = "https://github.com/crossbeam-rs/crossbeam";
            documentation = "https://docs.rs/crossbeam-deque";
            readme = "README.md";
            keywords = [
              "chase-lev"
              "lock-free"
              "scheduler"
              "scheduling"
            ];
            categories = [
              "algorithms"
              "concurrency"
              "data-structures"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/crossbeam-rs/crossbeam";
          };
          dependencies = {
            crossbeam-epoch = {
              version = "0.7";
            };
            crossbeam-utils = {
              version = "0.6";
            };
          };
          dev-dependencies = {
            rand = {
              version = "0.6";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.7.2" = mkRustCrate {
        package-id = "crossbeam-epoch 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "crossbeam-epoch";
          version = "0.7.2";
          sha256 = "fedcd6772e37f3da2a9af9bf12ebe046c0dfe657992377b4df982a2b54cd37a9";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "arrayvec"
            ];
            extern-name = "arrayvec";
            package-id = "arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "crossbeam-utils"
            ];
            extern-name = "crossbeam_utils";
            package-id = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "memoffset"
            ];
            extern-name = "memoffset";
            package-id = "memoffset 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "scopeguard"
            ];
            extern-name = "scopeguard";
            package-id = "scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "crossbeam-epoch";
            version = "0.7.2";
            authors = [
              "The Crossbeam Project Developers"
            ];
            description = "Epoch-based garbage collection";
            homepage = "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch";
            documentation = "https://docs.rs/crossbeam-epoch";
            readme = "README.md";
            keywords = [
              "lock-free"
              "rcu"
              "atomic"
              "garbage"
            ];
            categories = [
              "concurrency"
              "memory-management"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/crossbeam-rs/crossbeam";
          };
          dependencies = {
            arrayvec = {
              version = "0.4";
              default-features = false;
            };
            cfg-if = {
              version = "0.1.2";
            };
            crossbeam-utils = {
              version = "0.6";
              default-features = false;
            };
            lazy_static = {
              version = "1";
              optional = true;
            };
            memoffset = {
              version = "0.5";
            };
            scopeguard = {
              version = "1";
              default-features = false;
            };
          };
          dev-dependencies = {
            rand = {
              version = "0.6";
            };
          };
          features = {
            alloc = [
              "crossbeam-utils/alloc"
            ];
            default = [
              "std"
            ];
            nightly = [
              "crossbeam-utils/nightly"
              "arrayvec/use_union"
            ];
            sanitize = [
            ];
            std = [
              "crossbeam-utils/std"
              "lazy_static"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.1.2" = mkRustCrate {
        package-id = "crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "crossbeam-queue";
          version = "0.1.2";
          sha256 = "7c979cd6cfe72335896575c6b5688da489e420d36a27a0b9eb0c73db574b4a4b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "crossbeam-utils"
            ];
            extern-name = "crossbeam_utils";
            package-id = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "crossbeam-queue";
            version = "0.1.2";
            authors = [
              "The Crossbeam Project Developers"
            ];
            description = "Concurrent queues";
            homepage = "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils";
            documentation = "https://docs.rs/crossbeam-queue";
            readme = "README.md";
            keywords = [
              "queue"
              "mpmc"
              "lock-free"
              "producer"
              "consumer"
            ];
            categories = [
              "concurrency"
              "data-structures"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/crossbeam-rs/crossbeam";
          };
          dependencies = {
            crossbeam-utils = {
              version = "0.6.5";
            };
          };
          dev-dependencies = {
            rand = {
              version = "0.6";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.6.6" = mkRustCrate {
        package-id = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "crossbeam-utils";
          version = "0.6.6";
          sha256 = "04973fa96e96579258a5091af6003abde64af786b860f18622b82e026cca60e6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "crossbeam-utils";
            version = "0.6.6";
            authors = [
              "The Crossbeam Project Developers"
            ];
            description = "Utilities for concurrent programming";
            homepage = "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils";
            documentation = "https://docs.rs/crossbeam-utils";
            readme = "README.md";
            keywords = [
              "scoped"
              "thread"
              "atomic"
              "cache"
            ];
            categories = [
              "algorithms"
              "concurrency"
              "data-structures"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/crossbeam-rs/crossbeam";
          };
          dependencies = {
            cfg-if = {
              version = "0.1.2";
            };
            lazy_static = {
              version = "1.1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            rand = {
              version = "0.6";
            };
          };
          features = {
            alloc = [
            ];
            default = [
              "std"
            ];
            nightly = [
            ];
            std = [
              "lazy_static"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".digest."0.8.1" = mkRustCrate {
        package-id = "digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "digest";
          version = "0.8.1";
          sha256 = "f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "generic-array"
            ];
            extern-name = "generic_array";
            package-id = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "digest";
            version = "0.8.1";
            authors = [
              "RustCrypto Developers"
            ];
            description = "Traits for cryptographic hash functions";
            documentation = "https://docs.rs/digest";
            keywords = [
              "digest"
              "crypto"
              "hash"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/RustCrypto/traits";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "std"
                  ];
                };
              };
            };
          };
          dependencies = {
            blobby = {
              version = "0.1";
              optional = true;
            };
            generic-array = {
              version = "0.12";
            };
          };
          features = {
            dev = [
              "blobby"
            ];
            std = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "RustCrypto/traits";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".directories."2.0.2" = mkRustCrate {
        package-id = "directories 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "directories";
          version = "2.0.2";
          sha256 = "551a778172a450d7fc12e629ca3b0428d00f6afa9a43da1b630d54604e97371c";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "dirs-sys"
            ];
            extern-name = "dirs_sys";
            package-id = "dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "directories";
            version = "2.0.2";
            authors = [
              "Simon Ochsenreither <simon@ochsenreither.de>"
            ];
            description = "A tiny mid-level library that provides platform-specific standard locations of directories for config, cache and other data on Linux, Windows and macOS by leveraging the mechanisms defined by the XDG base/user directory specifications on Linux, the Known Folder API on Windows, and the Standard Directory guidelines on macOS.";
            readme = "README.md";
            keywords = [
              "xdg"
              "basedir"
              "app_dirs"
              "path"
              "folder"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/soc/directories-rs";
          };
          bench = [
            {
              name = "constructors";
              harness = false;
            }
          ];
          dependencies = {
            cfg-if = {
              version = "0.1";
            };
            dirs-sys = {
              version = "0.3.4";
            };
          };
          dev-dependencies = {
            bencher = {
              version = "0.1.5";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.4" = mkRustCrate {
        package-id = "dirs-sys 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "dirs-sys";
          version = "0.3.4";
          sha256 = "afa0b23de8fd801745c471deffa6e12d248f962c9fd4b4c33787b055599bde7b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_users"
            ];
            extern-name = "redox_users";
            package-id = "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "dirs-sys";
            version = "0.3.4";
            authors = [
              "Simon Ochsenreither <simon@ochsenreither.de>"
            ];
            description = "System-level helper functions for the dirs and directories crates.";
            readme = "README.md";
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/soc/dirs-sys-rs";
          };
          dependencies = {
            cfg-if = {
              version = "0.1";
            };
          };
          target = {
            "cfg(target_os = \"redox\")" = {
              dependencies = {
                redox_users = {
                  version = "0.3.0";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "knownfolders"
                    "objbase"
                    "shlobj"
                    "winbase"
                    "winerror"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".either."1.5.2" = mkRustCrate {
        package-id = "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "either";
          version = "1.5.2";
          sha256 = "5527cfe0d098f36e3f8839852688e63c8fff1c90b2b405aef730615f9a7bcf7b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "either";
            version = "1.5.2";
            authors = [
              "bluss"
            ];
            description = "The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n";
            documentation = "https://docs.rs/either/1/";
            readme = "README-crates.io.md";
            keywords = [
              "data-structure"
              "no_std"
            ];
            categories = [
              "data-structures"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bluss/either";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "serde"
                  ];
                };
              };
              release = {
                no-dev-version = true;
              };
            };
          };
          dependencies = {
            serde = {
              version = "1.0";
              features = [
                "derive"
              ];
              optional = true;
            };
          };
          features = {
            default = [
              "use_std"
            ];
            use_std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" = mkRustCrate {
        package-id = "env_logger 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "env_logger";
          version = "0.6.2";
          sha256 = "aafcde04e90a5226a6443b7aabdb016ba2f8307c847d524724bd9b346dd1a2d3";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "atty"
            ];
            extern-name = "atty";
            package-id = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "humantime"
            ];
            extern-name = "humantime";
            package-id = "humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "regex"
            ];
            extern-name = "regex";
            package-id = "regex 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "termcolor"
            ];
            extern-name = "termcolor";
            package-id = "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "env_logger";
            version = "0.6.2";
            authors = [
              "The Rust Project Developers"
            ];
            description = "A logging implementation for `log` which is configured via an environment\nvariable.\n";
            documentation = "https://docs.rs/env_logger";
            readme = "README.md";
            keywords = [
              "logging"
              "log"
              "logger"
            ];
            categories = [
              "development-tools::debugging"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/sebasmagri/env_logger/";
          };
          test = [
            {
              name = "regexp_filter";
              harness = false;
            }
            {
              name = "log-in-log";
              harness = false;
            }
            {
              name = "init-twice-retains-filter";
              harness = false;
            }
          ];
          dependencies = {
            atty = {
              version = "0.2.5";
              optional = true;
            };
            humantime = {
              version = "1.1";
              optional = true;
            };
            log = {
              version = "0.4";
              features = [
                "std"
              ];
            };
            regex = {
              version = "1.0.3";
              optional = true;
            };
            termcolor = {
              version = "1.0.2";
              optional = true;
            };
          };
          features = {
            default = [
              "termcolor"
              "atty"
              "humantime"
              "regex"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".errno."0.2.4" = mkRustCrate {
        package-id = "errno 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "errno";
          version = "0.2.4";
          sha256 = "c2a071601ed01b988f896ab14b95e67335d1eeb50190932a1320f7fe3cadc84e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "errno-dragonfly"
            ];
            extern-name = "errno_dragonfly";
            package-id = "errno-dragonfly 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "errno";
            version = "0.2.4";
            authors = [
              "Chris Wong <lambda.fairy@gmail.com>"
            ];
            description = "Cross-platform interface to the `errno` variable.";
            documentation = "https://docs.rs/errno";
            categories = [
              "os"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/lfairy/rust-errno";
          };
          target = {
            "cfg(target_os=\"dragonfly\")" = {
              dependencies = {
                errno-dragonfly = {
                  version = "0.1.1";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "errhandlingapi"
                    "minwindef"
                    "ntdef"
                    "winbase"
                  ];
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "lfairy/rust-errno";
            };
            travis-ci = {
              repository = "lfairy/rust-errno";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".errno-dragonfly."0.1.1" = mkRustCrate {
        package-id = "errno-dragonfly 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "errno-dragonfly";
          version = "0.1.1";
          sha256 = "14ca354e36190500e1e1fb267c647932382b54053c50b14970856c0b00a35067";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "gcc"
            ];
            extern-name = "gcc";
            package-id = "gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "errno-dragonfly";
            version = "0.1.1";
            authors = [
              "Michael Neumann <mneumann@ntecs.de>"
            ];
            include = [
              "Cargo.toml"
              "LICENSE"
              "README.md"
              "build.rs"
              "src/lib.rs"
              "src/errno.c"
            ];
            description = "Exposes errno functionality to stable Rust on DragonFlyBSD";
            keywords = [
              "dragonfly"
            ];
            license = "MIT";
            repository = "https://github.com/mneumann/errno-dragonfly-rs";
          };
          dependencies = {
            libc = "0.2";
          };
          build-dependencies = {
            gcc = "0.3";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".faerie."0.10.1" = mkRustCrate {
        package-id = "faerie 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "faerie";
          version = "0.10.1";
          sha256 = "6cb48b9db9869b6209c63d5cc2fd99f0b85d1a407cb09fe8ed730c21ab945e3d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "env_logger"
            ];
            extern-name = "env_logger";
            package-id = "env_logger 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "goblin"
            ];
            extern-name = "goblin";
            package-id = "goblin 0.0.23 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "indexmap"
            ];
            extern-name = "indexmap";
            package-id = "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "scroll"
            ];
            extern-name = "scroll";
            package-id = "scroll 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "string-interner"
            ];
            extern-name = "string_interner";
            package-id = "string-interner 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "structopt"
            ];
            extern-name = "structopt";
            package-id = "structopt 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "structopt-derive"
            ];
            extern-name = "structopt_derive";
            package-id = "structopt-derive 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "faerie";
            version = "0.10.1";
            authors = [
              "m4b <m4b.github.io@gmail.com>"
              "Dan Gohman <sunfish@mozilla.com>"
              "Pat Hickey <pat@moreproductive.org>"
              "Philip Craig <philipjcraig@gmail.com>"
            ];
            include = [
              "src/**/*"
              "Cargo.toml"
              "LICENSE"
              "README.md"
              "tests/*"
            ];
            description = "ELF and Mach-o native binary object file emitter";
            documentation = "https://docs.rs/faerie";
            readme = "README.md";
            keywords = [
              "elf"
              "mach-o"
              "binary"
              "object"
              "compiler"
            ];
            categories = [
              "development-tools::debugging"
            ];
            license = "MIT";
            repository = "https://github.com/m4b/faerie";
          };
          bin = [
            {
              name = "prototype";
              path = "src/bin/main.rs";
            }
          ];
          dependencies = {
            env_logger = {
              version = "0.6";
            };
            failure = {
              version = "0.1";
            };
            goblin = {
              version = "0.0.23";
            };
            indexmap = {
              version = "1";
            };
            log = {
              version = "0.4";
            };
            scroll = {
              version = "0.9";
            };
            string-interner = {
              version = "0.6";
            };
            structopt = {
              version = "0.2";
            };
            structopt-derive = {
              version = "0.2";
            };
            target-lexicon = {
              version = "0.4.0";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".failure."0.1.5" = mkRustCrate {
        package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "failure";
          version = "0.1.5";
          sha256 = "795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "backtrace"
            ];
            extern-name = "backtrace";
            package-id = "backtrace 0.3.33 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "failure";
            version = "0.1.5";
            authors = [
              "Without Boats <boats@mozilla.com>"
            ];
            description = "Experimental error handling abstraction.";
            homepage = "https://rust-lang-nursery.github.io/failure/";
            documentation = "https://docs.rs/failure";
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/rust-lang-nursery/failure";
          };
          dependencies = {
            backtrace = {
              version = "0.3.3";
              optional = true;
            };
            failure_derive = {
              version = "0.1.5";
              optional = true;
            };
          };
          features = {
            default = [
              "std"
              "derive"
            ];
            derive = [
              "failure_derive"
            ];
            std = [
              "backtrace"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.5" = mkRustCrate {
        package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "failure_derive";
          version = "0.1.5";
          sha256 = "ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "synstructure"
            ];
            extern-name = "synstructure";
            package-id = "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "failure_derive";
            version = "0.1.5";
            authors = [
              "Without Boats <woboats@gmail.com>"
            ];
            build = "build.rs";
            description = "derives for the failure crate";
            homepage = "https://rust-lang-nursery.github.io/failure/";
            documentation = "https://docs.rs/failure";
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/withoutboats/failure_derive";
          };
          lib = {
            proc-macro = true;
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4.8";
            };
            quote = {
              version = "0.6.3";
            };
            syn = {
              version = "0.15.0";
            };
            synstructure = {
              version = "0.10.0";
            };
          };
          dev-dependencies = {
            failure = {
              version = "0.1.0";
            };
          };
          features = {
            std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".fake-simd."0.1.2" = mkRustCrate {
        package-id = "fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "fake-simd";
          version = "0.1.2";
          sha256 = "e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "fake-simd";
            version = "0.1.2";
            authors = [
              "The Rust-Crypto Project Developers"
            ];
            description = "Crate for mimicking simd crate on stable Rust";
            documentation = "https://docs.rs/fake-simd";
            keywords = [
              "simd"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/RustCrypto/utils";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".fallible-iterator."0.2.0" = mkRustCrate {
        package-id = "fallible-iterator 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "fallible-iterator";
          version = "0.2.0";
          sha256 = "4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "fallible-iterator";
            version = "0.2.0";
            authors = [
              "Steven Fackler <sfackler@gmail.com>"
            ];
            description = "Fallible iterator traits";
            readme = "README.md";
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/sfackler/rust-fallible-iterator";
          };
          features = {
            alloc = [
            ];
            default = [
              "std"
            ];
            std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".fuchsia-cprng."0.1.1" = mkRustCrate {
        package-id = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "fuchsia-cprng";
          version = "0.1.1";
          sha256 = "a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "fuchsia-cprng";
            version = "0.1.1";
            authors = [
              "Erick Tryzelaar <etryzelaar@google.com>"
            ];
            include = [
              "src/*.rs"
              "Cargo.toml"
              "AUTHORS"
              "LICENSE"
              "PATENTS"
            ];
            description = "Rust crate for the Fuchsia cryptographically secure pseudorandom number generator";
            readme = "README.md";
            license-file = "LICENSE";
            repository = "https://fuchsia.googlesource.com/fuchsia/+/master/garnet/public/rust/fuchsia-cprng";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".fxhash."0.2.1" = mkRustCrate {
        package-id = "fxhash 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "fxhash";
          version = "0.2.1";
          sha256 = "c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "byteorder"
            ];
            extern-name = "byteorder";
            package-id = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "fxhash";
            version = "0.2.1";
            authors = [
              "cbreeden <github@u.breeden.cc>"
            ];
            description = "A fast, non-secure, hashing algorithm derived from an internal hasher used in FireFox and Rustc.";
            documentation = "https://docs.rs/fxhash";
            readme = "README.md";
            keywords = [
              "hash"
            ];
            categories = [
              "algorithms"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/cbreeden/fxhash";
          };
          lib = {
            name = "fxhash";
            path = "lib.rs";
          };
          bench = [
            {
              name = "fxhash";
              path = "bench.rs";
            }
          ];
          dependencies = {
            byteorder = {
              version = "1.0.0";
            };
          };
          dev-dependencies = {
            fnv = {
              version = "1.0.5";
            };
            seahash = {
              version = "3.0.5";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".gcc."0.3.55" = mkRustCrate {
        package-id = "gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "gcc";
          version = "0.3.55";
          sha256 = "8f5f3913fa0bfe7ee1fd8248b6b9f42a5af4b9d65ec2dd2c3c26132b950ecfc2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "gcc";
            version = "0.3.55";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "**Deprecated** crate, renamed to `cc`\n\nA build-time dependency for Cargo build scripts to assist in invoking the native\nC compiler to compile native C code into a static archive to be linked into Rust\ncode.\n";
            documentation = "https://docs.rs/gcc";
            readme = "README.md";
            keywords = [
              "build-dependencies"
            ];
            categories = [
              "development-tools"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/gcc-rs";
          };
          dependencies = {
            rayon = {
              version = "0.8";
              optional = true;
            };
          };
          dev-dependencies = {
            tempdir = {
              version = "0.3";
            };
          };
          features = {
            parallel = [
              "rayon"
            ];
          };
          badges = {
            appveyor = {
              repository = "alexcrichton/gcc-rs";
            };
            travis-ci = {
              repository = "alexcrichton/gcc-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.12.3" = mkRustCrate {
        package-id = "generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "generic-array";
          version = "0.12.3";
          sha256 = "c68f0274ae0e023facc3c97b2e00f076be70e254bc851d972503b328db79b2ec";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "typenum"
            ];
            extern-name = "typenum";
            package-id = "typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "generic-array";
            version = "0.12.3";
            authors = [
              "Bartłomiej Kamiński <fizyk20@gmail.com>"
              "Aaron Trent <novacrazy@gmail.com>"
            ];
            description = "Generic types implementing functionality of arrays";
            documentation = "http://fizyk20.github.io/generic-array/generic_array/";
            readme = "README.md";
            keywords = [
              "generic"
              "array"
            ];
            categories = [
              "data-structures"
              "no-std"
            ];
            license = "MIT";
            repository = "https://github.com/fizyk20/generic-array.git";
          };
          lib = {
            name = "generic_array";
          };
          dependencies = {
            serde = {
              version = "1.0";
              optional = true;
              default-features = false;
            };
            typenum = {
              version = "1.10";
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1.0";
            };
            serde_json = {
              version = "1.0";
            };
          };
          badges = {
            travis-ci = {
              repository = "fizyk20/generic-array";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".gimli."0.19.0" = mkRustCrate {
        package-id = "gimli 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "gimli";
          version = "0.19.0";
          sha256 = "162d18ae5f2e3b90a993d202f1ba17a5633c2484426f8bcae201f86194bacd00";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "arrayvec"
            ];
            extern-name = "arrayvec";
            package-id = "arrayvec 0.4.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "byteorder"
            ];
            extern-name = "byteorder";
            package-id = "byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "fallible-iterator"
            ];
            extern-name = "fallible_iterator";
            package-id = "fallible-iterator 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "indexmap"
            ];
            extern-name = "indexmap";
            package-id = "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "stable_deref_trait"
            ];
            extern-name = "stable_deref_trait";
            package-id = "stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "gimli";
            version = "0.19.0";
            authors = [
              "Nick Fitzgerald <fitzgen@gmail.com>"
              "Philip Craig <philipjcraig@gmail.com>"
            ];
            exclude = [
              "/ci/*"
              "/releases/*"
              "/.travis.yml"
            ];
            description = "A library for reading and writing the DWARF debugging format.";
            documentation = "https://docs.rs/gimli";
            readme = "./README.md";
            keywords = [
              "DWARF"
              "debug"
              "ELF"
              "eh_frame"
            ];
            categories = [
              "development-tools::debugging"
              "development-tools::profiling"
              "parser-implementations"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/gimli-rs/gimli";
          };
          dependencies = {
            arrayvec = {
              version = "0.4.6";
              default-features = false;
            };
            byteorder = {
              version = "1.0";
              default-features = false;
            };
            fallible-iterator = {
              version = "0.2.0";
              default-features = false;
            };
            indexmap = {
              version = "1.0.2";
              optional = true;
            };
            stable_deref_trait = {
              version = "1.1.0";
              default-features = false;
            };
          };
          dev-dependencies = {
            crossbeam = {
              version = "0.7.1";
            };
            getopts = {
              version = "0.2";
            };
            memmap = {
              version = "0.7";
            };
            num_cpus = {
              version = "1";
            };
            object = {
              version = "0.12";
            };
            rayon = {
              version = "1.0";
            };
            regex = {
              version = "1";
            };
            test-assembler = {
              version = "0.1.3";
            };
            typed-arena = {
              version = "1";
            };
          };
          features = {
            alloc = [
              "fallible-iterator/alloc"
              "stable_deref_trait/alloc"
            ];
            default = [
              "read"
              "write"
              "std"
            ];
            read = [
            ];
            std = [
              "fallible-iterator/std"
              "stable_deref_trait/std"
            ];
            write = [
              "std"
              "indexmap"
            ];
          };
          badges = {
            coveralls = {
              repository = "gimli-rs/gimli";
            };
            travis-ci = {
              repository = "gimli-rs/gimli";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".glob."0.2.11" = mkRustCrate {
        package-id = "glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "glob";
          version = "0.2.11";
          sha256 = "8be18de09a56b60ed0edf84bc9df007e30040691af7acd1c41874faac5895bfb";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "glob";
            version = "0.2.11";
            authors = [
              "The Rust Project Developers"
            ];
            description = "Support for matching file paths against Unix shell style patterns.\n";
            homepage = "https://github.com/rust-lang/glob";
            documentation = "https://doc.rust-lang.org/glob";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang/glob";
          };
          dev-dependencies = {
            tempdir = "0.3";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".glob."0.3.0" = mkRustCrate {
        package-id = "glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "glob";
          version = "0.3.0";
          sha256 = "9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "glob";
            version = "0.3.0";
            authors = [
              "The Rust Project Developers"
            ];
            description = "Support for matching file paths against Unix shell style patterns.\n";
            homepage = "https://github.com/rust-lang/glob";
            documentation = "https://docs.rs/glob/0.3.0";
            categories = [
              "filesystem"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang/glob";
          };
          dev-dependencies = {
            tempdir = {
              version = "0.3";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".goblin."0.0.23" = mkRustCrate {
        package-id = "goblin 0.0.23 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "goblin";
          version = "0.0.23";
          sha256 = "ac56b4753b6b8c2e052ca30717e5a09acf1b02a2c1681bf3d883bd660e5d22bd";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "plain"
            ];
            extern-name = "plain";
            package-id = "plain 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "scroll"
            ];
            extern-name = "scroll";
            package-id = "scroll 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "goblin";
            version = "0.0.23";
            authors = [
              "m4b <m4b.github.io@gmail.com>"
              "seu <seu@panopticon.re>"
              "Will Glynn <will@willglynn.com>"
              "Philip Craig <philipjcraig@gmail.com>"
            ];
            include = [
              "src/**/*"
              "Cargo.toml"
              "CHANGELOG.md"
              "LICENSE"
              "README.md"
              "etc/*"
              "examples/*"
              "tests/*"
              "fuzz/**/*"
            ];
            description = "An impish, cross-platform, ELF, Mach-o, and PE binary parsing and loading crate";
            documentation = "https://docs.rs/goblin";
            readme = "README.md";
            keywords = [
              "binary"
              "elf"
              "mach"
              "pe"
              "archive"
            ];
            categories = [
              "parsing"
              "development-tools::debugging"
            ];
            license = "MIT";
            repository = "https://github.com/m4b/goblin";
          };
          dependencies = {
            log = {
              version = "0.4";
              optional = true;
              default-features = false;
            };
            plain = {
              version = "0.2.3";
            };
            scroll = {
              version = "0.9";
              default_features = false;
            };
          };
          features = {
            alloc = [
              "scroll/derive"
              "log"
            ];
            archive = [
              "alloc"
            ];
            default = [
              "std"
              "elf32"
              "elf64"
              "mach32"
              "mach64"
              "pe32"
              "pe64"
              "archive"
              "endian_fd"
            ];
            elf32 = [
            ];
            elf64 = [
            ];
            endian_fd = [
              "alloc"
            ];
            mach32 = [
              "alloc"
              "endian_fd"
            ];
            mach64 = [
              "alloc"
              "endian_fd"
            ];
            pe32 = [
              "alloc"
              "endian_fd"
            ];
            pe64 = [
              "alloc"
              "endian_fd"
            ];
            std = [
              "alloc"
              "scroll/std"
            ];
          };
          badges = {
            travis-ci = {
              branch = "master";
              repository = "m4b/goblin";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" = mkRustCrate {
        package-id = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "heck";
          version = "0.3.1";
          sha256 = "20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "unicode-segmentation"
            ];
            extern-name = "unicode_segmentation";
            package-id = "unicode-segmentation 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "heck";
            version = "0.3.1";
            authors = [
              "Without Boats <woboats@gmail.com>"
            ];
            description = "heck is a case conversion library.";
            homepage = "https://github.com/withoutboats/heck";
            documentation = "https://docs.rs/heck";
            readme = "README.md";
            keywords = [
              "string"
              "case"
              "camel"
              "snake"
              "unicode"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/withoutboats/heck";
          };
          dependencies = {
            unicode-segmentation = {
              version = "1.2.0";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".humantime."1.2.0" = mkRustCrate {
        package-id = "humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "humantime";
          version = "1.2.0";
          sha256 = "3ca7e5f2e110db35f93b837c81797f3714500b81d517bf20c431b16d3ca4f114";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "quick-error"
            ];
            extern-name = "quick_error";
            package-id = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "humantime";
            version = "1.2.0";
            authors = [
              "Paul Colomiets <paul@colomiets.name>"
            ];
            description = "    A parser and formatter for std::time::{Duration, SystemTime}\n";
            homepage = "https://github.com/tailhook/humantime";
            documentation = "https://docs.rs/humantime";
            readme = "README.md";
            keywords = [
              "time"
              "human"
              "human-friendly"
              "parser"
              "duration"
            ];
            categories = [
              "date-and-time"
            ];
            license = "MIT/Apache-2.0";
          };
          lib = {
            name = "humantime";
            path = "src/lib.rs";
          };
          dependencies = {
            quick-error = {
              version = "1.0.0";
            };
          };
          dev-dependencies = {
            chrono = {
              version = "0.4.0";
            };
            rand = {
              version = "0.4.2";
            };
            time = {
              version = "0.1.39";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.0.2" = mkRustCrate {
        package-id = "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "indexmap";
          version = "1.0.2";
          sha256 = "7e81a7c05f79578dbc15793d8b619db9ba32b4577003ef3af1a91c416798c58d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "indexmap";
            version = "1.0.2";
            authors = [
              "bluss"
              "Josh Stone <cuviper@gmail.com>"
            ];
            description = "A hash table with consistent order and fast iteration.\n\nThe indexmap is a hash table where the iteration order of the key-value\npairs is independent of the hash values of the keys. It has the usual\nhash table functionality, it preserves insertion order except after\nremovals, and it allows lookup of its elements by either hash table key\nor numerical index. A corresponding hash set type is also provided.\n\nThis crate was initially published under the name ordermap, but it was renamed to\nindexmap.\n";
            documentation = "https://docs.rs/indexmap/";
            keywords = [
              "hashmap"
            ];
            categories = [
              "data-structures"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/bluss/indexmap";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "serde-1"
                  ];
                };
              };
              release = {
                no-dev-version = true;
              };
            };
          };
          profile = {
            bench = {
              debug = true;
            };
          };
          lib = {
            bench = false;
          };
          dependencies = {
            serde = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            fnv = {
              version = "1.0";
            };
            itertools = {
              version = "0.7.0";
            };
            lazy_static = {
              version = "1";
            };
            quickcheck = {
              version = "0.6";
              default-features = false;
            };
            rand = {
              version = "0.4";
            };
            serde_test = {
              version = "1.0.5";
            };
          };
          features = {
            serde-1 = [
              "serde"
            ];
            test_debug = [
            ];
            test_low_transition_point = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.4" = mkRustCrate {
        package-id = "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "itoa";
          version = "0.4.4";
          sha256 = "501266b7edd0174f8530248f87f99c88fbe60ca4ef3dd486835b8d8d53136f7f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "itoa";
            version = "0.4.4";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            exclude = [
              "performance.png"
            ];
            description = "Fast functions for printing integer primitives to an io::Write";
            documentation = "https://github.com/dtolnay/itoa";
            readme = "README.md";
            categories = [
              "value-formatting"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/dtolnay/itoa";
          };
          features = {
            default = [
              "std"
            ];
            i128 = [
            ];
            std = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/itoa";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.3.0" = mkRustCrate {
        package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "lazy_static";
          version = "1.3.0";
          sha256 = "bc5729f27f159ddd61f4df6228e827e86643d4d3e7c32183cb30a1c08f604a14";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "lazy_static";
            version = "1.3.0";
            authors = [
              "Marvin Löbel <loebel.marvin@gmail.com>"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "A macro for declaring lazily evaluated statics in Rust.";
            documentation = "https://docs.rs/lazy_static";
            readme = "README.md";
            keywords = [
              "macro"
              "lazy"
              "static"
            ];
            categories = [
              "no-std"
              "rust-patterns"
              "memory-management"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang-nursery/lazy-static.rs";
          };
          dependencies = {
            spin = {
              version = "0.5.0";
              optional = true;
            };
          };
          features = {
            spin_no_std = [
              "spin"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
            is-it-maintained-issue-resolution = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
            is-it-maintained-open-issues = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
            maintenance = {
              status = "passively-maintained";
            };
            travis-ci = {
              repository = "rust-lang-nursery/lazy-static.rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.60" = mkRustCrate {
        package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "libc";
          version = "0.2.60";
          sha256 = "d44e80633f007889c7eff624b709ab43c92d708caad982295768a7b13ca3b5eb";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "libc";
            version = "0.2.60";
            authors = [
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              "/ci/*"
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "Raw FFI bindings to platform libraries like libc.\n";
            homepage = "https://github.com/rust-lang/libc";
            documentation = "http://doc.rust-lang.org/libc";
            readme = "README.md";
            keywords = [
              "libc"
              "ffi"
              "bindings"
              "operating"
              "system"
            ];
            categories = [
              "external-ffi-bindings"
              "no-std"
              "os"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/rust-lang/libc";
          };
          dependencies = {
            rustc-std-workspace-core = {
              version = "1.0.0";
              optional = true;
            };
          };
          features = {
            align = [
            ];
            default = [
              "std"
            ];
            extra_traits = [
            ];
            rustc-dep-of-std = [
              "align"
              "rustc-std-workspace-core"
            ];
            std = [
            ];
            use_std = [
              "std"
            ];
          };
          badges = {
            appveyor = {
              project_name = "rust-lang-libs/libc";
              repository = "rust-lang/libc";
            };
            travis-ci = {
              repository = "rust-lang/libc";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".libloading."0.5.2" = mkRustCrate {
        package-id = "libloading 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "libloading";
          version = "0.5.2";
          sha256 = "f2b111a074963af1d37a139918ac6d49ad1d0d5e47f72fd55388619691a7d753";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "libloading";
            version = "0.5.2";
            authors = [
              "Simonas Kazlauskas <libloading@kazlauskas.me>"
            ];
            build = "build.rs";
            description = "A safer binding to platform’s dynamic library loading utilities";
            documentation = "https://docs.rs/libloading/";
            keywords = [
              "dlopen"
              "load"
              "shared"
              "dylib"
            ];
            license = "ISC";
            repository = "https://github.com/nagisa/rust_libloading/";
          };
          build-dependencies = {
            cc = {
              version = "1.0";
            };
          };
          target = {
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "winerror"
                    "errhandlingapi"
                    "libloaderapi"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".log."0.4.7" = mkRustCrate {
        package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "log";
          version = "0.4.7";
          sha256 = "c275b6ad54070ac2d665eef9197db647b32239c9d244bfb6f041a766d00da5b3";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cfg-if"
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "log";
            version = "0.4.7";
            authors = [
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              "rfcs/**/*"
              "/.travis.yml"
              "/appveyor.yml"
            ];
            description = "A lightweight logging facade for Rust\n";
            documentation = "https://docs.rs/log";
            readme = "README.md";
            keywords = [
              "logging"
            ];
            categories = [
              "development-tools::debugging"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/rust-lang/log";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "std"
                    "serde"
                    "kv_unstable"
                  ];
                };
              };
            };
          };
          test = [
            {
              name = "filters";
              harness = false;
            }
          ];
          dependencies = {
            cfg-if = {
              version = "0.1.2";
            };
            serde = {
              version = "1.0";
              optional = true;
              default-features = false;
            };
          };
          dev-dependencies = {
            serde_test = {
              version = "1.0";
            };
          };
          features = {
            kv_unstable = [
            ];
            max_level_debug = [
            ];
            max_level_error = [
            ];
            max_level_info = [
            ];
            max_level_off = [
            ];
            max_level_trace = [
            ];
            max_level_warn = [
            ];
            release_max_level_debug = [
            ];
            release_max_level_error = [
            ];
            release_max_level_info = [
            ];
            release_max_level_off = [
            ];
            release_max_level_trace = [
            ];
            release_max_level_warn = [
            ];
            std = [
            ];
          };
          badges = {
            appveyor = {
              repository = "alexcrichton/log";
            };
            travis-ci = {
              repository = "rust-lang-nursery/log";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".mach."0.2.3" = mkRustCrate {
        package-id = "mach 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "mach";
          version = "0.2.3";
          sha256 = "86dd2487cdfea56def77b88438a2c915fb45113c5319bfe7e14306ca4cd0b0e1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "mach";
            version = "0.2.3";
            authors = [
              "Nick Fitzgerald <fitzgen@gmail.com>"
              "David Cuddeback <david.cuddeback@gmail.com>"
            ];
            description = "A Rust interface to the user-space API of the Mach 3.0 kernel that underlies OSX.";
            readme = "README.md";
            keywords = [
              "kernel"
              "macos"
              "darwin"
            ];
            categories = [
              "api-bindings"
              "external-ffi-bindings"
              "no-std"
              "os"
            ];
            license = "BSD-2-Clause";
            repository = "https://github.com/fitzgen/mach";
          };
          dependencies = {
            libc = {
              version = "0.2";
              default-features = false;
            };
          };
          features = {
            default = [
              "use_std"
              "deprecated"
            ];
            deprecated = [
            ];
            unstable = [
            ];
            use_std = [
              "libc/use_std"
            ];
          };
          badges = {
            is-it-maintained-issue-resolution = {
              repository = "fitzgen/mach";
            };
            is-it-maintained-open-issues = {
              repository = "fitzgen/mach";
            };
            maintenance = {
              status = "passively-maintained";
            };
            travis-ci = {
              repository = "fitzgen/mach";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".memchr."2.2.1" = mkRustCrate {
        package-id = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "memchr";
          version = "2.2.1";
          sha256 = "88579771288728879b57485cc7d6b07d648c9f0141eb955f8ab7f9d45394468e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "memchr";
            version = "2.2.1";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
              "bluss"
            ];
            exclude = [
              "/ci/*"
              "/.travis.yml"
              "/Makefile"
              "/appveyor.yml"
            ];
            description = "Safe interface to memchr.";
            homepage = "https://github.com/BurntSushi/rust-memchr";
            documentation = "https://docs.rs/memchr/";
            readme = "README.md";
            keywords = [
              "memchr"
              "char"
              "scan"
              "strchr"
              "string"
            ];
            license = "Unlicense/MIT";
            repository = "https://github.com/BurntSushi/rust-memchr";
          };
          profile = {
            test = {
              opt-level = 3;
            };
          };
          lib = {
            name = "memchr";
            bench = false;
          };
          dependencies = {
            libc = {
              version = "0.2.18";
              optional = true;
              default-features = false;
            };
          };
          dev-dependencies = {
            quickcheck = {
              version = "0.8";
              default-features = false;
            };
          };
          features = {
            default = [
              "use_std"
            ];
            use_std = [
            ];
          };
          badges = {
            appveyor = {
              repository = "BurntSushi/rust-memchr";
            };
            travis-ci = {
              repository = "BurntSushi/rust-memchr";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.1" = mkRustCrate {
        package-id = "memoffset 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "memoffset";
          version = "0.5.1";
          sha256 = "ce6075db033bbbb7ee5a0bbd3a3186bbae616f57fb001c485c7ff77955f8177f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rustc_version"
            ];
            extern-name = "rustc_version";
            package-id = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "memoffset";
            version = "0.5.1";
            authors = [
              "Gilad Naaman <gilad.naaman@gmail.com>"
            ];
            description = "offset_of functionality for Rust structs.";
            readme = "README.md";
            keywords = [
              "mem"
              "offset"
              "offset_of"
              "offsetof"
            ];
            categories = [
              "no-std"
            ];
            license = "MIT";
            repository = "https://github.com/Gilnaa/memoffset";
          };
          build-dependencies = {
            rustc_version = {
              version = "0.2.3";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".nix."0.13.1" = mkRustCrate {
        package-id = "nix 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "nix";
          version = "0.13.1";
          sha256 = "4dbdc256eaac2e3bd236d93ad999d3479ef775c863dbda3068c4006a92eec51b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "void"
            ];
            extern-name = "void";
            package-id = "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "nix";
            version = "0.13.1";
            authors = [
              "The nix-rust Project Developers"
            ];
            exclude = [
              "/.gitignore"
              "/.travis.yml"
              "/ci/*"
              "/Cross.toml"
              "/RELEASE_PROCEDURE.md"
              "/bors.toml"
            ];
            description = "Rust friendly bindings to *nix APIs";
            categories = [
              "os::unix-apis"
            ];
            license = "MIT";
            repository = "https://github.com/nix-rust/nix";
          };
          test = [
            {
              name = "test";
              path = "test/test.rs";
            }
            {
              name = "test-aio-drop";
              path = "test/sys/test_aio_drop.rs";
            }
            {
              name = "test-lio-listio-resubmit";
              path = "test/sys/test_lio_listio_resubmit.rs";
            }
            {
              name = "test-mount";
              path = "test/test_mount.rs";
              harness = false;
            }
            {
              name = "test-ptymaster-drop";
              path = "test/test_ptymaster_drop.rs";
            }
          ];
          dependencies = {
            bitflags = {
              version = "1.0";
            };
            cfg-if = {
              version = "0.1.0";
            };
            libc = {
              version = "0.2.57";
            };
            void = {
              version = "1.0.2";
            };
          };
          dev-dependencies = {
            bytes = {
              version = "0.4.8";
            };
            lazy_static = {
              version = "1.2";
            };
            rand = {
              version = "0.5";
            };
            tempfile = {
              version = "3";
            };
          };
          target = {
            "cfg(target_os = \"dragonfly\")" = {
              build-dependencies = {
                cc = {
                  version = "1";
                };
              };
            };
            "cfg(target_os = \"freebsd\")" = {
              dev-dependencies = {
                sysctl = {
                  version = "0.1";
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".nodrop."0.1.13" = mkRustCrate {
        package-id = "nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "nodrop";
          version = "0.1.13";
          sha256 = "2f9667ddcc6cc8a43afc9b7917599d7216aa09c463919ea32c59ed6cac8bc945";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "nodrop";
            version = "0.1.13";
            authors = [
              "bluss"
            ];
            description = "A wrapper type to inhibit drop (destructor). Use std::mem::ManuallyDrop instead!";
            documentation = "https://docs.rs/nodrop/";
            keywords = [
              "container"
              "drop"
              "no_std"
            ];
            categories = [
              "rust-patterns"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bluss/arrayvec";
            metadata = {
              release = {
                no-dev-version = true;
              };
            };
          };
          dependencies = {
            nodrop-union = {
              version = "0.1.8";
              optional = true;
            };
          };
          features = {
            default = [
              "std"
            ];
            std = [
            ];
            use_needs_drop = [
            ];
            use_union = [
              "nodrop-union"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".nom."4.2.3" = mkRustCrate {
        package-id = "nom 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "nom";
          version = "4.2.3";
          sha256 = "2ad2a91a8e869eeb30b9cb3119ae87773a8f4ae617f41b1eb9c154b2905f7bd6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "memchr"
            ];
            extern-name = "memchr";
            package-id = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "version_check"
            ];
            extern-name = "version_check";
            package-id = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "nom";
            version = "4.2.3";
            authors = [
              "contact@geoffroycouprie.com"
            ];
            include = [
              "CHANGELOG.md"
              "LICENSE"
              ".gitignore"
              ".travis.yml"
              "Cargo.toml"
              "src/*.rs"
              "tests/*.rs"
              "build.rs"
            ];
            description = "A byte-oriented, zero-copy, parser combinators library";
            documentation = "https://docs.rs/nom";
            readme = "README.md";
            keywords = [
              "parser"
              "parser-combinators"
              "parsing"
              "streaming"
              "bit"
            ];
            categories = [
              "parsing"
            ];
            license = "MIT";
            repository = "https://github.com/Geal/nom";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                  features = [
                    "alloc"
                    "std"
                    "regexp"
                    "regexp_macros"
                    "verbose-errors"
                  ];
                };
              };
            };
          };
          profile = {
            bench = {
              lto = true;
              codegen-units = 1;
              debug = true;
            };
          };
          test = [
            {
              name = "arithmetic";
            }
            {
              name = "arithmetic_ast";
              required-features = [
                "alloc"
              ];
            }
            {
              name = "blockbuf-arithmetic";
            }
            {
              name = "complete_arithmetic";
            }
            {
              name = "complete_float";
            }
            {
              name = "css";
            }
            {
              name = "custom_errors";
            }
            {
              name = "float";
            }
            {
              name = "inference";
            }
            {
              name = "ini";
              required-features = [
                "alloc"
              ];
            }
            {
              name = "ini_str";
              required-features = [
                "alloc"
              ];
            }
            {
              name = "issues";
              required-features = [
                "alloc"
                "regexp_macros"
              ];
            }
            {
              name = "json";
            }
            {
              name = "mp4";
            }
            {
              name = "multiline";
              required-features = [
                "alloc"
              ];
            }
            {
              name = "named_args";
            }
            {
              name = "overflow";
            }
            {
              name = "reborrow_fold";
            }
            {
              name = "test1";
            }
          ];
          bench = [
            {
              name = "arithmetic";
              harness = false;
            }
            {
              name = "http";
              harness = false;
            }
            {
              name = "ini";
              harness = false;
            }
            {
              name = "ini_complete";
              harness = false;
            }
            {
              name = "ini_str";
              harness = false;
            }
            {
              name = "json";
              harness = false;
            }
          ];
          dependencies = {
            lazy_static = {
              version = "^1.0";
              optional = true;
            };
            memchr = {
              version = "^2.0";
              default-features = false;
            };
            regex = {
              version = "^1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            criterion = {
              version = "0.2";
            };
            jemallocator = {
              version = "^0.1";
            };
          };
          build-dependencies = {
            version_check = {
              version = "^0.1";
            };
          };
          features = {
            alloc = [
            ];
            default = [
              "std"
            ];
            regexp = [
              "regex"
            ];
            regexp_macros = [
              "regexp"
              "lazy_static"
            ];
            std = [
              "alloc"
              "memchr/use_std"
            ];
            verbose-errors = [
              "alloc"
            ];
          };
          badges = {
            coveralls = {
              branch = "master";
              repository = "Geal/nom";
              service = "github";
            };
            maintenance = {
              status = "actively-developed";
            };
            travis-ci = {
              repository = "Geal/nom";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.41" = mkRustCrate {
        package-id = "num-integer 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "num-integer";
          version = "0.1.41";
          sha256 = "b85e541ef8255f6cf42bbfe4ef361305c6c135d10919ecc26126c4e5ae94bc09";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "num-traits"
            ];
            extern-name = "num_traits";
            package-id = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "num-integer";
            version = "0.1.41";
            authors = [
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              "/ci/*"
              "/.travis.yml"
              "/bors.toml"
            ];
            description = "Integer traits and functions";
            homepage = "https://github.com/rust-num/num-integer";
            documentation = "https://docs.rs/num-integer";
            readme = "README.md";
            keywords = [
              "mathematics"
              "numerics"
            ];
            categories = [
              "algorithms"
              "science"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-num/num-integer";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "std"
                  ];
                };
              };
            };
          };
          dependencies = {
            num-traits = {
              version = "0.2.4";
              default-features = false;
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1.3";
            };
          };
          features = {
            default = [
              "std"
            ];
            i128 = [
              "num-traits/i128"
            ];
            std = [
              "num-traits/std"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.8" = mkRustCrate {
        package-id = "num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "num-traits";
          version = "0.2.8";
          sha256 = "6ba9a427cfca2be13aa6f6403b0b7e7368fe982bfa16fccc450ce74c46cd9b32";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "num-traits";
            version = "0.2.8";
            authors = [
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              "/ci/*"
              "/.travis.yml"
              "/bors.toml"
            ];
            description = "Numeric traits for generic mathematics";
            homepage = "https://github.com/rust-num/num-traits";
            documentation = "https://docs.rs/num-traits";
            readme = "README.md";
            keywords = [
              "mathematics"
              "numerics"
            ];
            categories = [
              "algorithms"
              "science"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-num/num-traits";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "std"
                  ];
                };
              };
            };
          };
          dependencies = {
          };
          build-dependencies = {
            autocfg = {
              version = "0.1.3";
            };
          };
          features = {
            default = [
              "std"
            ];
            i128 = [
            ];
            std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.10.1" = mkRustCrate {
        package-id = "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "num_cpus";
          version = "1.10.1";
          sha256 = "bcef43580c035376c0705c42792c294b66974abbfd2789b511784023f71f3273";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "num_cpus";
            version = "1.10.1";
            authors = [
              "Sean McArthur <sean@seanmonstar.com>"
            ];
            description = "Get the number of CPUs on a machine.";
            documentation = "https://docs.rs/num_cpus";
            readme = "README.md";
            keywords = [
              "cpu"
              "cpus"
              "cores"
            ];
            categories = [
              "hardware-support"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/seanmonstar/num_cpus";
          };
          dependencies = {
            libc = {
              version = "0.2.26";
            };
          };
          dev-dependencies = {
            doc-comment = {
              version = "0.3";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.2.2" = mkRustCrate {
        package-id = "opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "opaque-debug";
          version = "0.2.2";
          sha256 = "93f5bb2e8e8dec81642920ccff6b61f1eb94fa3020c5a325c9851ff604152409";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "opaque-debug";
            version = "0.2.2";
            authors = [
              "RustCrypto Developers"
            ];
            description = "Macro for opaque Debug trait implementation";
            documentation = "https://docs.rs/opaque-debug";
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/RustCrypto/utils";
          };
          dependencies = {
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".peeking_take_while."0.1.2" = mkRustCrate {
        package-id = "peeking_take_while 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "peeking_take_while";
          version = "0.1.2";
          sha256 = "19b17cddbe7ec3f8bc800887bab5e717348c95ea2ca0b1bf0837fb964dc67099";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "peeking_take_while";
            version = "0.1.2";
            authors = [
              "Nick Fitzgerald <fitzgen@gmail.com>"
            ];
            description = "Like `Iterator::take_while`, but calls the predicate on a peeked value. This allows you to use `Iterator::by_ref` and `Iterator::take_while` together, and still get the first value for which the `take_while` predicate returned false after dropping the `by_ref`.";
            readme = "./README.md";
            keywords = [
              "iterator"
              "take_while"
              "peek"
              "by_ref"
            ];
            categories = [
              "rust-patterns"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/fitzgen/peeking_take_while";
          };
          badges = {
            travis-ci = {
              repository = "fitzgen/peeking_take_while";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".plain."0.2.3" = mkRustCrate {
        package-id = "plain 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "plain";
          version = "0.2.3";
          sha256 = "b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "plain";
            version = "0.2.3";
            authors = [
              "jzr"
            ];
            description = "A small Rust library that allows users to reinterpret data of certain types safely.";
            homepage = "https://github.com/randomites/plain";
            documentation = "https://docs.rs/plain";
            readme = "README.md";
            keywords = [
              "plain"
              "pod"
              "ffi"
              "memory"
            ];
            categories = [
              "no-std"
              "data-structures"
              "parsing"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/randomites/plain";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".pretty_env_logger."0.3.0" = mkRustCrate {
        package-id = "pretty_env_logger 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "pretty_env_logger";
          version = "0.3.0";
          sha256 = "df8b3f4e0475def7d9c2e5de8e5a1306949849761e107b360d03e98eafaffd61";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "chrono"
            ];
            extern-name = "chrono";
            package-id = "chrono 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "env_logger"
            ];
            extern-name = "env_logger";
            package-id = "env_logger 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "pretty_env_logger";
            version = "0.3.0";
            authors = [
              "Sean McArthur <sean@seanmonstar>"
            ];
            include = [
              "Cargo.toml"
              "LICENSE-APACHE"
              "LICENSE-MIT"
              "src/**/*"
            ];
            description = "a visually pretty env_logger";
            readme = "README.md";
            keywords = [
              "log"
              "logger"
              "logging"
            ];
            categories = [
              "development-tools::debugging"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/seanmonstar/pretty-env-logger";
          };
          dependencies = {
            chrono = {
              version = "0.4.4";
            };
            env_logger = {
              version = "0.6";
            };
            log = {
              version = "0.4";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."0.4.30" = mkRustCrate {
        package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "proc-macro2";
          version = "0.4.30";
          sha256 = "cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "unicode-xid"
              "unicode-xid"
            ];
            extern-name = "unicode_xid";
            package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "proc-macro2";
            version = "0.4.30";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            build = "build.rs";
            description = "A stable implementation of the upcoming new `proc_macro` API. Comes with an\noption, off by default, to also reimplement itself in terms of the upstream\nunstable API.\n";
            homepage = "https://github.com/alexcrichton/proc-macro2";
            documentation = "https://docs.rs/proc-macro2";
            readme = "README.md";
            keywords = [
              "macros"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/proc-macro2";
            metadata = {
              docs = {
                rs = {
                  rustc-args = [
                    "--cfg"
                    "procmacro2_semver_exempt"
                  ];
                  rustdoc-args = [
                    "--cfg"
                    "procmacro2_semver_exempt"
                  ];
                };
              };
            };
          };
          dependencies = {
            unicode-xid = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            quote = {
              version = "0.6";
            };
          };
          features = {
            default = [
              "proc-macro"
            ];
            nightly = [
            ];
            proc-macro = [
            ];
            span-locations = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "alexcrichton/proc-macro2";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.2" = mkRustCrate {
        package-id = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "quick-error";
          version = "1.2.2";
          sha256 = "9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "quick-error";
            version = "1.2.2";
            authors = [
              "Paul Colomiets <paul@colomiets.name>"
              "Colin Kiegel <kiegel@gmx.de>"
            ];
            description = "    A macro which makes error types pleasant to write.\n";
            homepage = "http://github.com/tailhook/quick-error";
            documentation = "http://docs.rs/quick-error";
            keywords = [
              "macro"
              "error"
              "type"
              "enum"
            ];
            categories = [
              "rust-patterns"
            ];
            license = "MIT/Apache-2.0";
            repository = "http://github.com/tailhook/quick-error";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".quote."0.6.13" = mkRustCrate {
        package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "quote";
          version = "0.6.13";
          sha256 = "6ce23b6b870e8f94f81fb0a363d65d86675884b34a09043c81e5562f11c1f8e1";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "quote";
            version = "0.6.13";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "Cargo.toml"
              "src/**/*.rs"
              "tests/**/*.rs"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "Quasi-quoting macro quote!(...)";
            documentation = "https://docs.rs/quote/";
            readme = "README.md";
            keywords = [
              "syn"
            ];
            categories = [
              "development-tools::procedural-macro-helpers"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/dtolnay/quote";
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4.21";
              default-features = false;
            };
          };
          features = {
            default = [
              "proc-macro"
            ];
            proc-macro = [
              "proc-macro2/proc-macro"
            ];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/quote";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand."0.6.5" = mkRustCrate {
        package-id = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand";
          version = "0.6.5";
          sha256 = "6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_chacha"
            ];
            extern-name = "rand_chacha";
            package-id = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_hc"
            ];
            extern-name = "rand_hc";
            package-id = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_isaac"
            ];
            extern-name = "rand_isaac";
            package-id = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_jitter"
            ];
            extern-name = "rand_jitter";
            package-id = "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_os"
            ];
            extern-name = "rand_os";
            package-id = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_pcg"
            ];
            extern-name = "rand_pcg";
            package-id = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_xorshift"
            ];
            extern-name = "rand_xorshift";
            package-id = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand";
            version = "0.6.5";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            build = "build.rs";
            exclude = [
              "/utils/*"
              "/.travis.yml"
              "/appveyor.yml"
              ".gitignore"
            ];
            description = "Random number generators and other randomness functionality.\n";
            homepage = "https://crates.io/crates/rand";
            documentation = "https://rust-random.github.io/rand";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                };
              };
            };
          };
          dependencies = {
            log = {
              version = "0.4";
              optional = true;
            };
            packed_simd = {
              version = "0.3";
              features = [
                "into_bits"
              ];
              optional = true;
            };
            rand_chacha = {
              version = "0.1";
            };
            rand_core = {
              version = "0.4";
            };
            rand_hc = {
              version = "0.1";
            };
            rand_isaac = {
              version = "0.1";
            };
            rand_jitter = {
              version = "0.1";
            };
            rand_os = {
              version = "0.1";
              optional = true;
            };
            rand_pcg = {
              version = "0.1";
            };
            rand_xorshift = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            average = {
              version = "0.9.2";
            };
            rand_xoshiro = {
              version = "0.1";
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1";
            };
          };
          features = {
            alloc = [
              "rand_core/alloc"
            ];
            default = [
              "std"
            ];
            i128_support = [
            ];
            nightly = [
              "simd_support"
            ];
            serde1 = [
              "rand_core/serde1"
              "rand_isaac/serde1"
              "rand_xorshift/serde1"
            ];
            simd_support = [
              "packed_simd"
            ];
            std = [
              "rand_core/std"
              "alloc"
              "rand_os"
              "rand_jitter/std"
            ];
            stdweb = [
              "rand_os/stdweb"
            ];
            wasm-bindgen = [
              "rand_os/wasm-bindgen"
            ];
          };
          target = {
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                  default-features = false;
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "minwindef"
                    "ntsecapi"
                    "profileapi"
                    "winnt"
                  ];
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.1.1" = mkRustCrate {
        package-id = "rand_chacha 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_chacha";
          version = "0.1.1";
          sha256 = "556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_chacha";
            version = "0.1.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            build = "build.rs";
            description = "ChaCha random number generator\n";
            homepage = "https://crates.io/crates/rand_chacha";
            documentation = "https://rust-random.github.io/rand/rand_chacha";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "chacha"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = ">=0.2, <0.4";
              default-features = false;
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1";
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" = mkRustCrate {
        package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_core";
          version = "0.3.1";
          sha256 = "7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_core";
            version = "0.3.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "Core random number generator traits and tools for implementation.\n";
            homepage = "https://crates.io/crates/rand_core";
            documentation = "https://rust-random.github.io/rand/rand_core";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = "0.4";
            };
          };
          features = {
            alloc = [
              "rand_core/alloc"
            ];
            default = [
              "std"
            ];
            serde1 = [
              "rand_core/serde1"
            ];
            std = [
              "rand_core/std"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.0" = mkRustCrate {
        package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_core";
          version = "0.4.0";
          sha256 = "d0e7a549d590831370895ab7ba4ea0c1b6b011d106b5ff2da6eee112615e6dc0";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "rand_core";
            version = "0.4.0";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "Core random number generator traits and tools for implementation.\n";
            homepage = "https://crates.io/crates/rand_core";
            documentation = "https://rust-random.github.io/rand/rand_core";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          features = {
            alloc = [
            ];
            serde1 = [
              "serde"
              "serde_derive"
            ];
            std = [
              "alloc"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.1.0" = mkRustCrate {
        package-id = "rand_hc 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_hc";
          version = "0.1.0";
          sha256 = "7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_hc";
            version = "0.1.0";
            authors = [
              "The Rand Project Developers"
            ];
            description = "HC128 random number generator\n";
            homepage = "https://crates.io/crates/rand_hc";
            documentation = "https://docs.rs/rand_hc";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "hc128"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = ">=0.2, <0.4";
              default-features = false;
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_isaac."0.1.1" = mkRustCrate {
        package-id = "rand_isaac 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_isaac";
          version = "0.1.1";
          sha256 = "ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_isaac";
            version = "0.1.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "ISAAC random number generator\n";
            homepage = "https://crates.io/crates/rand_isaac";
            documentation = "https://rust-random.github.io/rand/rand_isaac";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "isaac"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = "0.3";
              default-features = false;
            };
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1";
            };
          };
          features = {
            serde1 = [
              "serde"
              "serde_derive"
              "rand_core/serde1"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_jitter."0.1.4" = mkRustCrate {
        package-id = "rand_jitter 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_jitter";
          version = "0.1.4";
          sha256 = "1166d5c91dc97b88d1decc3285bb0a99ed84b05cfd0bc2341bdf2d43fc41e39b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_jitter";
            version = "0.1.4";
            authors = [
              "The Rand Project Developers"
            ];
            description = "Random number generator based on timing jitter";
            documentation = "https://docs.rs/rand_jitter";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "os"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            log = {
              version = "0.4";
              optional = true;
            };
            rand_core = {
              version = "0.4";
            };
          };
          features = {
            std = [
              "rand_core/std"
            ];
          };
          target = {
            "cfg(any(target_os = \"macos\", target_os = \"ios\"))" = {
              dependencies = {
                libc = {
                  version = "0.2";
                  default_features = false;
                };
              };
            };
            "cfg(target_os = \"windows\")" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "profileapi"
                  ];
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_os."0.1.3" = mkRustCrate {
        package-id = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_os";
          version = "0.1.3";
          sha256 = "7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cloudabi"
            ];
            extern-name = "cloudabi";
            package-id = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "fuchsia-cprng"
            ];
            extern-name = "fuchsia_cprng";
            package-id = "fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rdrand"
            ];
            extern-name = "rdrand";
            package-id = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_os";
            version = "0.1.3";
            authors = [
              "The Rand Project Developers"
            ];
            description = "OS backed Random Number Generator";
            homepage = "https://crates.io/crates/rand_os";
            documentation = "https://docs.rs/rand_os";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "os"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            log = {
              version = "0.4";
              optional = true;
            };
            rand_core = {
              version = "0.4";
              features = [
                "std"
              ];
            };
          };
          target = {
            "cfg(target_env = \"sgx\")" = {
              dependencies = {
                rdrand = {
                  version = "0.4.0";
                };
              };
            };
            "cfg(target_os = \"cloudabi\")" = {
              dependencies = {
                cloudabi = {
                  version = "0.0.3";
                };
              };
            };
            "cfg(target_os = \"fuchsia\")" = {
              dependencies = {
                fuchsia-cprng = {
                  version = "0.1.0";
                };
              };
            };
            "cfg(unix)" = {
              dependencies = {
                libc = {
                  version = "0.2";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "minwindef"
                    "ntsecapi"
                    "winnt"
                  ];
                };
              };
            };
            wasm32-unknown-unknown = {
              dependencies = {
                stdweb = {
                  version = "0.4";
                  optional = true;
                };
                wasm-bindgen = {
                  version = "0.2.12";
                  optional = true;
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.1.2" = mkRustCrate {
        package-id = "rand_pcg 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_pcg";
          version = "0.1.2";
          sha256 = "abf9b09b01790cfe0364f52bf32995ea3c39f4d2dd011eac241d2914146d0b44";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "autocfg"
            ];
            extern-name = "autocfg";
            package-id = "autocfg 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_pcg";
            version = "0.1.2";
            authors = [
              "The Rand Project Developers"
            ];
            build = "build.rs";
            description = "Selected PCG random number generators\n";
            homepage = "https://crates.io/crates/rand_pcg";
            documentation = "https://rust-random.github.io/rand/rand_pcg";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "pcg"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = "0.4";
            };
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1.1.2";
            };
          };
          build-dependencies = {
            autocfg = {
              version = "0.1";
            };
          };
          features = {
            serde1 = [
              "serde"
              "serde_derive"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.1.1" = mkRustCrate {
        package-id = "rand_xorshift 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rand_xorshift";
          version = "0.1.1";
          sha256 = "cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rand_xorshift";
            version = "0.1.1";
            authors = [
              "The Rand Project Developers"
              "The Rust Project Developers"
            ];
            description = "Xorshift random number generator\n";
            homepage = "https://crates.io/crates/rand_xorshift";
            documentation = "https://rust-random.github.io/rand/rand_xorshift";
            readme = "README.md";
            keywords = [
              "random"
              "rng"
              "xorshift"
            ];
            categories = [
              "algorithms"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-random/rand";
          };
          dependencies = {
            rand_core = {
              version = ">=0.2, <0.4";
              default-features = false;
            };
            serde = {
              version = "1";
              optional = true;
            };
            serde_derive = {
              version = "^1.0.38";
              optional = true;
            };
          };
          dev-dependencies = {
            bincode = {
              version = "1";
            };
          };
          features = {
            serde1 = [
              "serde"
              "serde_derive"
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-random/rand";
            };
            travis-ci = {
              repository = "rust-random/rand";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".raw-cpuid."6.1.0" = mkRustCrate {
        package-id = "raw-cpuid 6.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "raw-cpuid";
          version = "6.1.0";
          sha256 = "30a9d219c32c9132f7be513c18be77c9881c7107d2ab5569d205a6a0f0e6dc7d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cc"
            ];
            extern-name = "cc";
            package-id = "cc 1.0.38 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rustc_version"
            ];
            extern-name = "rustc_version";
            package-id = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "raw-cpuid";
            version = "6.1.0";
            authors = [
              "Gerd Zellweger <mail@gerdzellweger.com>"
            ];
            build = "build.rs";
            description = "A library to parse the x86 CPUID instruction, written in rust with no external dependencies. The implementation closely resembles the Intel CPUID manual description. The library does only depend on libcore.";
            homepage = "https://github.com/gz/rust-cpuid";
            documentation = "https://docs.rs/raw-cpuid/";
            readme = "README.md";
            keywords = [
              "cpuid"
              "x86"
              "amd64"
              "os"
              "libcore"
            ];
            license = "MIT";
            repository = "https://github.com/gz/rust-cpuid";
          };
          bin = [
            {
              name = "cpuid";
              path = "src/bin/cpuid.rs";
            }
          ];
          test = [
            {
              name = "no_std_build";
              path = "tests/no_std_build.rs";
              harness = false;
            }
          ];
          dependencies = {
            bitflags = {
              version = "1.0";
            };
            serde = {
              version = "1.0";
              optional = true;
              default-features = false;
            };
            serde_derive = {
              version = "1.0";
              optional = true;
            };
          };
          build-dependencies = {
            cc = {
              version = "1";
            };
            rustc_version = {
              version = "0.2";
            };
          };
          features = {
            nightly = [
            ];
            serialize = [
              "serde"
              "serde_derive"
            ];
            use_arch = [
            ];
          };
          target = {
            "cfg(unix)" = {
              dev-dependencies = {
                libc = {
                  version = "0.2";
                  default-features = false;
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rayon."1.1.0" = mkRustCrate {
        package-id = "rayon 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rayon";
          version = "1.1.0";
          sha256 = "a4b0186e22767d5b9738a05eab7c6ac90b15db17e5b5f9bd87976dd7d89a10a4";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "crossbeam-deque"
            ];
            extern-name = "crossbeam_deque";
            package-id = "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "either"
            ];
            extern-name = "either";
            package-id = "either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rayon-core"
            ];
            extern-name = "rayon_core";
            package-id = "rayon-core 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rayon";
            version = "1.1.0";
            authors = [
              "Niko Matsakis <niko@alum.mit.edu>"
              "Josh Stone <cuviper@gmail.com>"
            ];
            exclude = [
              "/ci/*"
              "/scripts/*"
              "/.travis.yml"
              "/appveyor.yml"
              "/bors.toml"
            ];
            description = "Simple work-stealing parallelism for Rust";
            documentation = "https://docs.rs/rayon/";
            readme = "README.md";
            keywords = [
              "parallel"
              "thread"
              "concurrency"
              "join"
              "performance"
            ];
            categories = [
              "concurrency"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/rayon-rs/rayon";
          };
          dependencies = {
            crossbeam-deque = {
              version = "0.6.3";
            };
            either = {
              version = "1.0";
              default-features = false;
            };
            rayon-core = {
              version = "1.5.0";
            };
          };
          dev-dependencies = {
            doc-comment = {
              version = "0.3";
            };
            docopt = {
              version = "1";
            };
            lazy_static = {
              version = "1";
            };
            rand = {
              version = "0.6";
            };
            rand_xorshift = {
              version = "0.1";
            };
            serde = {
              version = "1";
            };
            serde_derive = {
              version = "1";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.5.0" = mkRustCrate {
        package-id = "rayon-core 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rayon-core";
          version = "1.5.0";
          sha256 = "ebbe0df8435ac0c397d467b6cad6d25543d06e8a019ef3f6af3c384597515bd2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "crossbeam-deque"
            ];
            extern-name = "crossbeam_deque";
            package-id = "crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "crossbeam-queue"
            ];
            extern-name = "crossbeam_queue";
            package-id = "crossbeam-queue 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "crossbeam-utils"
            ];
            extern-name = "crossbeam_utils";
            package-id = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "num_cpus"
            ];
            extern-name = "num_cpus";
            package-id = "num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rayon-core";
            version = "1.5.0";
            authors = [
              "Niko Matsakis <niko@alum.mit.edu>"
              "Josh Stone <cuviper@gmail.com>"
            ];
            build = "build.rs";
            links = "rayon-core";
            description = "Core APIs for Rayon";
            documentation = "https://docs.rs/rayon/";
            readme = "README.md";
            keywords = [
              "parallel"
              "thread"
              "concurrency"
              "join"
              "performance"
            ];
            categories = [
              "concurrency"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/rayon-rs/rayon";
          };
          test = [
            {
              name = "stack_overflow_crash";
              path = "tests/stack_overflow_crash.rs";
              harness = false;
            }
            {
              name = "double_init_fail";
              path = "tests/double_init_fail.rs";
            }
            {
              name = "init_zero_threads";
              path = "tests/init_zero_threads.rs";
            }
            {
              name = "scope_join";
              path = "tests/scope_join.rs";
            }
            {
              name = "simple_panic";
              path = "tests/simple_panic.rs";
            }
            {
              name = "scoped_threadpool";
              path = "tests/scoped_threadpool.rs";
            }
          ];
          dependencies = {
            crossbeam-deque = {
              version = "0.6.3";
            };
            crossbeam-queue = {
              version = "0.1.2";
            };
            crossbeam-utils = {
              version = "0.6.5";
            };
            lazy_static = {
              version = "1";
            };
            num_cpus = {
              version = "1.2";
            };
          };
          dev-dependencies = {
            rand = {
              version = "0.6";
            };
            rand_xorshift = {
              version = "0.1";
            };
            scoped-tls = {
              version = "1.0";
            };
          };
          target = {
            "cfg(unix)" = {
              dev-dependencies = {
                libc = {
                  version = "0.2";
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rdrand."0.4.0" = mkRustCrate {
        package-id = "rdrand 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rdrand";
          version = "0.4.0";
          sha256 = "678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rand_core"
            ];
            extern-name = "rand_core";
            package-id = "rand_core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rdrand";
            version = "0.4.0";
            authors = [
              "Simonas Kazlauskas <rdrand@kazlauskas.me>"
            ];
            description = "An implementation of random number generator based on rdrand and rdseed instructions";
            documentation = "https://docs.rs/rdrand/0.4.0/";
            keywords = [
              "rand"
              "rdrand"
              "rdseed"
              "random"
            ];
            license = "ISC";
            repository = "https://github.com/nagisa/rust_rdrand/";
          };
          dependencies = {
            rand_core = {
              version = "0.3";
              default-features = false;
            };
          };
          features = {
            default = [
              "std"
            ];
            std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.56" = mkRustCrate {
        package-id = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "redox_syscall";
          version = "0.1.56";
          sha256 = "2439c63f3f6139d1b57529d16bc3b8bb855230c8efcc5d3a896c8bea7c3b1e84";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "redox_syscall";
            version = "0.1.56";
            authors = [
              "Jeremy Soller <jackpot51@gmail.com>"
            ];
            description = "A Rust library to access raw Redox system calls";
            documentation = "https://docs.rs/redox_syscall";
            license = "MIT";
            repository = "https://gitlab.redox-os.org/redox-os/syscall";
          };
          lib = {
            name = "syscall";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.0" = mkRustCrate {
        package-id = "redox_users 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "redox_users";
          version = "0.3.0";
          sha256 = "3fe5204c3a17e97dde73f285d49be585df59ed84b50a872baf416e73b62c3828";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "argon2rs"
            ];
            extern-name = "argon2rs";
            package-id = "argon2rs 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand_os"
            ];
            extern-name = "rand_os";
            package-id = "rand_os 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_syscall"
            ];
            extern-name = "syscall";
            package-id = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "redox_users";
            version = "0.3.0";
            authors = [
              "Jose Narvaez <goyox86@gmail.com>"
              "Wesley Hershberger <mggmugginsmc@gmail.com>"
            ];
            description = "A Rust library to access Redox users and groups functionality";
            documentation = "https://docs.rs/redox_users";
            readme = "README.md";
            keywords = [
              "redox"
              "auth"
            ];
            license = "MIT";
            repository = "https://gitlab.redox-os.org/redox-os/users";
          };
          dependencies = {
            argon2rs = {
              version = "0.2";
              default-features = false;
            };
            failure = {
              version = "0.1.1";
            };
            rand_os = {
              version = "0.1";
            };
            redox_syscall = {
              version = "0.1";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".regex."1.2.0" = mkRustCrate {
        package-id = "regex 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "regex";
          version = "1.2.0";
          sha256 = "6b23da8dfd98a84bd7e08700190a5d9f7d2d38abd4369dd1dae651bc40bfd2cc";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "aho-corasick"
            ];
            extern-name = "aho_corasick";
            package-id = "aho-corasick 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "memchr"
            ];
            extern-name = "memchr";
            package-id = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "regex-syntax"
            ];
            extern-name = "regex_syntax";
            package-id = "regex-syntax 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "thread_local"
            ];
            extern-name = "thread_local";
            package-id = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "utf8-ranges"
            ];
            extern-name = "utf8_ranges";
            package-id = "utf8-ranges 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "regex";
            version = "1.2.0";
            authors = [
              "The Rust Project Developers"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
              "/ci/*"
              "/scripts/*"
            ];
            autotests = false;
            description = "An implementation of regular expressions for Rust. This implementation uses\nfinite automata and guarantees linear time matching on all inputs.\n";
            homepage = "https://github.com/rust-lang/regex";
            documentation = "https://docs.rs/regex";
            readme = "README.md";
            categories = [
              "text-processing"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang/regex";
          };
          profile = {
            test = {
              debug = true;
            };
            bench = {
              debug = true;
            };
            release = {
              debug = true;
            };
          };
          lib = {
            bench = false;
          };
          test = [
            {
              name = "default";
              path = "tests/test_default.rs";
            }
            {
              name = "default-bytes";
              path = "tests/test_default_bytes.rs";
            }
            {
              name = "nfa";
              path = "tests/test_nfa.rs";
            }
            {
              name = "nfa-utf8bytes";
              path = "tests/test_nfa_utf8bytes.rs";
            }
            {
              name = "nfa-bytes";
              path = "tests/test_nfa_bytes.rs";
            }
            {
              name = "backtrack";
              path = "tests/test_backtrack.rs";
            }
            {
              name = "backtrack-utf8bytes";
              path = "tests/test_backtrack_utf8bytes.rs";
            }
            {
              name = "backtrack-bytes";
              path = "tests/test_backtrack_bytes.rs";
            }
            {
              name = "crates-regex";
              path = "tests/test_crates_regex.rs";
            }
          ];
          dependencies = {
            aho-corasick = {
              version = "0.7.4";
            };
            memchr = {
              version = "2.2.1";
            };
            regex-syntax = {
              version = "0.6.9";
            };
            thread_local = {
              version = "0.3.6";
            };
            utf8-ranges = {
              version = "1.0.1";
            };
          };
          dev-dependencies = {
            doc-comment = {
              version = "0.3";
            };
            lazy_static = {
              version = "1";
            };
            quickcheck = {
              version = "0.8";
              default-features = false;
            };
            rand = {
              version = "0.6.5";
            };
          };
          features = {
            default = [
              "use_std"
            ];
            pattern = [
            ];
            unstable = [
              "pattern"
            ];
            use_std = [
            ];
          };
          badges = {
            appveyor = {
              repository = "rust-lang-libs/regex";
            };
            travis-ci = {
              repository = "rust-lang/regex";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.10" = mkRustCrate {
        package-id = "regex-syntax 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "regex-syntax";
          version = "0.6.10";
          sha256 = "cd5485bf1523a9ed51c4964273f22f63f24e31632adb5dad134f488f86a3875c";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "ucd-util"
            ];
            extern-name = "ucd_util";
            package-id = "ucd-util 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "regex-syntax";
            version = "0.6.10";
            authors = [
              "The Rust Project Developers"
            ];
            description = "A regular expression parser.";
            homepage = "https://github.com/rust-lang/regex";
            documentation = "https://docs.rs/regex-syntax";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang/regex";
          };
          dependencies = {
            ucd-util = {
              version = "0.1.4";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".region."2.1.2" = mkRustCrate {
        package-id = "region 2.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "region";
          version = "2.1.2";
          sha256 = "448e868c6e4cfddfa49b6a72c95906c04e8547465e9536575b95c70a4044f856";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "mach"
            ];
            extern-name = "mach";
            package-id = "mach 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "region";
            version = "2.1.2";
            authors = [
              "Elliott Linder <elliott.darfink@gmail.com>"
            ];
            description = "A library for manipulating memory regions";
            homepage = "https://github.com/darfink/region-rs";
            documentation = "https://docs.rs/region";
            readme = "README.md";
            keywords = [
              "region"
              "page"
              "lock"
              "protect"
              "maps"
            ];
            license = "MIT";
            repository = "https://github.com/darfink/region-rs";
          };
          dependencies = {
            bitflags = {
              version = "1.0";
            };
            libc = {
              version = "0.2";
            };
          };
          dev-dependencies = {
            memmap = {
              version = "0.7";
            };
          };
          target = {
            "cfg(any(target_os = \"macos\", target_os = \"ios\"))" = {
              dependencies = {
                mach = {
                  version = "0.2";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "basetsd"
                    "minwindef"
                    "sysinfoapi"
                    "memoryapi"
                    "winnt"
                  ];
                };
              };
            };
          };
          badges = {
            azure-devops = {
              pipeline = "darfink.region-rs";
              project = "darfink/region-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.15" = mkRustCrate {
        package-id = "rustc-demangle 0.1.15 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rustc-demangle";
          version = "0.1.15";
          sha256 = "a7f4dccf6f4891ebcc0c39f9b6eb1a83b9bf5d747cb439ec6fba4f3b977038af";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "rustc-demangle";
            version = "0.1.15";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "Rust compiler symbol demangling.\n";
            homepage = "https://github.com/alexcrichton/rustc-demangle";
            documentation = "https://docs.rs/rustc-demangle";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/rustc-demangle";
          };
          dependencies = {
            compiler_builtins = {
              version = "0.1.2";
              optional = true;
            };
            core = {
              version = "1.0.0";
              optional = true;
              package = "rustc-std-workspace-core";
            };
          };
          features = {
            rustc-dep-of-std = [
              "core"
              "compiler_builtins"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".rustc_version."0.2.3" = mkRustCrate {
        package-id = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "rustc_version";
          version = "0.2.3";
          sha256 = "138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "semver"
            ];
            extern-name = "semver";
            package-id = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "rustc_version";
            version = "0.2.3";
            authors = [
              "Marvin Löbel <loebel.marvin@gmail.com>"
            ];
            description = "A library for querying the version of a installed rustc compiler";
            documentation = "https://docs.rs/rustc_version/";
            readme = "README.md";
            keywords = [
              "version"
              "rustc"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/Kimundi/rustc-version-rs";
          };
          dependencies = {
            semver = {
              version = "0.9";
            };
          };
          badges = {
            travis-ci = {
              repository = "Kimundi/rustc-version-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.0" = mkRustCrate {
        package-id = "ryu 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "ryu";
          version = "1.0.0";
          sha256 = "c92464b447c0ee8c4fb3824ecc8383b81717b9f1e74ba2e72540aef7b9f82997";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "ryu";
            version = "1.0.0";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            build = "build.rs";
            description = "Fast floating point to string conversion";
            documentation = "https://docs.rs/ryu";
            readme = "README.md";
            license = "Apache-2.0 OR BSL-1.0";
            repository = "https://github.com/dtolnay/ryu";
          };
          dependencies = {
            no-panic = {
              version = "0.1";
              optional = true;
            };
          };
          dev-dependencies = {
            num_cpus = {
              version = "1.8";
            };
            rand = {
              version = "0.5";
            };
          };
          features = {
            small = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/ryu";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".scoped_threadpool."0.1.9" = mkRustCrate {
        package-id = "scoped_threadpool 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "scoped_threadpool";
          version = "0.1.9";
          sha256 = "1d51f5df5af43ab3f1360b429fa5e0152ac5ce8c0bd6485cae490332e96846a8";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "scoped_threadpool";
            version = "0.1.9";
            authors = [
              "Marvin Löbel <loebel.marvin@gmail.com>"
            ];
            description = "A library for scoped and cached threadpools.";
            documentation = "http://kimundi.github.io/scoped-threadpool-rs/scoped_threadpool/index.html";
            readme = "README.md";
            keywords = [
              "thread"
              "scoped"
              "pool"
              "cached"
              "threadpool"
            ];
            license = "MIT";
            repository = "https://github.com/Kimundi/scoped-threadpool-rs";
          };
          dev-dependencies = {
            lazy_static = {
              version = "1.0";
            };
          };
          features = {
            nightly = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.0.0" = mkRustCrate {
        package-id = "scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "scopeguard";
          version = "1.0.0";
          sha256 = "b42e15e59b18a828bbf5c58ea01debb36b9b096346de35d941dcb89009f24a0d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "scopeguard";
            version = "1.0.0";
            authors = [
              "bluss"
            ];
            description = "A RAII scope guard that will run a given closure when it goes out of scope,\neven if the code between panics (assuming unwinding panic).\n\nDefines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as\nshorthands for guards with one of the implemented strategies.\n";
            documentation = "https://docs.rs/scopeguard/";
            keywords = [
              "scope-guard"
              "defer"
              "panic"
              "unwind"
            ];
            categories = [
              "rust-patterns"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/bluss/scopeguard";
            metadata = {
              release = {
                no-dev-version = true;
              };
            };
          };
          features = {
            default = [
              "use_std"
            ];
            use_std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".scroll."0.9.2" = mkRustCrate {
        package-id = "scroll 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "scroll";
          version = "0.9.2";
          sha256 = "2f84d114ef17fd144153d608fba7c446b0145d038985e7a8cc5d08bb0ce20383";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "rustc_version"
              "rustc_version"
            ];
            extern-name = "rustc_version";
            package-id = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "scroll_derive"
            ];
            extern-name = "scroll_derive";
            package-id = "scroll_derive 0.9.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "scroll";
            version = "0.9.2";
            authors = [
              "m4b <m4b.github.io@gmail.com>"
              "Ted Mielczarek <ted@mielczarek.org>"
            ];
            description = "A suite of powerful, extensible, generic, endian-aware Read/Write traits for byte buffers";
            documentation = "https://docs.rs/scroll";
            readme = "README.md";
            keywords = [
              "bytes"
              "endian"
              "immutable"
              "pread"
              "pwrite"
            ];
            license = "MIT";
            repository = "https://github.com/m4b/scroll";
          };
          dependencies = {
            scroll_derive = {
              version = "0.9";
              optional = true;
            };
          };
          dev-dependencies = {
            byteorder = {
              version = "1.0.0";
            };
            rayon = {
              version = "1.0.0";
            };
          };
          build-dependencies = {
            rustc_version = {
              version = "0.2";
            };
          };
          features = {
            default = [
              "std"
            ];
            derive = [
              "scroll_derive"
            ];
            std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".scroll_derive."0.9.5" = mkRustCrate {
        package-id = "scroll_derive 0.9.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "scroll_derive";
          version = "0.9.5";
          sha256 = "8f1aa96c45e7f5a91cb7fabe7b279f02fea7126239fc40b732316e8b6a2d0fcb";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "scroll_derive";
            version = "0.9.5";
            authors = [
              "m4b <m4b.github.io@gmail.com>"
              "Ted Mielczarek <ted@mielczarek.org>"
            ];
            description = "A macros 1.1 derive implementation for Pread and Pwrite traits from the scroll crate";
            documentation = "https://docs.rs/scroll_derive";
            readme = "README.md";
            keywords = [
              "derive"
              "macros"
              "pread"
              "pwrite"
              "bytes"
            ];
            license = "MIT";
            repository = "https://github.com/m4b/scroll_derive";
          };
          lib = {
            proc-macro = true;
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4";
            };
            quote = {
              version = "0.6";
            };
            syn = {
              version = "0.15";
            };
          };
          dev-dependencies = {
            scroll = {
              version = "0.9";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" = mkRustCrate {
        package-id = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "semver";
          version = "0.9.0";
          sha256 = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "semver-parser"
            ];
            extern-name = "semver_parser";
            package-id = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "semver";
            version = "0.9.0";
            authors = [
              "Steve Klabnik <steve@steveklabnik.com>"
              "The Rust Project Developers"
            ];
            description = "Semantic version parsing and comparison.\n";
            homepage = "https://docs.rs/crate/semver/";
            documentation = "https://docs.rs/crate/semver/";
            readme = "README.md";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/steveklabnik/semver";
          };
          dependencies = {
            semver-parser = {
              version = "0.7.0";
            };
            serde = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            crates-index = {
              version = "0.5.0";
            };
            serde_derive = {
              version = "1.0";
            };
            serde_json = {
              version = "1.0";
            };
            tempdir = {
              version = "0.3.4";
            };
          };
          features = {
            ci = [
              "serde"
            ];
            default = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "steveklabnik/semver";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" = mkRustCrate {
        package-id = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "semver-parser";
          version = "0.7.0";
          sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "semver-parser";
            version = "0.7.0";
            authors = [
              "Steve Klabnik <steve@steveklabnik.com>"
            ];
            description = "Parsing of the semver spec.\n";
            homepage = "https://github.com/steveklabnik/semver-parser";
            documentation = "https://docs.rs/semver-parser";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/steveklabnik/semver-parser";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.97" = mkRustCrate {
        package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "serde";
          version = "1.0.97";
          sha256 = "d46b3dfedb19360a74316866cef04687cd4d6a70df8e6a506c63512790769b72";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "serde_derive"
            ];
            extern-name = "serde_derive";
            package-id = "serde_derive 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "serde";
            version = "1.0.97";
            authors = [
              "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
              "David Tolnay <dtolnay@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "Cargo.toml"
              "build.rs"
              "src/**/*.rs"
              "crates-io.md"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "A generic serialization/deserialization framework";
            homepage = "https://serde.rs";
            documentation = "https://docs.serde.rs/serde/";
            readme = "crates-io.md";
            keywords = [
              "serde"
              "serialization"
              "no_std"
            ];
            categories = [
              "encoding"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/serde-rs/serde";
            metadata = {
              playground = {
                features = [
                  "derive"
                  "rc"
                ];
              };
            };
          };
          dependencies = {
            serde_derive = {
              version = "1.0";
              optional = true;
            };
          };
          dev-dependencies = {
            serde_derive = {
              version = "1.0";
            };
          };
          features = {
            alloc = [
            ];
            default = [
              "std"
            ];
            derive = [
              "serde_derive"
            ];
            rc = [
            ];
            std = [
            ];
            unstable = [
            ];
          };
          badges = {
            appveyor = {
              repository = "serde-rs/serde";
            };
            travis-ci = {
              repository = "serde-rs/serde";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.97" = mkRustCrate {
        package-id = "serde_derive 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "serde_derive";
          version = "1.0.97";
          sha256 = "c22a0820adfe2f257b098714323563dd06426502abbbce4f51b72ef544c5027f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "serde_derive";
            version = "1.0.97";
            authors = [
              "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "Cargo.toml"
              "src/**/*.rs"
              "crates-io.md"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]";
            homepage = "https://serde.rs";
            documentation = "https://serde.rs/derive.html";
            readme = "crates-io.md";
            keywords = [
              "serde"
              "serialization"
              "no_std"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/serde-rs/serde";
          };
          lib = {
            name = "serde_derive";
            proc-macro = true;
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4";
            };
            quote = {
              version = "0.6.3";
            };
            syn = {
              version = "0.15.22";
              features = [
                "visit"
              ];
            };
          };
          dev-dependencies = {
            serde = {
              version = "1.0";
            };
          };
          features = {
            default = [
            ];
            deserialize_in_place = [
            ];
          };
          badges = {
            appveyor = {
              repository = "serde-rs/serde";
            };
            travis-ci = {
              repository = "serde-rs/serde";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.40" = mkRustCrate {
        package-id = "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "serde_json";
          version = "1.0.40";
          sha256 = "051c49229f282f7c6f3813f8286cc1e3323e8051823fce42c7ea80fe13521704";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "itoa"
            ];
            extern-name = "itoa";
            package-id = "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "ryu"
            ];
            extern-name = "ryu";
            package-id = "ryu 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "serde_json";
            version = "1.0.40";
            authors = [
              "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "Cargo.toml"
              "src/**/*.rs"
              "README.md"
              "LICENSE-APACHE"
              "LICENSE-MIT"
            ];
            description = "A JSON serialization file format";
            documentation = "http://docs.serde.rs/serde_json/";
            readme = "README.md";
            keywords = [
              "json"
              "serde"
              "serialization"
            ];
            categories = [
              "encoding"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/serde-rs/json";
            metadata = {
              docs = {
                rs = {
                  features = [
                    "raw_value"
                    "unbounded_depth"
                  ];
                };
              };
              playground = {
                features = [
                  "raw_value"
                ];
              };
            };
          };
          dependencies = {
            indexmap = {
              version = "1.0";
              optional = true;
            };
            itoa = {
              version = "0.4.3";
            };
            ryu = {
              version = "1.0";
            };
            serde = {
              version = "1.0.60";
            };
          };
          dev-dependencies = {
            automod = {
              version = "0.1";
            };
            select-rustc = {
              version = "0.1";
            };
            serde_bytes = {
              version = "0.11";
            };
            serde_derive = {
              version = "1.0";
            };
            serde_stacker = {
              version = "0.1";
            };
            trybuild = {
              version = "1.0";
            };
          };
          features = {
            arbitrary_precision = [
            ];
            default = [
            ];
            preserve_order = [
              "indexmap"
            ];
            raw_value = [
            ];
            unbounded_depth = [
            ];
          };
          badges = {
            appveyor = {
              repository = "serde-rs/json";
            };
            travis-ci = {
              repository = "serde-rs/json";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".sha2."0.8.0" = mkRustCrate {
        package-id = "sha2 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "sha2";
          version = "0.8.0";
          sha256 = "7b4d8bfd0e469f417657573d8451fb33d16cfe0989359b93baf3a1ffc639543d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "block-buffer"
            ];
            extern-name = "block_buffer";
            package-id = "block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "digest"
            ];
            extern-name = "digest";
            package-id = "digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "fake-simd"
            ];
            extern-name = "fake_simd";
            package-id = "fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "opaque-debug"
            ];
            extern-name = "opaque_debug";
            package-id = "opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "sha2";
            version = "0.8.0";
            authors = [
              "RustCrypto Developers"
            ];
            description = "SHA-2 hash functions";
            documentation = "https://docs.rs/sha2";
            keywords = [
              "crypto"
              "sha2"
              "hash"
              "digest"
            ];
            categories = [
              "cryptography"
              "no-std"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/RustCrypto/hashes";
          };
          dependencies = {
            block-buffer = {
              version = "0.7";
            };
            digest = {
              version = "0.8";
            };
            fake-simd = {
              version = "0.1";
            };
            opaque-debug = {
              version = "0.2";
            };
            sha2-asm = {
              version = "0.5";
              optional = true;
            };
          };
          dev-dependencies = {
            digest = {
              version = "0.8";
              features = [
                "dev"
              ];
            };
            hex-literal = {
              version = "0.1";
            };
          };
          features = {
            asm = [
              "sha2-asm"
            ];
            default = [
              "std"
            ];
            std = [
              "digest/std"
            ];
          };
          badges = {
            travis-ci = {
              repository = "RustCrypto/hashes";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".shlex."0.1.1" = mkRustCrate {
        package-id = "shlex 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "shlex";
          version = "0.1.1";
          sha256 = "7fdf1b9db47230893d76faad238fd6097fd6d6a9245cd7a4d90dbd639536bbd2";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "shlex";
            version = "0.1.1";
            authors = [
              "comex <comexk@gmail.com>"
            ];
            description = "Split a string into shell words, like Python's shlex.\n";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/comex/rust-shlex";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".spin."0.5.0" = mkRustCrate {
        package-id = "spin 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "spin";
          version = "0.5.0";
          sha256 = "44363f6f51401c34e7be73db0db371c04705d35efbe9f7d6082e03a921a32c55";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "spin";
            version = "0.5.0";
            authors = [
              "Mathijs van de Nes <git@mathijs.vd-nes.nl>"
              "John Ericson <git@JohnEricson.me>"
            ];
            description = "Synchronization primitives based on spinning.\nThey may contain data, are usable without `std`,\nand static initializers are available.\n";
            documentation = "https://mvdnes.github.io/rust-docs/spin-rs/spin/index.html";
            keywords = [
              "spinlock"
              "mutex"
              "rwlock"
            ];
            license = "MIT";
            repository = "https://github.com/mvdnes/spin-rs.git";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".stable_deref_trait."1.1.1" = mkRustCrate {
        package-id = "stable_deref_trait 1.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "stable_deref_trait";
          version = "1.1.1";
          sha256 = "dba1a27d3efae4351c8051072d619e3ade2820635c3958d826bfea39d59b54c8";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "stable_deref_trait";
            version = "1.1.1";
            authors = [
              "Robert Grosse <n210241048576@gmail.com>"
            ];
            description = "An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental.\n";
            documentation = "https://docs.rs/stable_deref_trait/1.1.1/stable_deref_trait";
            readme = "README.md";
            categories = [
              "memory-management"
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/storyyeller/stable_deref_trait";
          };
          features = {
            alloc = [
            ];
            default = [
              "std"
            ];
            std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".string-interner."0.6.3" = mkRustCrate {
        package-id = "string-interner 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "string-interner";
          version = "0.6.3";
          sha256 = "abb38a0d8fe673c40b10b6b75abcb076a958cc10fb894f14993d9737c4c87000";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "string-interner";
            version = "0.6.3";
            authors = [
              "Robbepop"
            ];
            description = "A string interning data structure that was designed for minimal memory-overhead\nand fast access to the underlying interned string contents.\n";
            documentation = "https://docs.rs/string-interner";
            readme = "README.md";
            keywords = [
              "interner"
              "intern"
              "string"
              "str"
              "symbol"
            ];
            categories = [
              "data-structures"
            ];
            license = "MIT";
            repository = "https://github.com/robbepop/string-interner";
          };
          dependencies = {
            serde = {
              version = "1.0.0";
              optional = true;
            };
          };
          dev-dependencies = {
            fnv = {
              version = "1.0.0";
            };
            serde_json = {
              version = "1.0.0";
            };
          };
          features = {
            bench = [
            ];
            default = [
              "serde_support"
            ];
            serde_support = [
              "serde"
            ];
          };
          badges = {
            appveyor = {
              branch = "master";
              repository = "Robbepop/string-interner";
              service = "github";
            };
            travis-ci = {
              repository = "Robbepop/string-interner";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".strsim."0.8.0" = mkRustCrate {
        package-id = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "strsim";
          version = "0.8.0";
          sha256 = "8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "strsim";
            version = "0.8.0";
            authors = [
              "Danny Guo <dannyguo91@gmail.com>"
            ];
            description = "Implementations of string similarity metrics.\nIncludes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, and Jaro-Winkler.\n";
            homepage = "https://github.com/dguo/strsim-rs";
            documentation = "https://docs.rs/strsim/";
            readme = "README.md";
            keywords = [
              "string"
              "similarity"
              "Hamming"
              "Levenshtein"
              "Jaro"
            ];
            license = "MIT";
            repository = "https://github.com/dguo/strsim-rs";
          };
          badges = {
            appveyor = {
              repository = "dguo/strsim-rs";
            };
            travis-ci = {
              repository = "dguo/strsim-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".structopt."0.2.18" = mkRustCrate {
        package-id = "structopt 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "structopt";
          version = "0.2.18";
          sha256 = "16c2cdbf9cc375f15d1b4141bc48aeef444806655cd0e904207edc8d68d86ed7";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "clap"
            ];
            extern-name = "clap";
            package-id = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "structopt-derive"
            ];
            extern-name = "structopt_derive";
            package-id = "structopt-derive 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "structopt";
            version = "0.2.18";
            authors = [
              "Guillaume Pinot <texitoi@texitoi.eu>"
              "others"
            ];
            description = "Parse command line argument by defining a struct.";
            documentation = "https://docs.rs/structopt";
            readme = "README.md";
            keywords = [
              "clap"
              "cli"
              "derive"
              "docopt"
            ];
            categories = [
              "command-line-interface"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/TeXitoi/structopt";
          };
          dependencies = {
            clap = {
              version = "2.21";
              default-features = false;
            };
            structopt-derive = {
              version = "0.2.18";
            };
          };
          features = {
            color = [
              "clap/color"
            ];
            debug = [
              "clap/debug"
            ];
            default = [
              "clap/default"
            ];
            doc = [
              "clap/doc"
            ];
            lints = [
              "clap/lints"
            ];
            nightly = [
              "structopt-derive/nightly"
            ];
            no_cargo = [
              "clap/no_cargo"
            ];
            paw = [
              "structopt-derive/paw"
            ];
            suggestions = [
              "clap/suggestions"
            ];
            wrap_help = [
              "clap/wrap_help"
            ];
            yaml = [
              "clap/yaml"
            ];
          };
          badges = {
            travis-ci = {
              repository = "TeXitoi/structopt";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".structopt-derive."0.2.18" = mkRustCrate {
        package-id = "structopt-derive 0.2.18 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "structopt-derive";
          version = "0.2.18";
          sha256 = "53010261a84b37689f9ed7d395165029f9cc7abb9f56bbfe86bee2597ed25107";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "heck"
            ];
            extern-name = "heck";
            package-id = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "structopt-derive";
            version = "0.2.18";
            authors = [
              "Guillaume Pinot <texitoi@texitoi.eu>"
            ];
            description = "Parse command line argument by defining a struct, derive crate.";
            documentation = "https://docs.rs/structopt-derive";
            keywords = [
              "clap"
              "cli"
              "derive"
              "docopt"
            ];
            categories = [
              "command-line-interface"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/TeXitoi/structopt";
          };
          lib = {
            proc-macro = true;
          };
          dependencies = {
            heck = {
              version = "^0.3.0";
            };
            proc-macro2 = {
              version = "0.4";
            };
            quote = {
              version = "0.6";
            };
            syn = {
              version = "0.15";
            };
          };
          features = {
            nightly = [
              "proc-macro2/nightly"
            ];
            paw = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "TeXitoi/structopt";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".syn."0.15.42" = mkRustCrate {
        package-id = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "syn";
          version = "0.15.42";
          sha256 = "eadc09306ca51a40555dd6fc2b415538e9e18bc9f870e47b1a524a79fe2dcf5e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-xid"
              "unicode-xid"
            ];
            extern-name = "unicode_xid";
            package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "syn";
            version = "0.15.42";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            include = [
              "/benches/**"
              "/build.rs"
              "/Cargo.toml"
              "/LICENSE-APACHE"
              "/LICENSE-MIT"
              "/README.md"
              "/src/**"
              "/tests/**"
            ];
            description = "Parser for Rust source code";
            documentation = "https://docs.rs/syn";
            readme = "README.md";
            categories = [
              "development-tools::procedural-macro-helpers"
            ];
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/dtolnay/syn";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                };
              };
              playground = {
                all-features = true;
              };
            };
          };
          bench = [
            {
              name = "rust";
              harness = false;
              required-features = [
                "full"
                "parsing"
              ];
              edition = "2018";
            }
            {
              name = "file";
              required-features = [
                "full"
                "parsing"
              ];
              edition = "2018";
            }
          ];
          dependencies = {
            proc-macro2 = {
              version = "0.4.4";
              default-features = false;
            };
            quote = {
              version = "0.6";
              optional = true;
              default-features = false;
            };
            unicode-xid = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            insta = {
              version = "0.8";
            };
            rayon = {
              version = "1.0";
            };
            ref-cast = {
              version = "0.2";
            };
            regex = {
              version = "1.0";
            };
            termcolor = {
              version = "1.0";
            };
            walkdir = {
              version = "2.1";
            };
          };
          features = {
            clone-impls = [
            ];
            default = [
              "derive"
              "parsing"
              "printing"
              "clone-impls"
              "proc-macro"
            ];
            derive = [
            ];
            extra-traits = [
            ];
            fold = [
            ];
            full = [
            ];
            parsing = [
            ];
            printing = [
              "quote"
            ];
            proc-macro = [
              "proc-macro2/proc-macro"
              "quote/proc-macro"
            ];
            visit = [
            ];
            visit-mut = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "dtolnay/syn";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.10.2" = mkRustCrate {
        package-id = "synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "synstructure";
          version = "0.10.2";
          sha256 = "02353edf96d6e4dc81aea2d8490a7e9db177bf8acb0e951c24940bf866cb313f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "proc-macro2"
            ];
            extern-name = "proc_macro2";
            package-id = "proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "unicode-xid"
            ];
            extern-name = "unicode_xid";
            package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "synstructure";
            version = "0.10.2";
            authors = [
              "Nika Layzell <nika@thelayzells.com>"
            ];
            include = [
              "src/**/*"
              "Cargo.toml"
              "README.md"
              "LICENSE"
            ];
            description = "Helper methods and macros for custom derives";
            documentation = "https://docs.rs/synstructure";
            readme = "README.md";
            keywords = [
              "syn"
              "macros"
              "derive"
              "expand_substructure"
              "enum"
            ];
            license = "MIT";
            repository = "https://github.com/mystor/synstructure";
          };
          dependencies = {
            proc-macro2 = {
              version = "0.4";
            };
            quote = {
              version = "0.6";
            };
            syn = {
              version = "0.15";
              features = [
                "visit"
                "extra-traits"
              ];
            };
            unicode-xid = {
              version = "0.1";
            };
          };
          dev-dependencies = {
            synstructure_test_traits = {
              version = "0.1";
            };
          };
          features = {
            simple-derive = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".target-lexicon."0.3.0" = mkRustCrate {
        package-id = "target-lexicon 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "target-lexicon";
          version = "0.3.0";
          sha256 = "d6923974ce4eb5bd28814756256d8ab71c28dd6e7483313fe7ab6614306bf633";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde_json"
            ];
            extern-name = "serde_json";
            package-id = "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "target-lexicon";
            version = "0.3.0";
            authors = [
              "Dan Gohman <sunfish@mozilla.com>"
            ];
            description = "Targeting utilities for compilers and related tools";
            documentation = "https://docs.rs/target-lexicon/";
            readme = "README.md";
            keywords = [
              "target"
              "host"
              "triple"
              "compiler"
              "jit"
            ];
            categories = [
              "no-std"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/target-lexicon";
          };
          dependencies = {
            failure = {
              version = "0.1.3";
              features = [
                "derive"
              ];
              default-features = false;
            };
            failure_derive = {
              version = "0.1.3";
              default-features = false;
            };
          };
          build-dependencies = {
            serde_json = {
              version = "1.0";
            };
          };
          features = {
            default = [
              "std"
            ];
            std = [
            ];
          };
          badges = {
            maintenance = {
              status = "passively-maintained";
            };
            travis-ci = {
              repository = "CraneStation/target-lexicon";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".target-lexicon."0.4.0" = mkRustCrate {
        package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "target-lexicon";
          version = "0.4.0";
          sha256 = "1b0ab4982b8945c35cc1c46a83a9094c414f6828a099ce5dcaa8ee2b04642dcb";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "failure"
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde_json"
              "serde_json"
            ];
            extern-name = "serde_json";
            package-id = "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "target-lexicon";
            version = "0.4.0";
            authors = [
              "Dan Gohman <sunfish@mozilla.com>"
            ];
            description = "Targeting utilities for compilers and related tools";
            documentation = "https://docs.rs/target-lexicon/";
            readme = "README.md";
            keywords = [
              "target"
              "host"
              "triple"
              "compiler"
              "jit"
            ];
            categories = [
              "no-std"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/target-lexicon";
          };
          dependencies = {
            failure = {
              version = "0.1.3";
              features = [
                "derive"
              ];
              default-features = false;
            };
            failure_derive = {
              version = "0.1.3";
              default-features = false;
            };
          };
          build-dependencies = {
            serde_json = {
              version = "1.0";
            };
          };
          features = {
            default = [
              "std"
            ];
            std = [
            ];
          };
          badges = {
            maintenance = {
              status = "passively-maintained";
            };
            travis-ci = {
              repository = "CraneStation/target-lexicon";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.0.5" = mkRustCrate {
        package-id = "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "termcolor";
          version = "1.0.5";
          sha256 = "96d6098003bde162e4277c70665bd87c326f5a0c3f3fbfb285787fa482d54e6e";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "wincolor"
            ];
            extern-name = "wincolor";
            package-id = "wincolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "termcolor";
            version = "1.0.5";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
            ];
            exclude = [
              "/.travis.yml"
              "/appveyor.yml"
              "/ci/**"
            ];
            description = "A simple cross platform library for writing colored text to a terminal.\n";
            homepage = "https://github.com/BurntSushi/termcolor";
            documentation = "https://docs.rs/termcolor";
            readme = "README.md";
            keywords = [
              "windows"
              "win"
              "color"
              "ansi"
              "console"
            ];
            license = "Unlicense OR MIT";
            repository = "https://github.com/BurntSushi/termcolor";
          };
          lib = {
            name = "termcolor";
            bench = false;
          };
          target = {
            "cfg(windows)" = {
              dependencies = {
                wincolor = {
                  version = "1";
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" = mkRustCrate {
        package-id = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "textwrap";
          version = "0.11.0";
          sha256 = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "unicode-width"
            ];
            extern-name = "unicode_width";
            package-id = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "textwrap";
            version = "0.11.0";
            authors = [
              "Martin Geisler <martin@geisler.net>"
            ];
            exclude = [
              ".dir-locals.el"
            ];
            description = "Textwrap is a small library for word wrapping, indenting, and\ndedenting strings.\n\nYou can use it to format strings (such as help and error messages) for\ndisplay in commandline applications. It is designed to be efficient\nand handle Unicode characters correctly.\n";
            documentation = "https://docs.rs/textwrap/";
            readme = "README.md";
            keywords = [
              "text"
              "formatting"
              "wrap"
              "typesetting"
              "hyphenation"
            ];
            categories = [
              "text-processing"
              "command-line-interface"
            ];
            license = "MIT";
            repository = "https://github.com/mgeisler/textwrap";
            metadata = {
              docs = {
                rs = {
                  all-features = true;
                };
              };
            };
          };
          dependencies = {
            hyphenation = {
              version = "0.7.1";
              features = [
                "embed_all"
              ];
              optional = true;
            };
            term_size = {
              version = "0.3.0";
              optional = true;
            };
            unicode-width = {
              version = "0.1.3";
            };
          };
          dev-dependencies = {
            lipsum = {
              version = "0.6";
            };
            rand = {
              version = "0.6";
            };
            rand_xorshift = {
              version = "0.1";
            };
            version-sync = {
              version = "0.6";
            };
          };
          badges = {
            appveyor = {
              repository = "mgeisler/textwrap";
            };
            codecov = {
              repository = "mgeisler/textwrap";
            };
            travis-ci = {
              repository = "mgeisler/textwrap";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".thread_local."0.3.6" = mkRustCrate {
        package-id = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "thread_local";
          version = "0.3.6";
          sha256 = "c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "thread_local";
            version = "0.3.6";
            authors = [
              "Amanieu d'Antras <amanieu@gmail.com>"
            ];
            description = "Per-object thread-local storage";
            documentation = "https://amanieu.github.io/thread_local-rs/thread_local/index.html";
            readme = "README.md";
            keywords = [
              "thread_local"
              "concurrent"
              "thread"
            ];
            license = "Apache-2.0/MIT";
            repository = "https://github.com/Amanieu/thread_local-rs";
          };
          dependencies = {
            lazy_static = {
              version = "1.0";
            };
          };
          badges = {
            travis-ci = {
              repository = "Amanieu/thread_local-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".time."0.1.42" = mkRustCrate {
        package-id = "time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "time";
          version = "0.1.42";
          sha256 = "db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "redox_syscall"
            ];
            extern-name = "syscall";
            package-id = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "time";
            version = "0.1.42";
            authors = [
              "The Rust Project Developers"
            ];
            description = "Utilities for working with time-related functions in Rust.\n";
            homepage = "https://github.com/rust-lang/time";
            documentation = "https://doc.rust-lang.org/time";
            license = "MIT/Apache-2.0";
            repository = "https://github.com/rust-lang/time";
          };
          dependencies = {
            libc = {
              version = "0.2.1";
            };
            rustc-serialize = {
              version = "0.3";
              optional = true;
            };
          };
          dev-dependencies = {
            log = {
              version = "0.4";
            };
            winapi = {
              version = "0.3.0";
              features = [
                "std"
                "processthreadsapi"
                "winbase"
              ];
            };
          };
          target = {
            "cfg(target_os = \"redox\")" = {
              dependencies = {
                redox_syscall = {
                  version = "0.1";
                };
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3.0";
                  features = [
                    "std"
                    "minwinbase"
                    "minwindef"
                    "ntdef"
                    "profileapi"
                    "sysinfoapi"
                    "timezoneapi"
                  ];
                };
              };
            };
          };
          badges = {
            appveyor = {
              repository = "alexcrichton/time";
            };
            travis-ci = {
              repository = "rust-lang-deprecated/time";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".toml."0.5.1" = mkRustCrate {
        package-id = "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "toml";
          version = "0.5.1";
          sha256 = "b8c96d7873fa7ef8bdeb3a9cda3ac48389b4154f32b9803b4bc26220b677b039";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "toml";
            version = "0.5.1";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
            ];
            description = "A native Rust encoder and decoder of TOML-formatted files and streams. Provides\nimplementations of the standard Serialize/Deserialize traits for TOML data to\nfacilitate deserializing and serializing Rust structures.\n";
            homepage = "https://github.com/alexcrichton/toml-rs";
            documentation = "https://docs.rs/toml";
            readme = "README.md";
            keywords = [
              "encoding"
            ];
            categories = [
              "config"
              "encoding"
              "parser-implementations"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/alexcrichton/toml-rs";
          };
          dependencies = {
            linked-hash-map = {
              version = "0.5";
              optional = true;
            };
            serde = {
              version = "1.0";
            };
          };
          dev-dependencies = {
            serde_derive = {
              version = "1.0";
            };
            serde_json = {
              version = "1.0";
            };
          };
          features = {
            default = [
            ];
            preserve_order = [
              "linked-hash-map"
            ];
          };
          badges = {
            travis-ci = {
              repository = "alexcrichton/toml-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".trybuild."1.0.9" = mkRustCrate {
        package-id = "trybuild 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "trybuild";
          version = "1.0.9";
          sha256 = "f2e8e773ac21d176ee05243456b9f1a942cd1a586dab188ced05b8e8d58dc635";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "glob"
            ];
            extern-name = "glob";
            package-id = "glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde_json"
            ];
            extern-name = "serde_json";
            package-id = "serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "termcolor"
            ];
            extern-name = "termcolor";
            package-id = "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "toml"
            ];
            extern-name = "toml";
            package-id = "toml 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "trybuild";
            version = "1.0.9";
            authors = [
              "David Tolnay <dtolnay@gmail.com>"
            ];
            exclude = [
              "screenshots/*"
            ];
            description = "Test harness for ui tests of compiler diagnostics";
            documentation = "https://docs.rs/trybuild";
            readme = "README.md";
            license = "MIT OR Apache-2.0";
            repository = "https://github.com/dtolnay/trybuild";
          };
          dependencies = {
            glob = {
              version = "0.3";
            };
            lazy_static = {
              version = "1.3";
            };
            serde = {
              version = "1.0";
              features = [
                "derive"
              ];
            };
            serde_json = {
              version = "1.0";
            };
            termcolor = {
              version = "1.0";
            };
            toml = {
              version = "0.5";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".typenum."1.10.0" = mkRustCrate {
        package-id = "typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "typenum";
          version = "1.10.0";
          sha256 = "612d636f949607bdf9b123b4a6f6d966dedf3ff669f7f045890d3a4a73948169";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "typenum";
            version = "1.10.0";
            authors = [
              "Paho Lurie-Gregg <paho@paholg.com>"
              "Andre Bogus <bogusandre@gmail.com>"
            ];
            build = "build/main.rs";
            description = "Typenum is a Rust library for type-level numbers evaluated at compile time. It currently supports bits, unsigned integers, and signed integers. It also provides a type-level array of type-level numbers, but its implementation is incomplete.";
            documentation = "https://docs.rs/typenum";
            readme = "README.md";
            categories = [
              "no-std"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/paholg/typenum";
          };
          lib = {
            name = "typenum";
          };
          features = {
            i128 = [
            ];
            no_std = [
            ];
            strict = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".ucd-util."0.1.5" = mkRustCrate {
        package-id = "ucd-util 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "ucd-util";
          version = "0.1.5";
          sha256 = "fa9b3b49edd3468c0e6565d85783f51af95212b6fa3986a5500954f00b460874";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "ucd-util";
            version = "0.1.5";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
            ];
            description = "A small utility library for working with the Unicode character database.\n";
            homepage = "https://github.com/BurntSushi/ucd-generate";
            documentation = "https://docs.rs/ucd-util";
            readme = "README.md";
            keywords = [
              "unicode"
              "database"
              "character"
              "property"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/BurntSushi/ucd-generate";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.3.0" = mkRustCrate {
        package-id = "unicode-segmentation 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-segmentation";
          version = "1.3.0";
          sha256 = "1967f4cdfc355b37fd76d2a954fb2ed3871034eb4f26d60537d88795cfc332a9";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "unicode-segmentation";
            version = "1.3.0";
            authors = [
              "kwantam <kwantam@gmail.com>"
            ];
            exclude = [
              "target/*"
              "Cargo.lock"
              "scripts/tmp"
              "*.txt"
            ];
            description = "This crate provides Grapheme Cluster, Word and Sentence boundaries\naccording to Unicode Standard Annex #29 rules.\n";
            homepage = "https://github.com/unicode-rs/unicode-segmentation";
            documentation = "https://unicode-rs.github.io/unicode-segmentation";
            readme = "README.md";
            keywords = [
              "text"
              "unicode"
              "grapheme"
              "word"
              "boundary"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/unicode-rs/unicode-segmentation";
          };
          dev-dependencies = {
            quickcheck = {
              version = "0.7";
            };
          };
          features = {
            no_std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.5" = mkRustCrate {
        package-id = "unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-width";
          version = "0.1.5";
          sha256 = "882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "unicode-width";
            version = "0.1.5";
            authors = [
              "kwantam <kwantam@gmail.com>"
            ];
            exclude = [
              "target/*"
              "Cargo.lock"
            ];
            description = "Determine displayed width of `char` and `str` types\naccording to Unicode Standard Annex #11 rules.\n";
            homepage = "https://github.com/unicode-rs/unicode-width";
            documentation = "https://unicode-rs.github.io/unicode-width";
            readme = "README.md";
            keywords = [
              "text"
              "width"
              "unicode"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/unicode-rs/unicode-width";
          };
          features = {
            bench = [
            ];
            default = [
            ];
            no_std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.1.0" = mkRustCrate {
        package-id = "unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "unicode-xid";
          version = "0.1.0";
          sha256 = "fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "unicode-xid";
            version = "0.1.0";
            authors = [
              "erick.tryzelaar <erick.tryzelaar@gmail.com>"
              "kwantam <kwantam@gmail.com>"
            ];
            exclude = [
              "target/*"
              "Cargo.lock"
            ];
            description = "Determine whether characters have the XID_Start\nor XID_Continue properties according to\nUnicode Standard Annex #31.\n";
            homepage = "https://github.com/unicode-rs/unicode-xid";
            documentation = "https://unicode-rs.github.io/unicode-xid";
            readme = "README.md";
            keywords = [
              "text"
              "unicode"
              "xid"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/unicode-rs/unicode-xid";
          };
          features = {
            bench = [
            ];
            default = [
            ];
            no_std = [
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.3" = mkRustCrate {
        package-id = "utf8-ranges 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "utf8-ranges";
          version = "1.0.3";
          sha256 = "9d50aa7650df78abf942826607c62468ce18d9019673d4a2ebe1865dbb96ffde";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "utf8-ranges";
            version = "1.0.3";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
            ];
            exclude = [
              "/ci/*"
              "/.travis.yml"
              "/Makefile"
              "/ctags.rust"
              "/session.vim"
            ];
            description = "Convert ranges of Unicode codepoints to UTF-8 byte ranges.";
            homepage = "https://github.com/BurntSushi/utf8-ranges";
            documentation = "https://docs.rs/utf8-ranges";
            readme = "README.md";
            keywords = [
              "codepoint"
              "utf8"
              "automaton"
              "range"
            ];
            license = "Unlicense/MIT";
            repository = "https://github.com/BurntSushi/utf8-ranges";
          };
          dev-dependencies = {
            doc-comment = {
              version = "0.3";
            };
            quickcheck = {
              version = "0.8";
              default-features = false;
            };
          };
          badges = {
            travis-ci = {
              repository = "BurntSushi/utf8-ranges";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.1" = mkRustCrate {
        package-id = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "vec_map";
          version = "0.8.1";
          sha256 = "05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "vec_map";
            version = "0.8.1";
            authors = [
              "Alex Crichton <alex@alexcrichton.com>"
              "Jorge Aparicio <japaricious@gmail.com>"
              "Alexis Beingessner <a.beingessner@gmail.com>"
              "Brian Anderson <>"
              "tbu- <>"
              "Manish Goregaokar <>"
              "Aaron Turon <aturon@mozilla.com>"
              "Adolfo Ochagavía <>"
              "Niko Matsakis <>"
              "Steven Fackler <>"
              "Chase Southwood <csouth3@illinois.edu>"
              "Eduard Burtescu <>"
              "Florian Wilkens <>"
              "Félix Raimundo <>"
              "Tibor Benke <>"
              "Markus Siemens <markus@m-siemens.de>"
              "Josh Branchaud <jbranchaud@gmail.com>"
              "Huon Wilson <dbau.pp@gmail.com>"
              "Corey Farwell <coref@rwell.org>"
              "Aaron Liblong <>"
              "Nick Cameron <nrc@ncameron.org>"
              "Patrick Walton <pcwalton@mimiga.net>"
              "Felix S Klock II <>"
              "Andrew Paseltiner <apaseltiner@gmail.com>"
              "Sean McArthur <sean.monstar@gmail.com>"
              "Vadim Petrochenkov <>"
            ];
            description = "A simple map based on a vector for small integer keys";
            homepage = "https://github.com/contain-rs/vec-map";
            documentation = "https://contain-rs.github.io/vec-map/vec_map";
            readme = "README.md";
            keywords = [
              "data-structures"
              "collections"
              "vecmap"
              "vec_map"
              "contain-rs"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/contain-rs/vec-map";
          };
          dependencies = {
            serde = {
              version = "1.0";
              features = [
                "derive"
              ];
              optional = true;
            };
          };
          features = {
            eders = [
              "serde"
            ];
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".version_check."0.1.5" = mkRustCrate {
        package-id = "version_check 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "version_check";
          version = "0.1.5";
          sha256 = "914b1a6776c4c929a602fafd8bc742e06365d4bcbe48c30f9cca5824f70dc9dd";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "version_check";
            version = "0.1.5";
            authors = [
              "Sergio Benitez <sb@sergio.bz>"
            ];
            description = "Tiny crate to check the version of the installed/running rustc.";
            documentation = "https://docs.rs/version_check/";
            readme = "README.md";
            keywords = [
              "version"
              "rustc"
              "minimum"
              "check"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/SergioBenitez/version_check";
          };
          dependencies = {
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".void."1.0.2" = mkRustCrate {
        package-id = "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "void";
          version = "1.0.2";
          sha256 = "6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "void";
            version = "1.0.2";
            authors = [
              "Jonathan Reem <jonathan.reem@gmail.com>"
            ];
            description = "The uninhabited void type for use in statically impossible cases.";
            readme = "README.md";
            license = "MIT";
            repository = "https://github.com/reem/rust-void.git";
          };
          features = {
            default = [
              "std"
            ];
            std = [
            ];
          };
        };
      };
      unknown.wasi-common."0.1.0" = mkRustCrate {
        package-id = "wasi-common 0.1.0";
        src = config.resolver {
          source = "unknown";
          name = "wasi-common";
          version = "0.1.0";
          sha256 = "0000000000000000000000000000000000000000000000000000";
          source-info = {
          };
        };
        dependencies = [
          {
            toml-names = [
              "cfg-if"
              "cfg-if"
            ];
            extern-name = "cfg_if";
            package-id = "cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-native"
            ];
            extern-name = "cranelift_native";
            package-id = "cranelift-native 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-wasm"
            ];
            extern-name = "cranelift_wasm";
            package-id = "cranelift-wasm 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "nix"
            ];
            extern-name = "nix";
            package-id = "nix 0.13.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "pretty_env_logger"
            ];
            extern-name = "pretty_env_logger";
            package-id = "pretty_env_logger 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rand"
            ];
            extern-name = "rand";
            package-id = "rand 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasi-common-cbindgen"
            ];
            extern-name = "wasi_common_cbindgen";
            package-id = "wasi-common-cbindgen 0.1.0";
          }
          {
            toml-names = [
              "wasmtime-environ"
            ];
            extern-name = "wasmtime_environ";
            package-id = "wasmtime-environ 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "wasmtime-jit"
            ];
            extern-name = "wasmtime_jit";
            package-id = "wasmtime-jit 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "wasmtime-runtime"
            ];
            extern-name = "wasmtime_runtime";
            package-id = "wasmtime-runtime 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "wasmtime-wasi"
            ];
            extern-name = "wasmtime_wasi";
            package-id = "wasmtime-wasi 0.0.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winx"
            ];
            extern-name = "winx";
            package-id = "winx 0.1.0";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasi-common";
            version = "0.1.0";
            authors = [
              "Adam C. Foltzer <acfoltzer@fastly.com>"
              "Frank Denis <github@pureftpd.org>"
              "Jakub Konka <kubkon@jakubkonka.com>"
              "Dan Gohman <sunfish@mozilla.com>"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
          };
          lib = {
            name = "wasi_common";
            crate-type = [
              "rlib"
              "staticlib"
              "cdylib"
            ];
          };
          dependencies = {
            cfg-if = "0.1.9";
            failure = "0.1";
            libc = "0.2";
            log = "0.4";
            rand = "0.6";
            wasi-common-cbindgen = {
              path = "wasi-common-cbindgen";
            };
          };
          dev-dependencies = {
            cranelift-codegen = "0.36.0";
            cranelift-entity = "0.36.0";
            cranelift-native = "0.36.0";
            cranelift-wasm = "0.36.0";
            pretty_env_logger = "0.3.0";
            target-lexicon = "0.3.0";
            wasmtime-environ = {
              git = "https://github.com/cranestation/wasmtime";
              rev = "165dc49";
            };
            wasmtime-jit = {
              git = "https://github.com/cranestation/wasmtime";
              rev = "165dc49";
            };
            wasmtime-runtime = {
              git = "https://github.com/cranestation/wasmtime";
              rev = "165dc49";
            };
            wasmtime-wasi = {
              git = "https://github.com/cranestation/wasmtime";
              rev = "165dc49";
            };
          };
          build-dependencies = {
            cfg-if = "0.1.9";
          };
          target = {
            "cfg(unix)" = {
              dependencies = {
                nix = "0.13";
              };
            };
            "cfg(windows)" = {
              dependencies = {
                winapi = "0.3";
                winx = {
                  path = "winx";
                };
              };
            };
          };
          patch = {
            "https://github.com/CraneStation/wasi-common" = {
              wasi-common = {
                path = ".";
              };
            };
          };
          workspace = {
            members = [
              "wasi-common-cbindgen"
            ];
            exclude = [
              "winx"
            ];
          };
        };
      };
      unknown.wasi-common-cbindgen."0.1.0" = mkRustCrate {
        package-id = "wasi-common-cbindgen 0.1.0";
        src = config.resolver {
          source = "unknown";
          name = "wasi-common-cbindgen";
          version = "0.1.0";
          sha256 = "0000000000000000000000000000000000000000000000000000";
          source-info = {
          };
        };
        dependencies = [
          {
            toml-names = [
              "quote"
            ];
            extern-name = "quote";
            package-id = "quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "syn"
            ];
            extern-name = "syn";
            package-id = "syn 0.15.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "trybuild"
            ];
            extern-name = "trybuild";
            package-id = "trybuild 1.0.9 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasi-common-cbindgen";
            version = "0.1.0";
            authors = [
              "Jakub Konka <kubkon@jakubkonka.com>"
            ];
          };
          lib = {
            proc-macro = true;
          };
          dependencies = {
            quote = "0.6.12";
            syn = {
              version = "0.15.34";
              features = [
                "full"
              ];
            };
          };
          dev-dependencies = {
            trybuild = "1.0.4";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".wasmparser."0.32.1" = mkRustCrate {
        package-id = "wasmparser 0.32.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "wasmparser";
          version = "0.32.1";
          sha256 = "22d1801de30f112ddaf665291097694ee33a36d1cb414b53a921d05b3519674a";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasmparser";
            version = "0.32.1";
            authors = [
              "Yury Delendik <ydelendik@mozilla.com>"
            ];
            exclude = [
              "fuzz/**/*"
              "tests/**/*"
            ];
            description = "A simple event-driven library for parsing WebAssembly binary files.\n";
            keywords = [
              "parser"
              "WebAssembly"
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/yurydelendik/wasmparser.rs";
          };
          bench = [
            {
              name = "benchmark";
              harness = false;
            }
          ];
          dependencies = {
            hashbrown = {
              version = "0.5.0";
              optional = true;
            };
          };
          dev-dependencies = {
            criterion = {
              version = "0.2";
            };
          };
          features = {
            core = [
              "hashbrown"
            ];
            default = [
              "std"
            ];
            std = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "yurydelendik/wasmparser.rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".wasmparser."0.34.0" = mkRustCrate {
        package-id = "wasmparser 0.34.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "wasmparser";
          version = "0.34.0";
          sha256 = "8030ec5a7c242a91941947fdb752e9a7c0929aced954ea23c54dad1cd2611850";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasmparser";
            version = "0.34.0";
            authors = [
              "Yury Delendik <ydelendik@mozilla.com>"
            ];
            exclude = [
              "fuzz/**/*"
              "tests/**/*"
            ];
            description = "A simple event-driven library for parsing WebAssembly binary files.\n";
            keywords = [
              "parser"
              "WebAssembly"
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/yurydelendik/wasmparser.rs";
          };
          bench = [
            {
              name = "benchmark";
              harness = false;
            }
          ];
          dependencies = {
            hashbrown = {
              version = "0.5.0";
              optional = true;
            };
          };
          dev-dependencies = {
            criterion = {
              version = "0.2";
            };
          };
          features = {
            core = [
              "hashbrown"
            ];
            default = [
              "std"
            ];
            std = [
            ];
          };
          badges = {
            travis-ci = {
              repository = "yurydelendik/wasmparser.rs";
            };
          };
        };
      };
      "git+https://github.com/cranestation/wasmtime".wasmtime-debug."0.1.0" = mkRustCrate {
        package-id = "wasmtime-debug 0.1.0 (git+https://github.com/cranestation/wasmtime)";
        src = config.resolver {
          source = "git+https://github.com/cranestation/wasmtime";
          name = "wasmtime-debug";
          version = "0.1.0";
          sha256 = "0cmn0k6hhpdf60jlcmb9jjh223isjwy45h1g1ji129l7dlipm0cn";
          source-info = {
            url = "https://github.com/cranestation/wasmtime";
            rev = "165dc4944d8b08cc602dbf027dc0affd0c01d340";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-wasm"
            ];
            extern-name = "cranelift_wasm";
            package-id = "cranelift-wasm 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "faerie"
            ];
            extern-name = "faerie";
            package-id = "faerie 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "gimli"
            ];
            extern-name = "gimli";
            package-id = "gimli 0.19.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasmparser"
            ];
            extern-name = "wasmparser";
            package-id = "wasmparser 0.34.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasmtime-environ"
            ];
            extern-name = "wasmtime_environ";
            package-id = "wasmtime-environ 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasmtime-debug";
            version = "0.1.0";
            authors = [
              "The Wasmtime Project Developers"
            ];
            description = "Debug utils for WebAsssembly code in Cranelift";
            documentation = "https://docs.rs/wasmtime-debug/";
            readme = "README.md";
            keywords = [
              "webassembly"
              "wasm"
              "debuginfo"
            ];
            categories = [
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/wasmtime";
          };
          dependencies = {
            cranelift-codegen = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-entity = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-wasm = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            faerie = "0.10.1";
            failure = {
              version = "0.1.3";
              default-features = false;
            };
            failure_derive = {
              version = "0.1.3";
              default-features = false;
            };
            gimli = "0.19.0";
            target-lexicon = {
              version = "0.4.0";
              default-features = false;
            };
            wasmparser = {
              version = "0.34.0";
            };
            wasmtime-environ = {
              path = "../wasmtime-environ";
              default-features = false;
            };
          };
          features = {
            core = [
              "cranelift-codegen/core"
              "cranelift-wasm/core"
            ];
            default = [
              "std"
            ];
            std = [
              "cranelift-codegen/std"
              "cranelift-wasm/std"
              "wasmtime-environ/std"
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/wasmtime";
            };
          };
        };
      };
      "git+https://github.com/cranestation/wasmtime".wasmtime-environ."0.1.0" = mkRustCrate {
        package-id = "wasmtime-environ 0.1.0 (git+https://github.com/cranestation/wasmtime)";
        src = config.resolver {
          source = "git+https://github.com/cranestation/wasmtime";
          name = "wasmtime-environ";
          version = "0.1.0";
          sha256 = "0cmn0k6hhpdf60jlcmb9jjh223isjwy45h1g1ji129l7dlipm0cn";
          source-info = {
            url = "https://github.com/cranestation/wasmtime";
            rev = "165dc4944d8b08cc602dbf027dc0affd0c01d340";
          };
        };
        dependencies = [
          {
            toml-names = [
              "base64"
            ];
            extern-name = "base64";
            package-id = "base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "bincode"
            ];
            extern-name = "bincode";
            package-id = "bincode 1.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-wasm"
            ];
            extern-name = "cranelift_wasm";
            package-id = "cranelift-wasm 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "directories"
            ];
            extern-name = "directories";
            package-id = "directories 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "indexmap"
            ];
            extern-name = "indexmap";
            package-id = "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "rayon"
            ];
            extern-name = "rayon";
            package-id = "rayon 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "serde"
            ];
            extern-name = "serde";
            package-id = "serde 1.0.97 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "sha2"
            ];
            extern-name = "sha2";
            package-id = "sha2 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "spin"
            ];
            extern-name = "spin";
            package-id = "spin 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasmtime-environ";
            version = "0.1.0";
            authors = [
              "The Wasmtime Project Developers"
            ];
            description = "Standalone environment support for WebAsssembly code in Cranelift";
            documentation = "https://docs.rs/wasmtime-environ/";
            readme = "README.md";
            keywords = [
              "webassembly"
              "wasm"
            ];
            categories = [
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/wasmtime";
          };
          dependencies = {
            base64 = "0.10.1";
            bincode = "1.1.4";
            cranelift-codegen = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-entity = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-wasm = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            directories = "2.0.1";
            failure = {
              version = "0.1.3";
              default-features = false;
            };
            failure_derive = {
              version = "0.1.3";
              default-features = false;
            };
            indexmap = "1.0.2";
            lazy_static = "1.3.0";
            lightbeam = {
              path = "../lightbeam";
              optional = true;
            };
            log = {
              version = "0.4.6";
              default-features = false;
            };
            rayon = "1.1";
            serde = {
              version = "1.0.94";
              features = [
                "derive"
              ];
            };
            sha2 = "0.8.0";
            spin = "0.5.0";
          };
          features = {
            core = [
              "cranelift-codegen/core"
              "cranelift-wasm/core"
            ];
            default = [
              "std"
            ];
            std = [
              "cranelift-codegen/std"
              "cranelift-wasm/std"
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/wasmtime";
            };
          };
        };
      };
      "git+https://github.com/cranestation/wasmtime".wasmtime-jit."0.1.0" = mkRustCrate {
        package-id = "wasmtime-jit 0.1.0 (git+https://github.com/cranestation/wasmtime)";
        src = config.resolver {
          source = "git+https://github.com/cranestation/wasmtime";
          name = "wasmtime-jit";
          version = "0.1.0";
          sha256 = "0cmn0k6hhpdf60jlcmb9jjh223isjwy45h1g1ji129l7dlipm0cn";
          source-info = {
            url = "https://github.com/cranestation/wasmtime";
            rev = "165dc4944d8b08cc602dbf027dc0affd0c01d340";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-frontend"
            ];
            extern-name = "cranelift_frontend";
            package-id = "cranelift-frontend 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-wasm"
            ];
            extern-name = "cranelift_wasm";
            package-id = "cranelift-wasm 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "region"
            ];
            extern-name = "region";
            package-id = "region 2.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasmparser"
            ];
            extern-name = "wasmparser";
            package-id = "wasmparser 0.34.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasmtime-debug"
            ];
            extern-name = "wasmtime_debug";
            package-id = "wasmtime-debug 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "wasmtime-environ"
            ];
            extern-name = "wasmtime_environ";
            package-id = "wasmtime-environ 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "wasmtime-runtime"
            ];
            extern-name = "wasmtime_runtime";
            package-id = "wasmtime-runtime 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasmtime-jit";
            version = "0.1.0";
            authors = [
              "The Wasmtime Project Developers"
            ];
            publish = false;
            description = "JIT-style execution for WebAsssembly code in Cranelift";
            readme = "README.md";
            keywords = [
              "webassembly"
              "wasm"
            ];
            categories = [
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/wasmtime";
          };
          dependencies = {
            cranelift-codegen = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-entity = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-frontend = "0.36.0";
            cranelift-wasm = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            failure = {
              version = "0.1.3";
              default-features = false;
            };
            failure_derive = {
              version = "0.1.3";
              default-features = false;
            };
            hashbrown = {
              version = "0.1.8";
              optional = true;
            };
            region = "2.0.0";
            target-lexicon = {
              version = "0.4.0";
              default-features = false;
            };
            wasmparser = "0.34.0";
            wasmtime-debug = {
              path = "../wasmtime-debug";
              default-features = false;
            };
            wasmtime-environ = {
              path = "../wasmtime-environ";
              default-features = false;
            };
            wasmtime-runtime = {
              path = "../wasmtime-runtime";
              default-features = false;
            };
          };
          features = {
            core = [
              "hashbrown/nightly"
              "cranelift-codegen/core"
              "cranelift-wasm/core"
              "wasmtime-environ/core"
            ];
            default = [
              "std"
            ];
            lightbeam = [
              "wasmtime-environ/lightbeam"
            ];
            std = [
              "cranelift-codegen/std"
              "cranelift-wasm/std"
              "wasmtime-environ/std"
            ];
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/wasmtime";
            };
          };
        };
      };
      "git+https://github.com/cranestation/wasmtime".wasmtime-runtime."0.1.0" = mkRustCrate {
        package-id = "wasmtime-runtime 0.1.0 (git+https://github.com/cranestation/wasmtime)";
        src = config.resolver {
          source = "git+https://github.com/cranestation/wasmtime";
          name = "wasmtime-runtime";
          version = "0.1.0";
          sha256 = "0cmn0k6hhpdf60jlcmb9jjh223isjwy45h1g1ji129l7dlipm0cn";
          source-info = {
            url = "https://github.com/cranestation/wasmtime";
            rev = "165dc4944d8b08cc602dbf027dc0affd0c01d340";
          };
        };
        dependencies = [
          {
            toml-names = [
              "bindgen"
            ];
            extern-name = "bindgen";
            package-id = "bindgen 0.50.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cmake"
            ];
            extern-name = "cmake";
            package-id = "cmake 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-wasm"
            ];
            extern-name = "cranelift_wasm";
            package-id = "cranelift-wasm 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "errno"
            ];
            extern-name = "errno";
            package-id = "errno 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "failure_derive"
            ];
            extern-name = "failure_derive";
            package-id = "failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "indexmap"
            ];
            extern-name = "indexmap";
            package-id = "indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "lazy_static"
            ];
            extern-name = "lazy_static";
            package-id = "lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "memoffset"
            ];
            extern-name = "memoffset";
            package-id = "memoffset 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "regex"
            ];
            extern-name = "regex";
            package-id = "regex 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "region"
            ];
            extern-name = "region";
            package-id = "region 2.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasmtime-environ"
            ];
            extern-name = "wasmtime_environ";
            package-id = "wasmtime-environ 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "wasmtime-runtime";
            version = "0.1.0";
            authors = [
              "The Wasmtime Project Developers"
            ];
            publish = false;
            description = "Runtime library support for Wasmtime";
            readme = "README.md";
            keywords = [
              "webassembly"
              "wasm"
            ];
            categories = [
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/wasmtime";
          };
          dependencies = {
            cranelift-codegen = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-entity = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-wasm = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            errno = "0.2.4";
            failure = {
              version = "0.1.3";
              default-features = false;
            };
            failure_derive = {
              version = "0.1.3";
              default-features = false;
            };
            indexmap = "1.0.2";
            lazy_static = "1.2.0";
            libc = {
              version = "0.2.48";
              default-features = false;
            };
            memoffset = "0.5.1";
            region = "2.0.0";
            wasmtime-environ = {
              path = "../wasmtime-environ";
              default-features = false;
            };
          };
          build-dependencies = {
            bindgen = "0.50.0";
            cmake = "0.1.35";
            regex = "1.0.6";
          };
          features = {
            default = [
              "std"
            ];
            std = [
              "cranelift-codegen/std"
              "cranelift-wasm/std"
              "wasmtime-environ/std"
            ];
          };
          target = {
            "cfg(target_os = \"windows\")" = {
              dependencies = {
                winapi = {
                  version = "0.3.6";
                  features = [
                    "winbase"
                    "memoryapi"
                  ];
                };
              };
            };
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/wasmtime";
            };
          };
        };
      };
      "git+https://github.com/cranestation/wasmtime".wasmtime-wasi."0.0.0" = mkRustCrate {
        package-id = "wasmtime-wasi 0.0.0 (git+https://github.com/cranestation/wasmtime)";
        src = config.resolver {
          source = "git+https://github.com/cranestation/wasmtime";
          name = "wasmtime-wasi";
          version = "0.0.0";
          sha256 = "0cmn0k6hhpdf60jlcmb9jjh223isjwy45h1g1ji129l7dlipm0cn";
          source-info = {
            url = "https://github.com/cranestation/wasmtime";
            rev = "165dc4944d8b08cc602dbf027dc0affd0c01d340";
          };
        };
        dependencies = [
          {
            toml-names = [
              "cranelift-codegen"
            ];
            extern-name = "cranelift_codegen";
            package-id = "cranelift-codegen 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-entity"
            ];
            extern-name = "cranelift_entity";
            package-id = "cranelift-entity 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "cranelift-wasm"
            ];
            extern-name = "cranelift_wasm";
            package-id = "cranelift-wasm 0.36.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "log"
            ];
            extern-name = "log";
            package-id = "log 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "target-lexicon"
            ];
            extern-name = "target_lexicon";
            package-id = "target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "wasi-common"
            ];
            extern-name = "wasi_common";
            package-id = "wasi-common 0.1.0";
          }
          {
            toml-names = [
              "wasmtime-environ"
            ];
            extern-name = "wasmtime_environ";
            package-id = "wasmtime-environ 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "wasmtime-jit"
            ];
            extern-name = "wasmtime_jit";
            package-id = "wasmtime-jit 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
          {
            toml-names = [
              "wasmtime-runtime"
            ];
            extern-name = "wasmtime_runtime";
            package-id = "wasmtime-runtime 0.1.0 (git+https://github.com/cranestation/wasmtime)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "wasmtime-wasi";
            version = "0.0.0";
            authors = [
              "The Cranelift Project Developers"
            ];
            publish = false;
            description = "WASI API support for Wasmtime";
            readme = "README.md";
            categories = [
              "wasm"
            ];
            license = "Apache-2.0 WITH LLVM-exception";
            repository = "https://github.com/CraneStation/wasmtime";
          };
          dependencies = {
            cranelift-codegen = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-entity = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            cranelift-wasm = {
              version = "0.36.0";
              features = [
                "enable-serde"
              ];
            };
            log = {
              version = "0.4.6";
              default-features = false;
            };
            target-lexicon = "0.4.0";
            wasi-common = {
              git = "https://github.com/CraneStation/wasi-common";
              rev = "c3994bf57b5d2f1f973b0e4e37bc385695aa4ed2";
            };
            wasmtime-environ = {
              path = "../wasmtime-environ";
            };
            wasmtime-jit = {
              path = "../wasmtime-jit";
            };
            wasmtime-runtime = {
              path = "../wasmtime-runtime";
            };
          };
          badges = {
            maintenance = {
              status = "experimental";
            };
            travis-ci = {
              repository = "CraneStation/wasmtime";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".which."2.0.1" = mkRustCrate {
        package-id = "which 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "which";
          version = "2.0.1";
          sha256 = "b57acb10231b9493c8472b20cb57317d0679a49e0bdbee44b3b803a6473af164";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "failure"
            ];
            extern-name = "failure";
            package-id = "failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "libc"
            ];
            extern-name = "libc";
            package-id = "libc 0.2.60 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "which";
            version = "2.0.1";
            authors = [
              "Harry Fei <tiziyuanfang@gmail.com>"
            ];
            description = "A Rust equivalent of Unix command \"which\". Locate installed execuable in cross platforms.";
            documentation = "https://docs.rs/which/";
            readme = "README.md";
            keywords = [
              "which"
              "which-rs"
              "unix"
              "command"
            ];
            categories = [
              "os"
              "filesystem"
            ];
            license = "MIT";
            repository = "https://github.com/harryfei/which-rs.git";
          };
          dependencies = {
            failure = {
              version = "0.1.1";
              features = [
                "std"
              ];
              default-features = false;
            };
            libc = {
              version = "0.2.10";
            };
          };
          dev-dependencies = {
            tempdir = {
              version = "0.3.4";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.7" = mkRustCrate {
        package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "winapi";
          version = "0.3.7";
          sha256 = "f10e386af2b13e47c89e7236a7a14a086791a2b88ebad6df9bf42040195cf770";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
              "winapi-i686-pc-windows-gnu"
            ];
            extern-name = "winapi_i686_pc_windows_gnu";
            package-id = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
              "winapi-x86_64-pc-windows-gnu"
            ];
            extern-name = "winapi_x86_64_pc_windows_gnu";
            package-id = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "winapi";
            version = "0.3.7";
            authors = [
              "Peter Atashian <retep998@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "/src/**/*"
              "/Cargo.toml"
              "/LICENSE-MIT"
              "/LICENSE-APACHE"
              "/build.rs"
              "/README.md"
            ];
            description = "Raw FFI bindings for all of Windows API.";
            documentation = "https://docs.rs/winapi/*/x86_64-pc-windows-msvc/winapi/";
            readme = "README.md";
            keywords = [
              "windows"
              "ffi"
              "win32"
              "com"
              "directx"
            ];
            categories = [
              "external-ffi-bindings"
              "no-std"
              "os::windows-apis"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/retep998/winapi-rs";
            metadata = {
              docs = {
                rs = {
                  default-target = "x86_64-pc-windows-msvc";
                  features = [
                    "everything"
                    "impl-debug"
                    "impl-default"
                  ];
                };
              };
            };
          };
          features = {
            accctrl = [
            ];
            aclapi = [
            ];
            activation = [
            ];
            appmgmt = [
            ];
            audioclient = [
            ];
            audiosessiontypes = [
            ];
            avrt = [
            ];
            basetsd = [
            ];
            bcrypt = [
            ];
            bits = [
            ];
            bits10_1 = [
            ];
            bits1_5 = [
            ];
            bits2_0 = [
            ];
            bits2_5 = [
            ];
            bits3_0 = [
            ];
            bits4_0 = [
            ];
            bits5_0 = [
            ];
            bitscfg = [
            ];
            bitsmsg = [
            ];
            bugcodes = [
            ];
            cderr = [
            ];
            cfg = [
            ];
            cfgmgr32 = [
            ];
            cguid = [
            ];
            combaseapi = [
            ];
            coml2api = [
            ];
            commapi = [
            ];
            commctrl = [
            ];
            commdlg = [
            ];
            commoncontrols = [
            ];
            consoleapi = [
            ];
            corsym = [
            ];
            d2d1 = [
            ];
            d2d1_1 = [
            ];
            d2d1_2 = [
            ];
            d2d1_3 = [
            ];
            d2d1effectauthor = [
            ];
            d2d1effects = [
            ];
            d2d1effects_1 = [
            ];
            d2d1effects_2 = [
            ];
            d2d1svg = [
            ];
            d2dbasetypes = [
            ];
            d3d = [
            ];
            d3d10 = [
            ];
            d3d10_1 = [
            ];
            d3d10_1shader = [
            ];
            d3d10effect = [
            ];
            d3d10misc = [
            ];
            d3d10sdklayers = [
            ];
            d3d10shader = [
            ];
            d3d11 = [
            ];
            d3d11_1 = [
            ];
            d3d11_2 = [
            ];
            d3d11_3 = [
            ];
            d3d11_4 = [
            ];
            d3d11on12 = [
            ];
            d3d11sdklayers = [
            ];
            d3d11shader = [
            ];
            d3d11tokenizedprogramformat = [
            ];
            d3d12 = [
            ];
            d3d12sdklayers = [
            ];
            d3d12shader = [
            ];
            d3d9 = [
            ];
            d3d9caps = [
            ];
            d3d9types = [
            ];
            d3dcommon = [
            ];
            d3dcompiler = [
            ];
            d3dcsx = [
            ];
            d3dkmdt = [
            ];
            d3dkmthk = [
            ];
            d3dukmdt = [
            ];
            d3dx10core = [
            ];
            d3dx10math = [
            ];
            d3dx10mesh = [
            ];
            datetimeapi = [
            ];
            davclnt = [
            ];
            dbghelp = [
            ];
            dbt = [
            ];
            dcommon = [
            ];
            dcomp = [
            ];
            dcompanimation = [
            ];
            dcomptypes = [
            ];
            dde = [
            ];
            ddraw = [
            ];
            ddrawi = [
            ];
            ddrawint = [
            ];
            debug = [
              "impl-debug"
            ];
            debugapi = [
            ];
            devguid = [
            ];
            devicetopology = [
            ];
            devpkey = [
            ];
            devpropdef = [
            ];
            dinput = [
            ];
            dinputd = [
            ];
            dispex = [
            ];
            dmksctl = [
            ];
            dmusicc = [
            ];
            docobj = [
            ];
            documenttarget = [
            ];
            dpa_dsa = [
            ];
            dpapi = [
            ];
            dsgetdc = [
            ];
            dsound = [
            ];
            dsrole = [
            ];
            dvp = [
            ];
            dwmapi = [
            ];
            dwrite = [
            ];
            dwrite_1 = [
            ];
            dwrite_2 = [
            ];
            dwrite_3 = [
            ];
            dxdiag = [
            ];
            dxfile = [
            ];
            dxgi = [
            ];
            dxgi1_2 = [
            ];
            dxgi1_3 = [
            ];
            dxgi1_4 = [
            ];
            dxgi1_5 = [
            ];
            dxgi1_6 = [
            ];
            dxgidebug = [
            ];
            dxgiformat = [
            ];
            dxgitype = [
            ];
            dxva2api = [
            ];
            dxvahd = [
            ];
            enclaveapi = [
            ];
            endpointvolume = [
            ];
            errhandlingapi = [
            ];
            everything = [
            ];
            evntcons = [
            ];
            evntprov = [
            ];
            evntrace = [
            ];
            excpt = [
            ];
            exdisp = [
            ];
            fibersapi = [
            ];
            fileapi = [
            ];
            gl-gl = [
            ];
            guiddef = [
            ];
            handleapi = [
            ];
            heapapi = [
            ];
            hidclass = [
            ];
            hidpi = [
            ];
            hidsdi = [
            ];
            hidusage = [
            ];
            highlevelmonitorconfigurationapi = [
            ];
            hstring = [
            ];
            http = [
            ];
            ifdef = [
            ];
            imm = [
            ];
            impl-debug = [
            ];
            impl-default = [
            ];
            in6addr = [
            ];
            inaddr = [
            ];
            inspectable = [
            ];
            interlockedapi = [
            ];
            intsafe = [
            ];
            ioapiset = [
            ];
            jobapi = [
            ];
            jobapi2 = [
            ];
            knownfolders = [
            ];
            ks = [
            ];
            ksmedia = [
            ];
            ktmtypes = [
            ];
            ktmw32 = [
            ];
            libloaderapi = [
            ];
            limits = [
            ];
            lmaccess = [
            ];
            lmalert = [
            ];
            lmapibuf = [
            ];
            lmat = [
            ];
            lmcons = [
            ];
            lmdfs = [
            ];
            lmerrlog = [
            ];
            lmjoin = [
            ];
            lmmsg = [
            ];
            lmremutl = [
            ];
            lmrepl = [
            ];
            lmserver = [
            ];
            lmshare = [
            ];
            lmstats = [
            ];
            lmsvc = [
            ];
            lmuse = [
            ];
            lmwksta = [
            ];
            lowlevelmonitorconfigurationapi = [
            ];
            lsalookup = [
            ];
            memoryapi = [
            ];
            minschannel = [
            ];
            minwinbase = [
            ];
            minwindef = [
            ];
            mmdeviceapi = [
            ];
            mmeapi = [
            ];
            mmreg = [
            ];
            mmsystem = [
            ];
            msaatext = [
            ];
            mscat = [
            ];
            mschapp = [
            ];
            mssip = [
            ];
            mstcpip = [
            ];
            mswsock = [
            ];
            mswsockdef = [
            ];
            namedpipeapi = [
            ];
            namespaceapi = [
            ];
            nb30 = [
            ];
            ncrypt = [
            ];
            netioapi = [
            ];
            ntddscsi = [
            ];
            ntddser = [
            ];
            ntdef = [
            ];
            ntlsa = [
            ];
            ntsecapi = [
            ];
            ntstatus = [
            ];
            oaidl = [
            ];
            objbase = [
            ];
            objidl = [
            ];
            objidlbase = [
            ];
            ocidl = [
            ];
            ole2 = [
            ];
            oleauto = [
            ];
            olectl = [
            ];
            oleidl = [
            ];
            opmapi = [
            ];
            pdh = [
            ];
            perflib = [
            ];
            physicalmonitorenumerationapi = [
            ];
            playsoundapi = [
            ];
            portabledevice = [
            ];
            portabledeviceapi = [
            ];
            portabledevicetypes = [
            ];
            powerbase = [
            ];
            powersetting = [
            ];
            powrprof = [
            ];
            processenv = [
            ];
            processsnapshot = [
            ];
            processthreadsapi = [
            ];
            processtopologyapi = [
            ];
            profileapi = [
            ];
            propidl = [
            ];
            propkeydef = [
            ];
            propsys = [
            ];
            prsht = [
            ];
            psapi = [
            ];
            qos = [
            ];
            realtimeapiset = [
            ];
            reason = [
            ];
            restartmanager = [
            ];
            restrictederrorinfo = [
            ];
            rmxfguid = [
            ];
            roapi = [
            ];
            robuffer = [
            ];
            roerrorapi = [
            ];
            rpc = [
            ];
            rpcdce = [
            ];
            rpcndr = [
            ];
            sapi = [
            ];
            sapi51 = [
            ];
            sapi53 = [
            ];
            sapiddk = [
            ];
            sapiddk51 = [
            ];
            schannel = [
            ];
            sddl = [
            ];
            securityappcontainer = [
            ];
            securitybaseapi = [
            ];
            servprov = [
            ];
            setupapi = [
            ];
            shellapi = [
            ];
            shellscalingapi = [
            ];
            shlobj = [
            ];
            shobjidl = [
            ];
            shobjidl_core = [
            ];
            shtypes = [
            ];
            spapidef = [
            ];
            spellcheck = [
            ];
            sporder = [
            ];
            sql = [
            ];
            sqlext = [
            ];
            sqltypes = [
            ];
            sqlucode = [
            ];
            sspi = [
            ];
            std = [
            ];
            stralign = [
            ];
            stringapiset = [
            ];
            strmif = [
            ];
            subauth = [
            ];
            synchapi = [
            ];
            sysinfoapi = [
            ];
            systemtopologyapi = [
            ];
            taskschd = [
            ];
            textstor = [
            ];
            threadpoolapiset = [
            ];
            threadpoollegacyapiset = [
            ];
            timeapi = [
            ];
            timezoneapi = [
            ];
            tlhelp32 = [
            ];
            transportsettingcommon = [
            ];
            tvout = [
            ];
            unknwnbase = [
            ];
            urlhist = [
            ];
            urlmon = [
            ];
            usb = [
            ];
            usbiodef = [
            ];
            usbspec = [
            ];
            userenv = [
            ];
            usp10 = [
            ];
            utilapiset = [
            ];
            uxtheme = [
            ];
            vadefs = [
            ];
            vcruntime = [
            ];
            vsbackup = [
            ];
            vss = [
            ];
            vsserror = [
            ];
            vswriter = [
            ];
            wbemads = [
            ];
            wbemcli = [
            ];
            wbemdisp = [
            ];
            wbemprov = [
            ];
            wbemtran = [
            ];
            wct = [
            ];
            werapi = [
            ];
            winbase = [
            ];
            wincodec = [
            ];
            wincodecsdk = [
            ];
            wincon = [
            ];
            wincontypes = [
            ];
            wincred = [
            ];
            wincrypt = [
            ];
            windef = [
            ];
            windowsceip = [
            ];
            windowsx = [
            ];
            winefs = [
            ];
            winerror = [
            ];
            winevt = [
            ];
            wingdi = [
            ];
            winhttp = [
            ];
            wininet = [
            ];
            winineti = [
            ];
            winioctl = [
            ];
            winnetwk = [
            ];
            winnls = [
            ];
            winnt = [
            ];
            winreg = [
            ];
            winsafer = [
            ];
            winscard = [
            ];
            winsmcrd = [
            ];
            winsock2 = [
            ];
            winspool = [
            ];
            winstring = [
            ];
            winsvc = [
            ];
            winusb = [
            ];
            winusbio = [
            ];
            winuser = [
            ];
            winver = [
            ];
            wmistr = [
            ];
            wnnc = [
            ];
            wow64apiset = [
            ];
            wpdmtpextensions = [
            ];
            ws2def = [
            ];
            ws2ipdef = [
            ];
            ws2spi = [
            ];
            ws2tcpip = [
            ];
            wtypes = [
            ];
            wtypesbase = [
            ];
            xinput = [
            ];
          };
          target = {
            i686-pc-windows-gnu = {
              dependencies = {
                winapi-i686-pc-windows-gnu = {
                  version = "0.4";
                };
              };
            };
            x86_64-pc-windows-gnu = {
              dependencies = {
                winapi-x86_64-pc-windows-gnu = {
                  version = "0.4";
                };
              };
            };
          };
          badges = {
            appveyor = {
              branch = "0.3";
              repository = "retep998/winapi-rs";
              service = "github";
            };
            travis-ci = {
              branch = "0.3";
              repository = "retep998/winapi-rs";
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = mkRustCrate {
        package-id = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "winapi-i686-pc-windows-gnu";
          version = "0.4.0";
          sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "winapi-i686-pc-windows-gnu";
            version = "0.4.0";
            authors = [
              "Peter Atashian <retep998@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "src/*"
              "lib/*"
              "Cargo.toml"
              "build.rs"
            ];
            description = "Import libraries for the i686-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.";
            keywords = [
              "windows"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/retep998/winapi-rs";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.2" = mkRustCrate {
        package-id = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "winapi-util";
          version = "0.1.2";
          sha256 = "7168bab6e1daee33b4557efd0e95d5ca70a03706d39fa5f3fe7a236f584b03c9";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "winapi-util";
            version = "0.1.2";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
            ];
            description = "A dumping ground for high level safe wrappers over winapi.";
            homepage = "https://github.com/BurntSushi/winapi-util";
            documentation = "https://docs.rs/winapi-util";
            readme = "README.md";
            keywords = [
              "windows"
              "winapi"
              "util"
              "win"
            ];
            categories = [
              "os::windows-apis"
              "external-ffi-bindings"
            ];
            license = "Unlicense/MIT";
            repository = "https://github.com/BurntSushi/winapi-util";
          };
          target = {
            "cfg(windows)" = {
              dependencies = {
                winapi = {
                  version = "0.3";
                  features = [
                    "std"
                    "consoleapi"
                    "errhandlingapi"
                    "fileapi"
                    "minwindef"
                    "processenv"
                    "winbase"
                    "wincon"
                    "winerror"
                    "winnt"
                  ];
                };
              };
            };
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = mkRustCrate {
        package-id = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "winapi-x86_64-pc-windows-gnu";
          version = "0.4.0";
          sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
        ];
        cargo-manifest = {
          package = {
            name = "winapi-x86_64-pc-windows-gnu";
            version = "0.4.0";
            authors = [
              "Peter Atashian <retep998@gmail.com>"
            ];
            build = "build.rs";
            include = [
              "src/*"
              "lib/*"
              "Cargo.toml"
              "build.rs"
            ];
            description = "Import libraries for the x86_64-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.";
            keywords = [
              "windows"
            ];
            license = "MIT/Apache-2.0";
            repository = "https://github.com/retep998/winapi-rs";
          };
        };
      };
      "registry+https://github.com/rust-lang/crates.io-index".wincolor."1.0.1" = mkRustCrate {
        package-id = "wincolor 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)";
        src = config.resolver {
          source = "registry+https://github.com/rust-lang/crates.io-index";
          name = "wincolor";
          version = "1.0.1";
          sha256 = "561ed901ae465d6185fa7864d63fbd5720d0ef718366c9a4dc83cf6170d7e9ba";
          source-info = {
            index = "registry+https://github.com/rust-lang/crates.io-index";
          };
        };
        dependencies = [
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi-util"
            ];
            extern-name = "winapi_util";
            package-id = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            name = "wincolor";
            version = "1.0.1";
            authors = [
              "Andrew Gallant <jamslam@gmail.com>"
            ];
            description = "A simple Windows specific API for controlling text color in a Windows console.\n";
            homepage = "https://github.com/BurntSushi/termcolor/tree/master/wincolor";
            documentation = "https://docs.rs/wincolor";
            readme = "README.md";
            keywords = [
              "windows"
              "win"
              "color"
              "ansi"
              "console"
            ];
            license = "Unlicense/MIT";
            repository = "https://github.com/BurntSushi/termcolor/tree/master/wincolor";
          };
          lib = {
            name = "wincolor";
            bench = false;
          };
          dependencies = {
            winapi = {
              version = "0.3";
              features = [
                "minwindef"
                "wincon"
              ];
            };
            winapi-util = {
              version = "0.1.1";
            };
          };
        };
      };
      unknown.winx."0.1.0" = mkRustCrate {
        package-id = "winx 0.1.0";
        src = config.resolver {
          source = "unknown";
          name = "winx";
          version = "0.1.0";
          sha256 = "0000000000000000000000000000000000000000000000000000";
          source-info = {
          };
        };
        dependencies = [
          {
            toml-names = [
              "bitflags"
            ];
            extern-name = "bitflags";
            package-id = "bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            toml-names = [
              "winapi"
            ];
            extern-name = "winapi";
            package-id = "winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        cargo-manifest = {
          package = {
            edition = "2018";
            name = "winx";
            version = "0.1.0";
            authors = [
              "Jakub Konka <kubkon@jakubkonka.com>"
            ];
          };
          dependencies = {
            bitflags = "1.0";
            winapi = {
              version = "0.3";
              features = [
                "std"
                "errhandlingapi"
                "handleapi"
                "processthreadsapi"
                "securitybaseapi"
                "winbase"
                "winerror"
                "ws2def"
                "fileapi"
                "aclapi"
              ];
            };
          };
        };
      };
    }))